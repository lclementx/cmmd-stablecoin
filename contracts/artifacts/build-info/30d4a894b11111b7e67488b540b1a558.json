{
	"id": "30d4a894b11111b7e67488b540b1a558",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CMMDPolicy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n//0xE42d0b39B4862462ECA4cC7f30da6680b9b86d32\npragma solidity 0.8.7;\n\nimport \"./SafeMathInt.sol\";\nimport \"./SafeMath.sol\";\n\ninterface ICMMD {\n    function totalSupply() external view returns (uint256);\n\n    function rebase(uint256 epoch, int256 supplyDelta) external returns (uint256);\n}\n\ninterface IOracle {\n    function getData() external returns (uint256, bool);\n}\n\n/**\n * @title CMMD Monetary Supply Policy\n * @dev This is an implementation of the CMMD Ideal Money protocol.\n *\n *      This component regulates the token supply of the CMMD ERC20 token in response to\n *      market oracles.\n */\ncontract CMMDPolicy {\n    event LogRebase(\n        uint256 indexed epoch,\n        uint256 exchangeRate,\n        uint256 cpi,\n        int256 requestedSupplyAdjustment,\n        uint256 timestampSec\n    );\n\n    ICMMD public cmmd;\n\n    // Provides the current CPI, as an 18 decimal fixed point number.\n    IOracle public cpiOracle;\n       \n    // Provides the current CPI, as an 18 decimal fixed point number.\n    IOracle public marketOracle;\n\n    // CPI value at the time of launch, as an 18 decimal fixed point number.\n    uint256 private baseCpi;\n\n    // If the current exchange rate is within this fractional distance from the target, no supply\n    // update is performed. Fixed point number--same format as the rate.\n    // (ie) abs(rate - targetRate) / targetRate < deviationThreshold, then no supply change.\n    // DECIMALS Fixed point number.\n    uint256 public deviationThreshold;\n\n    // The number of rebase cycles since inception\n    uint256 public epoch;\n\n    uint256 private constant DECIMALS = 18;\n\n    // Due to the expression in computeSupplyDelta(), MAX_RATE * MAX_SUPPLY must fit into an int256.\n    // Both are 18 decimals fixed point numbers.\n    uint256 private constant MAX_RATE = 10**6 * 10**DECIMALS;\n    // MAX_SUPPLY = MAX_INT256 / MAX_RATE\n    uint256 private constant MAX_SUPPLY = uint256(type(int256).max) / MAX_RATE;\n\n    // DECIMALS decimal fixed point numbers.\n    // Used in computation of  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*delta))) + Lower\n    int256 public rebaseFunctionLowerPercentage;\n    int256 public rebaseFunctionUpperPercentage;\n    int256 public rebaseFunctionGrowth;\n\n    int256 private constant ONE = int256(10**DECIMALS);\n\n    /**\n     * @notice Initiates a new rebase operation, provided the minimum time period has elapsed.\n     * @dev Changes supply with percentage of:\n     *  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower\n     */\n    function rebase() public {\n        epoch = epoch + 1;\n\n        uint256 cpi;\n        bool cpiValid;\n        (cpi, cpiValid) = cpiOracle.getData();\n        require(cpiValid);\n\n        uint256 targetRate = SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi));\n\n        uint256 exchangeRate;\n        bool rateValid;\n        (exchangeRate, rateValid) = marketOracle.getData();\n        require(rateValid);\n\n        if (exchangeRate > MAX_RATE) {\n            exchangeRate = MAX_RATE;\n        }\n\n        int256 supplyDelta = computeSupplyDelta(exchangeRate, targetRate);\n\n        if (supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY) {\n            supplyDelta = int256(MAX_SUPPLY - (cmmd.totalSupply()));\n        }\n\n        uint256 supplyAfterRebase = cmmd.rebase(epoch, supplyDelta);\n        assert(supplyAfterRebase <= MAX_SUPPLY);\n        emit LogRebase(epoch, exchangeRate, cpi, supplyDelta, block.timestamp);\n    }\n\n    /**\n     * @notice Sets the reference to the CPI oracle.\n     * @param cpiOracle_ The address of the cpi oracle contract.\n     */\n    function setCpiOracle(IOracle cpiOracle_) public {\n        cpiOracle = cpiOracle_;\n    }\n\n     /**\n     * @notice Sets the reference to the Market oracle.\n     * @param marketOracle_ The address of the market oracle contract.\n     */\n    function setMarketOracle(IOracle marketOracle_) public {\n        marketOracle = marketOracle_;\n    }\n\n\n    function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {\n        require(rebaseFunctionGrowth_ >= 0);\n        rebaseFunctionGrowth = rebaseFunctionGrowth_;\n    }\n\n    function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)\n        public\n    {\n        require(rebaseFunctionLowerPercentage_ <= 0);\n        rebaseFunctionLowerPercentage = rebaseFunctionLowerPercentage_;\n    }\n\n    function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)\n        public\n    {\n        require(rebaseFunctionUpperPercentage_ >= 0);\n        rebaseFunctionUpperPercentage = rebaseFunctionUpperPercentage_;\n    }\n\n    /**\n     * @notice Sets the deviation threshold fraction. If the exchange rate given by the market\n     *         oracle is within this fractional distance from the targetRate, then no supply\n     *         modifications are made. DECIMALS fixed point number.\n     * @param deviationThreshold_ The new exchange rate threshold fraction.\n     */\n    function setDeviationThreshold(uint256 deviationThreshold_) public {\n        deviationThreshold = deviationThreshold_;\n    }\n\n    /**\n     * @dev ZOS upgradable contract initialization method.\n     *      It is called at the time of contract creation to invoke parent class initializers and\n     *      initialize the contract's state variables.\n     */\n    function initialize(\n        ICMMD cmmd_,\n        uint256 baseCpi_\n    ) public {\n\n        // deviationThreshold = 0.05e18 = 5e16\n        deviationThreshold = 5 * 10**(DECIMALS - 2);\n\n        rebaseFunctionGrowth = int256(3 * (10**DECIMALS));\n        rebaseFunctionUpperPercentage = int256(10 * (10**(DECIMALS - 2))); // 0.1\n        rebaseFunctionLowerPercentage = int256((-10) * int256(10**(DECIMALS - 2))); // -0.1\n\n        epoch = 0;\n\n        cmmd = cmmd_;\n        baseCpi = baseCpi_;\n    }\n\n    /**\n     * Computes the percentage of supply to be added or removed:\n     * Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md\n     * @param normalizedRate value of rate/targetRate in DECIMALS decimal fixed point number\n     * @return The percentage of supply to be added or removed.\n     */\n    function computeRebasePercentage(\n        int256 normalizedRate,\n        int256 lower,\n        int256 upper,\n        int256 growth\n    ) public pure returns (int256) {\n        int256 delta;\n\n        delta = SafeMathInt.sub(normalizedRate,ONE);\n\n        // Compute: (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*delta))) + Lower\n\n        int256 exponent = SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE);\n        // Cap exponent to guarantee it is not too big for twoPower\n        if (exponent > SafeMathInt.mul(ONE,100)) {\n            exponent = SafeMathInt.mul(ONE,100);\n        }\n        if (exponent < SafeMathInt.mul(ONE,-100)) {\n            exponent = SafeMathInt.mul(ONE,-100);\n        }\n\n        int256 pow = SafeMathInt.twoPower(exponent, ONE); // 2^(Growth*Delta)\n        if (pow == 0) {\n            return lower;\n        }\n        int256 numerator = SafeMathInt.sub(upper,lower); //(Upper-Lower)\n        int256 intermediate = SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower);\n        intermediate = SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow);\n        int256 denominator = SafeMathInt.sub(ONE,intermediate); // (1-(Upper/Lower)/2^(Growth*delta)))\n\n        int256 rebasePercentage = (SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator)) + lower;\n        return rebasePercentage;\n    }\n\n    /**\n     * @return Computes the total supply adjustment in response to the exchange rate\n     *         and the targetRate.\n     */\n    function computeSupplyDelta(uint256 rate, uint256 targetRate) internal view returns (int256) {\n        if (withinDeviationThreshold(rate, targetRate)) {\n            return 0;\n        }\n        int256 targetRateSigned = int256(targetRate);\n        int256 normalizedRate = SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned);\n        int256 rebasePercentage = computeRebasePercentage(\n            normalizedRate,\n            rebaseFunctionLowerPercentage,\n            rebaseFunctionUpperPercentage,\n            rebaseFunctionGrowth\n        );\n\n        return SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE));\n    }\n\n    /**\n     * @param rate The current exchange rate, an 18 decimal fixed point number.\n     * @param targetRate The target exchange rate, an 18 decimal fixed point number.\n     * @return If the rate is within the deviation threshold from the target rate, returns true.\n     *         Otherwise, returns false.\n     */\n    function withinDeviationThreshold(uint256 rate, uint256 targetRate)\n        internal\n        view\n        returns (bool)\n    {\n        uint256 absoluteDeviationThreshold = SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS);  \n\n        return\n            (rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold) ||\n            (rate < targetRate && SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold);\n    }\n\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "pragma solidity 0.8.7;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two numbers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0); // Solidity only automatically asserts when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two numbers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}"
			},
			"contracts/SafeMathInt.sol": {
				"content": "/*\nMIT License\nCopyright (c) 2018 requestnetwork\nCopyright (c) 2018 Fragments, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.7;\n\n/**\n * @title SafeMathInt\n * @dev Math operations for int256 with overflow safety checks.\n */\nlibrary SafeMathInt {\n    int256 private constant MIN_INT256 = int256(1) << 255;\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\n\n    /**\n     * @dev Multiplies two int256 variables and fails on overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a * b;\n\n        // Detect overflow when multiplying MIN_INT256 with -1\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\n        require((b == 0) || (c / b == a));\n        return c;\n    }\n\n    /**\n     * @dev Division of two int256 variables and fails on overflow.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        // Prevent overflow when dividing MIN_INT256 by -1\n        require(b != -1 || a != MIN_INT256);\n\n        // Solidity already throws when dividing by 0.\n        return a / b;\n    }\n\n    /**\n     * @dev Subtracts two int256 variables and fails on overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a - b;\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\n        return c;\n    }\n\n    /**\n     * @dev Adds two int256 variables and fails on overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a + b;\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\n        return c;\n    }\n\n    /**\n     * @dev Converts to absolute value, and fails on overflow.\n     */\n    function abs(int256 a) internal pure returns (int256) {\n        require(a != MIN_INT256);\n        return a < 0 ? -a : a;\n    }\n\n    /**\n     * @dev Computes 2^exp with limited precision where -100 <= exp <= 100 * one\n     * @param one 1.0 represented in the same fixed point number format as exp\n     * @param exp The power to raise 2 to -100 <= exp <= 100 * one\n     * @return 2^exp represented with same number of decimals after the point as one\n     */\n    function twoPower(int256 exp, int256 one) internal pure returns (int256) {\n        bool reciprocal = false;\n        if (exp < 0) {\n            reciprocal = true;\n            exp = abs(exp);\n        }\n\n        // Precomputed values for 2^(1/2^i) in 18 decimals fixed point numbers\n        int256[5] memory ks = [\n            int256(1414213562373095049),\n            1189207115002721067,\n            1090507732665257659,\n            1044273782427413840,\n            1021897148654116678\n        ];\n        int256 whole = div(exp, one);\n        require(whole <= 100);\n        int256 result = mul(int256(uint256(1) << uint256(whole)), one);\n        int256 remaining = sub(exp, mul(whole, one));\n\n        int256 current = div(one, 2);\n        for (uint256 i = 0; i < 5; i++) {\n            if (remaining >= current) {\n                remaining = sub(remaining, current);\n                result = div(mul(result, ks[i]), 10**18); // 10**18 to match hardcoded ks values\n            }\n            current = div(current, 2);\n        }\n        if (reciprocal) {\n            result = div(mul(one, one), result);\n        }\n        return result;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CMMDPolicy.sol": {
				"CMMDPolicy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "exchangeRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cpi",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "requestedSupplyAdjustment",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestampSec",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cmmd",
							"outputs": [
								{
									"internalType": "contract ICMMD",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "normalizedRate",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "lower",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "upper",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "growth",
									"type": "int256"
								}
							],
							"name": "computeRebasePercentage",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cpiOracle",
							"outputs": [
								{
									"internalType": "contract IOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deviationThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ICMMD",
									"name": "cmmd_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "baseCpi_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketOracle",
							"outputs": [
								{
									"internalType": "contract IOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFunctionGrowth",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFunctionLowerPercentage",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFunctionUpperPercentage",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IOracle",
									"name": "cpiOracle_",
									"type": "address"
								}
							],
							"name": "setCpiOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deviationThreshold_",
									"type": "uint256"
								}
							],
							"name": "setDeviationThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IOracle",
									"name": "marketOracle_",
									"type": "address"
								}
							],
							"name": "setMarketOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "rebaseFunctionGrowth_",
									"type": "int256"
								}
							],
							"name": "setRebaseFunctionGrowth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "rebaseFunctionLowerPercentage_",
									"type": "int256"
								}
							],
							"name": "setRebaseFunctionLowerPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "rebaseFunctionUpperPercentage_",
									"type": "int256"
								}
							],
							"name": "setRebaseFunctionUpperPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is an implementation of the CMMD Ideal Money protocol.      This component regulates the token supply of the CMMD ERC20 token in response to      market oracles.",
						"kind": "dev",
						"methods": {
							"computeRebasePercentage(int256,int256,int256,int256)": {
								"params": {
									"normalizedRate": "value of rate/targetRate in DECIMALS decimal fixed point number"
								},
								"returns": {
									"_0": "The percentage of supply to be added or removed."
								}
							},
							"initialize(address,uint256)": {
								"details": "ZOS upgradable contract initialization method.      It is called at the time of contract creation to invoke parent class initializers and      initialize the contract's state variables."
							},
							"rebase()": {
								"details": "Changes supply with percentage of:  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower"
							},
							"setCpiOracle(address)": {
								"params": {
									"cpiOracle_": "The address of the cpi oracle contract."
								}
							},
							"setDeviationThreshold(uint256)": {
								"params": {
									"deviationThreshold_": "The new exchange rate threshold fraction."
								}
							},
							"setMarketOracle(address)": {
								"params": {
									"marketOracle_": "The address of the market oracle contract."
								}
							}
						},
						"title": "CMMD Monetary Supply Policy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CMMDPolicy.sol\":643:9083  contract CMMDPolicy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CMMDPolicy.sol\":643:9083  contract CMMDPolicy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x900cf0cf\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xaf14052c\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xaf14052c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd94ad837\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe9fa88a4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf4fefa49\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x900cf0cf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9db59b2f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9e30bac5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xab33c5ca\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x5ee01540\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x5ee01540\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x60961528\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7486cdea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8001066d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x3a785af1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3d6a46e5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4dafa35e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x53a15edc\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CMMDPolicy.sol\":6179:7490  function computeRebasePercentage(... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":3641:3729  function setCpiOracle(IOracle cpiOracle_) public {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":851:868  ICMMD public cmmd */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":4994:5118  function setDeviationThreshold(uint256 deviationThreshold_) public {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":2126:2169  int256 public rebaseFunctionLowerPercentage */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":1053:1080  IOracle public marketOracle */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":2224:2258  int256 public rebaseFunctionGrowth */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":3986:4162  function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":1585:1605  uint256 public epoch */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":2175:2218  int256 public rebaseFunctionUpperPercentage */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":3879:3979  function setMarketOracle(IOracle marketOracle_) public {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":945:969  IOracle public cpiOracle */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":2561:3501  function rebase() public {... */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":5352:5845  function initialize(... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":1494:1527  uint256 public deviationThreshold */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":4168:4401  function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)... */\n    tag_18:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":4407:4640  function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)... */\n    tag_19:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":6179:7490  function computeRebasePercentage(... */\n    tag_26:\n        /* \"contracts/CMMDPolicy.sol\":6337:6343  int256 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6355:6367  int256 delta */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":6386:6421  SafeMathInt.sub(normalizedRate,ONE) */\n      tag_84\n        /* \"contracts/CMMDPolicy.sol\":6402:6416  normalizedRate */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/CMMDPolicy.sol\":6386:6401  SafeMathInt.sub */\n      tag_87\n        /* \"contracts/CMMDPolicy.sol\":6386:6421  SafeMathInt.sub(normalizedRate,ONE) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/CMMDPolicy.sol\":6378:6421  delta = SafeMathInt.sub(normalizedRate,ONE) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6511:6526  int256 exponent */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6529:6579  SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE) */\n      tag_88\n        /* \"contracts/CMMDPolicy.sol\":6545:6574  SafeMathInt.mul(growth,delta) */\n      tag_89\n        /* \"contracts/CMMDPolicy.sol\":6561:6567  growth */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":6568:6573  delta */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":6545:6560  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":6545:6574  SafeMathInt.mul(growth,delta) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_91\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_91:\n        /* \"contracts/CMMDPolicy.sol\":6529:6544  SafeMathInt.div */\n      tag_92\n        /* \"contracts/CMMDPolicy.sol\":6529:6579  SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/CMMDPolicy.sol\":6511:6579  int256 exponent = SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6672:6696  SafeMathInt.mul(ONE,100) */\n      tag_93\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_94\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_94:\n        /* \"contracts/CMMDPolicy.sol\":6692:6695  100 */\n      0x64\n        /* \"contracts/CMMDPolicy.sol\":6672:6687  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":6672:6696  SafeMathInt.mul(ONE,100) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/CMMDPolicy.sol\":6661:6669  exponent */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":6661:6696  exponent > SafeMathInt.mul(ONE,100) */\n      sgt\n        /* \"contracts/CMMDPolicy.sol\":6657:6758  if (exponent > SafeMathInt.mul(ONE,100)) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":6723:6747  SafeMathInt.mul(ONE,100) */\n      tag_96\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_97\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_97:\n        /* \"contracts/CMMDPolicy.sol\":6743:6746  100 */\n      0x64\n        /* \"contracts/CMMDPolicy.sol\":6723:6738  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":6723:6747  SafeMathInt.mul(ONE,100) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/CMMDPolicy.sol\":6712:6747  exponent = SafeMathInt.mul(ONE,100) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6657:6758  if (exponent > SafeMathInt.mul(ONE,100)) {... */\n    tag_95:\n        /* \"contracts/CMMDPolicy.sol\":6782:6807  SafeMathInt.mul(ONE,-100) */\n      tag_98\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_99\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_99:\n        /* \"contracts/CMMDPolicy.sol\":6802:6806  -100 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\n        /* \"contracts/CMMDPolicy.sol\":6782:6797  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":6782:6807  SafeMathInt.mul(ONE,-100) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/CMMDPolicy.sol\":6771:6779  exponent */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":6771:6807  exponent < SafeMathInt.mul(ONE,-100) */\n      slt\n        /* \"contracts/CMMDPolicy.sol\":6767:6870  if (exponent < SafeMathInt.mul(ONE,-100)) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":6834:6859  SafeMathInt.mul(ONE,-100) */\n      tag_101\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_102\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_102:\n        /* \"contracts/CMMDPolicy.sol\":6854:6858  -100 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\n        /* \"contracts/CMMDPolicy.sol\":6834:6849  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":6834:6859  SafeMathInt.mul(ONE,-100) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/CMMDPolicy.sol\":6823:6859  exponent = SafeMathInt.mul(ONE,-100) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6767:6870  if (exponent < SafeMathInt.mul(ONE,-100)) {... */\n    tag_100:\n        /* \"contracts/CMMDPolicy.sol\":6880:6890  int256 pow */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6893:6928  SafeMathInt.twoPower(exponent, ONE) */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":6914:6922  exponent */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_104\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_104:\n        /* \"contracts/CMMDPolicy.sol\":6893:6913  SafeMathInt.twoPower */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":6893:6928  SafeMathInt.twoPower(exponent, ONE) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/CMMDPolicy.sol\":6880:6928  int256 pow = SafeMathInt.twoPower(exponent, ONE) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6969:6970  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6962:6965  pow */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":6962:6970  pow == 0 */\n      eq\n        /* \"contracts/CMMDPolicy.sol\":6958:7009  if (pow == 0) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":6993:6998  lower */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":6986:6998  return lower */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_83)\n        /* \"contracts/CMMDPolicy.sol\":6958:7009  if (pow == 0) {... */\n    tag_106:\n        /* \"contracts/CMMDPolicy.sol\":7018:7034  int256 numerator */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7037:7065  SafeMathInt.sub(upper,lower) */\n      tag_107\n        /* \"contracts/CMMDPolicy.sol\":7053:7058  upper */\n      dup8\n        /* \"contracts/CMMDPolicy.sol\":7059:7064  lower */\n      dup10\n        /* \"contracts/CMMDPolicy.sol\":7037:7052  SafeMathInt.sub */\n      tag_87\n        /* \"contracts/CMMDPolicy.sol\":7037:7065  SafeMathInt.sub(upper,lower) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/CMMDPolicy.sol\":7018:7065  int256 numerator = SafeMathInt.sub(upper,lower) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7091:7110  int256 intermediate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7113:7162  SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower) */\n      tag_108\n        /* \"contracts/CMMDPolicy.sol\":7129:7155  SafeMathInt.mul(upper,ONE) */\n      tag_109\n        /* \"contracts/CMMDPolicy.sol\":7145:7150  upper */\n      dup10\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_110\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_110:\n        /* \"contracts/CMMDPolicy.sol\":7129:7144  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":7129:7155  SafeMathInt.mul(upper,ONE) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/CMMDPolicy.sol\":7156:7161  lower */\n      dup11\n        /* \"contracts/CMMDPolicy.sol\":7113:7128  SafeMathInt.div */\n      tag_92\n        /* \"contracts/CMMDPolicy.sol\":7113:7162  SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/CMMDPolicy.sol\":7091:7162  int256 intermediate = SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7187:7241  SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow) */\n      tag_111\n        /* \"contracts/CMMDPolicy.sol\":7203:7236  SafeMathInt.mul(intermediate,ONE) */\n      tag_112\n        /* \"contracts/CMMDPolicy.sol\":7219:7231  intermediate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_113\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_113:\n        /* \"contracts/CMMDPolicy.sol\":7203:7218  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":7203:7236  SafeMathInt.mul(intermediate,ONE) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/CMMDPolicy.sol\":7237:7240  pow */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":7187:7202  SafeMathInt.div */\n      tag_92\n        /* \"contracts/CMMDPolicy.sol\":7187:7241  SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/CMMDPolicy.sol\":7172:7241  intermediate = SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7251:7269  int256 denominator */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7272:7305  SafeMathInt.sub(ONE,intermediate) */\n      tag_114\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_115\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_115:\n        /* \"contracts/CMMDPolicy.sol\":7292:7304  intermediate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":7272:7287  SafeMathInt.sub */\n      tag_87\n        /* \"contracts/CMMDPolicy.sol\":7272:7305  SafeMathInt.sub(ONE,intermediate) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/CMMDPolicy.sol\":7251:7305  int256 denominator = SafeMathInt.sub(ONE,intermediate) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7355:7378  int256 rebasePercentage */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7445:7450  lower */\n      dup11\n        /* \"contracts/CMMDPolicy.sol\":7382:7441  SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator) */\n      tag_116\n        /* \"contracts/CMMDPolicy.sol\":7398:7428  SafeMathInt.mul(numerator,ONE) */\n      tag_117\n        /* \"contracts/CMMDPolicy.sol\":7414:7423  numerator */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_118\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_118:\n        /* \"contracts/CMMDPolicy.sol\":7398:7413  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":7398:7428  SafeMathInt.mul(numerator,ONE) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/CMMDPolicy.sol\":7429:7440  denominator */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":7382:7397  SafeMathInt.div */\n      tag_92\n        /* \"contracts/CMMDPolicy.sol\":7382:7441  SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/CMMDPolicy.sol\":7381:7450  (SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator)) + lower */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/CMMDPolicy.sol\":7355:7450  int256 rebasePercentage = (SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator)) + lower */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7467:7483  rebasePercentage */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":7460:7483  return rebasePercentage */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6179:7490  function computeRebasePercentage(... */\n    tag_83:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":3641:3729  function setCpiOracle(IOracle cpiOracle_) public {... */\n    tag_32:\n        /* \"contracts/CMMDPolicy.sol\":3712:3722  cpiOracle_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":3700:3709  cpiOracle */\n      0x01\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3700:3722  cpiOracle = cpiOracle_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3641:3729  function setCpiOracle(IOracle cpiOracle_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":851:868  ICMMD public cmmd */\n    tag_34:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4994:5118  function setDeviationThreshold(uint256 deviationThreshold_) public {... */\n    tag_40:\n        /* \"contracts/CMMDPolicy.sol\":5092:5111  deviationThreshold_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":5071:5089  deviationThreshold */\n      0x04\n        /* \"contracts/CMMDPolicy.sol\":5071:5111  deviationThreshold = deviationThreshold_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4994:5118  function setDeviationThreshold(uint256 deviationThreshold_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2126:2169  int256 public rebaseFunctionLowerPercentage */\n    tag_42:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1053:1080  IOracle public marketOracle */\n    tag_45:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2224:2258  int256 public rebaseFunctionGrowth */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":3986:4162  function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {... */\n    tag_54:\n        /* \"contracts/CMMDPolicy.sol\":4099:4100  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4074:4095  rebaseFunctionGrowth_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":4074:4100  rebaseFunctionGrowth_ >= 0 */\n      slt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":4066:4101  require(rebaseFunctionGrowth_ >= 0) */\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n        /* \"contracts/CMMDPolicy.sol\":4134:4155  rebaseFunctionGrowth_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4111:4131  rebaseFunctionGrowth */\n      0x08\n        /* \"contracts/CMMDPolicy.sol\":4111:4155  rebaseFunctionGrowth = rebaseFunctionGrowth_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3986:4162  function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1585:1605  uint256 public epoch */\n    tag_56:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2175:2218  int256 public rebaseFunctionUpperPercentage */\n    tag_60:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":3879:3979  function setMarketOracle(IOracle marketOracle_) public {... */\n    tag_64:\n        /* \"contracts/CMMDPolicy.sol\":3959:3972  marketOracle_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":3944:3956  marketOracle */\n      0x02\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3944:3972  marketOracle = marketOracle_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3879:3979  function setMarketOracle(IOracle marketOracle_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":945:969  IOracle public cpiOracle */\n    tag_66:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2561:3501  function rebase() public {... */\n    tag_69:\n        /* \"contracts/CMMDPolicy.sol\":2612:2613  1 */\n      0x01\n        /* \"contracts/CMMDPolicy.sol\":2604:2609  epoch */\n      sload(0x05)\n        /* \"contracts/CMMDPolicy.sol\":2604:2613  epoch + 1 */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/CMMDPolicy.sol\":2596:2601  epoch */\n      0x05\n        /* \"contracts/CMMDPolicy.sol\":2596:2613  epoch = epoch + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2624:2635  uint256 cpi */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":2645:2658  bool cpiValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":2686:2695  cpiOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":2686:2703  cpiOracle.getData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3bc5de30\n        /* \"contracts/CMMDPolicy.sol\":2686:2705  cpiOracle.getData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/CMMDPolicy.sol\":2668:2705  (cpi, cpiValid) = cpiOracle.getData() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2723:2731  cpiValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":2715:2732  require(cpiValid) */\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n        /* \"contracts/CMMDPolicy.sol\":2743:2761  uint256 targetRate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":2764:2818  SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi)) */\n      tag_135\n        /* \"contracts/CMMDPolicy.sol\":2777:2807  SafeMath.mul(cpi,10**DECIMALS) */\n      tag_136\n        /* \"contracts/CMMDPolicy.sol\":2790:2793  cpi */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2794:2796  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2794:2806  10**DECIMALS */\n      tag_137\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_137:\n        /* \"contracts/CMMDPolicy.sol\":2777:2789  SafeMath.mul */\n      tag_138\n        /* \"contracts/CMMDPolicy.sol\":2777:2807  SafeMath.mul(cpi,10**DECIMALS) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/CMMDPolicy.sol\":2809:2816  baseCpi */\n      sload(0x03)\n        /* \"contracts/CMMDPolicy.sol\":2764:2776  SafeMath.div */\n      tag_139\n        /* \"contracts/CMMDPolicy.sol\":2764:2818  SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi)) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/CMMDPolicy.sol\":2743:2818  uint256 targetRate = SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi)) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2829:2849  uint256 exchangeRate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":2859:2873  bool rateValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":2911:2923  marketOracle */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":2911:2931  marketOracle.getData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3bc5de30\n        /* \"contracts/CMMDPolicy.sol\":2911:2933  marketOracle.getData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_143:\n        /* \"contracts/CMMDPolicy.sol\":2883:2933  (exchangeRate, rateValid) = marketOracle.getData() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2951:2960  rateValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":2943:2961  require(rateValid) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":1851:1853  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":1851:1863  10**DECIMALS */\n      tag_145\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_145:\n        /* \"contracts/CMMDPolicy.sol\":1843:1848  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":1843:1863  10**6 * 10**DECIMALS */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/CMMDPolicy.sol\":2976:2988  exchangeRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":2976:2999  exchangeRate > MAX_RATE */\n      gt\n        /* \"contracts/CMMDPolicy.sol\":2972:3049  if (exchangeRate > MAX_RATE) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":1851:1853  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":1851:1863  10**DECIMALS */\n      tag_149\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_149:\n        /* \"contracts/CMMDPolicy.sol\":1843:1848  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":1843:1863  10**6 * 10**DECIMALS */\n      tag_150\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_150:\n        /* \"contracts/CMMDPolicy.sol\":3015:3038  exchangeRate = MAX_RATE */\n      swap2\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2972:3049  if (exchangeRate > MAX_RATE) {... */\n    tag_148:\n        /* \"contracts/CMMDPolicy.sol\":3059:3077  int256 supplyDelta */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3080:3124  computeSupplyDelta(exchangeRate, targetRate) */\n      tag_151\n        /* \"contracts/CMMDPolicy.sol\":3099:3111  exchangeRate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":3113:3123  targetRate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":3080:3098  computeSupplyDelta */\n      tag_152\n        /* \"contracts/CMMDPolicy.sol\":3080:3124  computeSupplyDelta(exchangeRate, targetRate) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/CMMDPolicy.sol\":3059:3124  int256 supplyDelta = computeSupplyDelta(exchangeRate, targetRate) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3153:3154  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3139:3150  supplyDelta */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":3139:3154  supplyDelta > 0 */\n      sgt\n        /* \"contracts/CMMDPolicy.sol\":3139:3214  supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":1851:1853  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":1851:1863  10**DECIMALS */\n      tag_154\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_154:\n        /* \"contracts/CMMDPolicy.sol\":1843:1848  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":1843:1863  10**6 * 10**DECIMALS */\n      tag_155\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_155:\n        /* \"contracts/CMMDPolicy.sol\":1957:1973  type(int256).max */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CMMDPolicy.sol\":1949:1985  uint256(type(int256).max) / MAX_RATE */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/CMMDPolicy.sol\":3188:3199  supplyDelta */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":3158:3162  cmmd */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3158:3174  cmmd.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/CMMDPolicy.sol\":3158:3176  cmmd.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"contracts/CMMDPolicy.sol\":3158:3201  cmmd.totalSupply() + (uint256(supplyDelta)) */\n      tag_163\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_163:\n        /* \"contracts/CMMDPolicy.sol\":3158:3214  cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY */\n      gt\n        /* \"contracts/CMMDPolicy.sol\":3139:3214  supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY */\n    tag_153:\n        /* \"contracts/CMMDPolicy.sol\":3135:3296  if (supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":3265:3269  cmmd */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3265:3281  cmmd.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/CMMDPolicy.sol\":3265:3283  cmmd.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_168:\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":1851:1853  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":1851:1863  10**DECIMALS */\n      tag_169\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_169:\n        /* \"contracts/CMMDPolicy.sol\":1843:1848  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":1843:1863  10**6 * 10**DECIMALS */\n      tag_170\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_170:\n        /* \"contracts/CMMDPolicy.sol\":1957:1973  type(int256).max */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CMMDPolicy.sol\":1949:1985  uint256(type(int256).max) / MAX_RATE */\n      tag_171\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_171:\n        /* \"contracts/CMMDPolicy.sol\":3251:3284  MAX_SUPPLY - (cmmd.totalSupply()) */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/CMMDPolicy.sol\":3230:3285  supplyDelta = int256(MAX_SUPPLY - (cmmd.totalSupply())) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3135:3296  if (supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY) {... */\n    tag_164:\n        /* \"contracts/CMMDPolicy.sol\":3306:3331  uint256 supplyAfterRebase */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3334:3338  cmmd */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3334:3345  cmmd.rebase */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a43e23f\n        /* \"contracts/CMMDPolicy.sol\":3346:3351  epoch */\n      sload(0x05)\n        /* \"contracts/CMMDPolicy.sol\":3353:3364  supplyDelta */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":3334:3365  cmmd.rebase(epoch, supplyDelta) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_179:\n        /* \"contracts/CMMDPolicy.sol\":3306:3365  uint256 supplyAfterRebase = cmmd.rebase(epoch, supplyDelta) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":1851:1853  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":1851:1863  10**DECIMALS */\n      tag_180\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_180:\n        /* \"contracts/CMMDPolicy.sol\":1843:1848  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":1843:1863  10**6 * 10**DECIMALS */\n      tag_181\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_181:\n        /* \"contracts/CMMDPolicy.sol\":1957:1973  type(int256).max */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CMMDPolicy.sol\":1949:1985  uint256(type(int256).max) / MAX_RATE */\n      tag_182\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_182:\n        /* \"contracts/CMMDPolicy.sol\":3382:3399  supplyAfterRebase */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":3382:3413  supplyAfterRebase <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":3375:3414  assert(supplyAfterRebase <= MAX_SUPPLY) */\n      tag_183\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n    tag_183:\n        /* \"contracts/CMMDPolicy.sol\":3439:3444  epoch */\n      sload(0x05)\n        /* \"contracts/CMMDPolicy.sol\":3429:3494  LogRebase(epoch, exchangeRate, cpi, supplyDelta, block.timestamp) */\n      0x41d948a7f29cc695f5d4b3ec147f766bffa165ddd317470fbe05c86d0a9c3e04\n        /* \"contracts/CMMDPolicy.sol\":3446:3458  exchangeRate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":3460:3463  cpi */\n      dup10\n        /* \"contracts/CMMDPolicy.sol\":3465:3476  supplyDelta */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":3478:3493  block.timestamp */\n      timestamp\n        /* \"contracts/CMMDPolicy.sol\":3429:3494  LogRebase(epoch, exchangeRate, cpi, supplyDelta, block.timestamp) */\n      mload(0x40)\n      tag_186\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CMMDPolicy.sol\":2586:3501  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2561:3501  function rebase() public {... */\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":5352:5845  function initialize(... */\n    tag_73:\n        /* \"contracts/CMMDPolicy.sol\":5531:5532  2 */\n      0x02\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":5520:5532  DECIMALS - 2 */\n      tag_189\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"contracts/CMMDPolicy.sol\":5515:5517  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":5515:5533  10**(DECIMALS - 2) */\n      tag_190\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_190:\n        /* \"contracts/CMMDPolicy.sol\":5511:5512  5 */\n      0x05\n        /* \"contracts/CMMDPolicy.sol\":5511:5533  5 * 10**(DECIMALS - 2) */\n      tag_191\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_191:\n        /* \"contracts/CMMDPolicy.sol\":5490:5508  deviationThreshold */\n      0x04\n        /* \"contracts/CMMDPolicy.sol\":5490:5533  deviationThreshold = 5 * 10**(DECIMALS - 2) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":5579:5581  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":5579:5591  10**DECIMALS */\n      tag_192\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_192:\n        /* \"contracts/CMMDPolicy.sol\":5574:5575  3 */\n      0x03\n        /* \"contracts/CMMDPolicy.sol\":5574:5592  3 * (10**DECIMALS) */\n      tag_193\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_193:\n        /* \"contracts/CMMDPolicy.sol\":5544:5564  rebaseFunctionGrowth */\n      0x08\n        /* \"contracts/CMMDPolicy.sol\":5544:5593  rebaseFunctionGrowth = int256(3 * (10**DECIMALS)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5664:5665  2 */\n      0x02\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":5653:5665  DECIMALS - 2 */\n      tag_194\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_194:\n        /* \"contracts/CMMDPolicy.sol\":5648:5650  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":5648:5666  10**(DECIMALS - 2) */\n      tag_195\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_195:\n        /* \"contracts/CMMDPolicy.sol\":5642:5644  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":5642:5667  10 * (10**(DECIMALS - 2)) */\n      tag_196\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_196:\n        /* \"contracts/CMMDPolicy.sol\":5603:5632  rebaseFunctionUpperPercentage */\n      0x07\n        /* \"contracts/CMMDPolicy.sol\":5603:5668  rebaseFunctionUpperPercentage = int256(10 * (10**(DECIMALS - 2))) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5755:5756  2 */\n      0x02\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":5744:5756  DECIMALS - 2 */\n      tag_197\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_197:\n        /* \"contracts/CMMDPolicy.sol\":5739:5741  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":5739:5757  10**(DECIMALS - 2) */\n      tag_198\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_198:\n        /* \"contracts/CMMDPolicy.sol\":5725:5728  -10 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6\n        /* \"contracts/CMMDPolicy.sol\":5724:5758  (-10) * int256(10**(DECIMALS - 2)) */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/CMMDPolicy.sol\":5685:5714  rebaseFunctionLowerPercentage */\n      0x06\n        /* \"contracts/CMMDPolicy.sol\":5685:5759  rebaseFunctionLowerPercentage = int256((-10) * int256(10**(DECIMALS - 2))) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5786:5787  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":5778:5783  epoch */\n      0x05\n        /* \"contracts/CMMDPolicy.sol\":5778:5787  epoch = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5805:5810  cmmd_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":5798:5802  cmmd */\n      0x00\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":5798:5810  cmmd = cmmd_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5830:5838  baseCpi_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":5820:5827  baseCpi */\n      0x03\n        /* \"contracts/CMMDPolicy.sol\":5820:5838  baseCpi = baseCpi_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5352:5845  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1494:1527  uint256 public deviationThreshold */\n    tag_75:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4168:4401  function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)... */\n    tag_79:\n        /* \"contracts/CMMDPolicy.sol\":4320:4321  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4286:4316  rebaseFunctionLowerPercentage_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":4286:4321  rebaseFunctionLowerPercentage_ <= 0 */\n      sgt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":4278:4322  require(rebaseFunctionLowerPercentage_ <= 0) */\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n        /* \"contracts/CMMDPolicy.sol\":4364:4394  rebaseFunctionLowerPercentage_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4332:4361  rebaseFunctionLowerPercentage */\n      0x06\n        /* \"contracts/CMMDPolicy.sol\":4332:4394  rebaseFunctionLowerPercentage = rebaseFunctionLowerPercentage_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4168:4401  function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4407:4640  function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)... */\n    tag_82:\n        /* \"contracts/CMMDPolicy.sol\":4559:4560  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4525:4555  rebaseFunctionUpperPercentage_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":4525:4560  rebaseFunctionUpperPercentage_ >= 0 */\n      slt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":4517:4561  require(rebaseFunctionUpperPercentage_ >= 0) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/CMMDPolicy.sol\":4603:4633  rebaseFunctionUpperPercentage_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4571:4600  rebaseFunctionUpperPercentage */\n      0x07\n        /* \"contracts/CMMDPolicy.sol\":4571:4633  rebaseFunctionUpperPercentage = rebaseFunctionUpperPercentage_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4407:4640  function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":2230:2402  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_87:\n        /* \"contracts/SafeMathInt.sol\":2286:2292  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2304:2312  int256 c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":2319:2320  b */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2315:2316  a */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":2315:2320  a - b */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/SafeMathInt.sol\":2304:2320  int256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":2344:2345  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2339:2340  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2339:2345  b >= 0 */\n      slt\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2339:2355  b >= 0 && c <= a */\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":2354:2355  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2349:2350  c */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2349:2355  c <= a */\n      sgt\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2339:2355  b >= 0 && c <= a */\n    tag_208:\n        /* \"contracts/SafeMathInt.sol\":2338:2376  (b >= 0 && c <= a) || (b < 0 && c > a) */\n      dup1\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":2365:2366  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2361:2362  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2361:2366  b < 0 */\n      slt\n        /* \"contracts/SafeMathInt.sol\":2361:2375  b < 0 && c > a */\n      dup1\n      iszero\n      tag_210\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":2374:2375  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2370:2371  c */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2370:2375  c > a */\n      sgt\n        /* \"contracts/SafeMathInt.sol\":2361:2375  b < 0 && c > a */\n    tag_210:\n        /* \"contracts/SafeMathInt.sol\":2338:2376  (b >= 0 && c <= a) || (b < 0 && c > a) */\n    tag_209:\n        /* \"contracts/SafeMathInt.sol\":2330:2377  require((b >= 0 && c <= a) || (b < 0 && c > a)) */\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/SafeMathInt.sol\":2394:2395  c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":2387:2395  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":2230:2402  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":1503:1799  function mul(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_90:\n        /* \"contracts/SafeMathInt.sol\":1559:1565  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":1577:1585  int256 c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":1592:1593  b */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":1588:1589  a */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":1588:1593  a * b */\n      tag_213\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_213:\n        /* \"contracts/SafeMathInt.sol\":1577:1593  int256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":1675:1676  c */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":1675:1690  c != MIN_INT256 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":1675:1730  c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256) */\n      dup1\n      tag_214\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":1715:1716  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1715:1729  b & MIN_INT256 */\n      and\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":1695:1696  a */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":1695:1709  a & MIN_INT256 */\n      and\n        /* \"contracts/SafeMathInt.sol\":1694:1730  (a & MIN_INT256) != (b & MIN_INT256) */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":1675:1730  c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256) */\n    tag_214:\n        /* \"contracts/SafeMathInt.sol\":1667:1731  require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256)) */\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n        /* \"contracts/SafeMathInt.sol\":1755:1756  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":1750:1751  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1750:1756  b == 0 */\n      eq\n        /* \"contracts/SafeMathInt.sol\":1749:1773  (b == 0) || (c / b == a) */\n      dup1\n      tag_216\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":1771:1772  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1766:1767  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1762:1763  c */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":1762:1767  c / b */\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"contracts/SafeMathInt.sol\":1762:1772  c / b == a */\n      eq\n        /* \"contracts/SafeMathInt.sol\":1749:1773  (b == 0) || (c / b == a) */\n    tag_216:\n        /* \"contracts/SafeMathInt.sol\":1741:1774  require((b == 0) || (c / b == a)) */\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/SafeMathInt.sol\":1791:1792  c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":1784:1792  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":1503:1799  function mul(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":1889:2142  function div(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_92:\n        /* \"contracts/SafeMathInt.sol\":1945:1951  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2035:2037  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/SafeMathInt.sol\":2030:2031  b */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2030:2037  b != -1 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2030:2056  b != -1 || a != MIN_INT256 */\n      dup1\n      tag_221\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":2041:2042  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2041:2056  a != MIN_INT256 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2030:2056  b != -1 || a != MIN_INT256 */\n    tag_221:\n        /* \"contracts/SafeMathInt.sol\":2022:2057  require(b != -1 || a != MIN_INT256) */\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n        /* \"contracts/SafeMathInt.sol\":2134:2135  b */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2130:2131  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2130:2135  a / b */\n      tag_223\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_223:\n        /* \"contracts/SafeMathInt.sol\":2123:2135  return a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":1889:2142  function div(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":3202:4339  function twoPower(int256 exp, int256 one) internal pure returns (int256) {... */\n    tag_105:\n        /* \"contracts/SafeMathInt.sol\":3267:3273  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3285:3300  bool reciprocal */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":3303:3308  false */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3285:3308  bool reciprocal = false */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3328:3329  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3322:3325  exp */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":3322:3329  exp < 0 */\n      slt\n        /* \"contracts/SafeMathInt.sol\":3318:3401  if (exp < 0) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":3358:3362  true */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":3345:3362  reciprocal = true */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3382:3390  abs(exp) */\n      tag_226\n        /* \"contracts/SafeMathInt.sol\":3386:3389  exp */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":3382:3385  abs */\n      tag_227\n        /* \"contracts/SafeMathInt.sol\":3382:3390  abs(exp) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/SafeMathInt.sol\":3376:3390  exp = abs(exp) */\n      swap4\n      pop\n        /* \"contracts/SafeMathInt.sol\":3318:3401  if (exp < 0) {... */\n    tag_225:\n        /* \"contracts/SafeMathInt.sol\":3490:3509  int256[5] memory ks */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SafeMathInt.sol\":3533:3552  1414213562373095049 */\n      0x13a04bbdfdc9be89\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3567:3586  1189207115002721067 */\n      0x1080e992061ab32b\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3600:3619  1090507732665257659 */\n      0x0f2243014e544ebb\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3633:3652  1044273782427413840 */\n      0x0e7e0178e9d6ed50\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3666:3685  1021897148654116678 */\n      0x0e2e820ade835f46\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3705:3717  int256 whole */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3720:3733  div(exp, one) */\n      tag_228\n        /* \"contracts/SafeMathInt.sol\":3724:3727  exp */\n      dup7\n        /* \"contracts/SafeMathInt.sol\":3729:3732  one */\n      dup7\n        /* \"contracts/SafeMathInt.sol\":3720:3723  div */\n      tag_92\n        /* \"contracts/SafeMathInt.sol\":3720:3733  div(exp, one) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/SafeMathInt.sol\":3705:3733  int256 whole = div(exp, one) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3760:3763  100 */\n      0x64\n        /* \"contracts/SafeMathInt.sol\":3751:3756  whole */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":3751:3763  whole <= 100 */\n      sgt\n      iszero\n        /* \"contracts/SafeMathInt.sol\":3743:3764  require(whole <= 100) */\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n        /* \"contracts/SafeMathInt.sol\":3774:3787  int256 result */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3790:3836  mul(int256(uint256(1) << uint256(whole)), one) */\n      tag_230\n        /* \"contracts/SafeMathInt.sol\":3823:3828  whole */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":3809:3810  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":3801:3829  uint256(1) << uint256(whole) */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":3832:3835  one */\n      dup8\n        /* \"contracts/SafeMathInt.sol\":3790:3793  mul */\n      tag_90\n        /* \"contracts/SafeMathInt.sol\":3790:3836  mul(int256(uint256(1) << uint256(whole)), one) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/SafeMathInt.sol\":3774:3836  int256 result = mul(int256(uint256(1) << uint256(whole)), one) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3846:3862  int256 remaining */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3865:3890  sub(exp, mul(whole, one)) */\n      tag_231\n        /* \"contracts/SafeMathInt.sol\":3869:3872  exp */\n      dup9\n        /* \"contracts/SafeMathInt.sol\":3874:3889  mul(whole, one) */\n      tag_232\n        /* \"contracts/SafeMathInt.sol\":3878:3883  whole */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":3885:3888  one */\n      dup11\n        /* \"contracts/SafeMathInt.sol\":3874:3877  mul */\n      tag_90\n        /* \"contracts/SafeMathInt.sol\":3874:3889  mul(whole, one) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/SafeMathInt.sol\":3865:3868  sub */\n      tag_87\n        /* \"contracts/SafeMathInt.sol\":3865:3890  sub(exp, mul(whole, one)) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/SafeMathInt.sol\":3846:3890  int256 remaining = sub(exp, mul(whole, one)) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3901:3915  int256 current */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3918:3929  div(one, 2) */\n      tag_233\n        /* \"contracts/SafeMathInt.sol\":3922:3925  one */\n      dup9\n        /* \"contracts/SafeMathInt.sol\":3927:3928  2 */\n      0x02\n        /* \"contracts/SafeMathInt.sol\":3918:3921  div */\n      tag_92\n        /* \"contracts/SafeMathInt.sol\":3918:3929  div(one, 2) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/SafeMathInt.sol\":3901:3929  int256 current = div(one, 2) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3944:3953  uint256 i */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3939:4225  for (uint256 i = 0; i < 5; i++) {... */\n    tag_234:\n        /* \"contracts/SafeMathInt.sol\":3963:3964  5 */\n      0x05\n        /* \"contracts/SafeMathInt.sol\":3959:3960  i */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":3959:3964  i < 5 */\n      lt\n        /* \"contracts/SafeMathInt.sol\":3939:4225  for (uint256 i = 0; i < 5; i++) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":4002:4009  current */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":3989:3998  remaining */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":3989:4009  remaining >= current */\n      slt\n        /* \"contracts/SafeMathInt.sol\":3985:4176  if (remaining >= current) {... */\n      tag_237\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":4041:4064  sub(remaining, current) */\n      tag_238\n        /* \"contracts/SafeMathInt.sol\":4045:4054  remaining */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":4056:4063  current */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":4041:4044  sub */\n      tag_87\n        /* \"contracts/SafeMathInt.sol\":4041:4064  sub(remaining, current) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/SafeMathInt.sol\":4029:4064  remaining = sub(remaining, current) */\n      swap3\n      pop\n        /* \"contracts/SafeMathInt.sol\":4091:4122  div(mul(result, ks[i]), 10**18) */\n      tag_239\n        /* \"contracts/SafeMathInt.sol\":4095:4113  mul(result, ks[i]) */\n      tag_240\n        /* \"contracts/SafeMathInt.sol\":4099:4105  result */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":4107:4109  ks */\n      dup9\n        /* \"contracts/SafeMathInt.sol\":4110:4111  i */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":4107:4112  ks[i] */\n      0x05\n      dup2\n      lt\n      tag_241\n      jumpi\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n    tag_241:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/SafeMathInt.sol\":4095:4098  mul */\n      tag_90\n        /* \"contracts/SafeMathInt.sol\":4095:4113  mul(result, ks[i]) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/SafeMathInt.sol\":4115:4121  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SafeMathInt.sol\":4091:4094  div */\n      tag_92\n        /* \"contracts/SafeMathInt.sol\":4091:4122  div(mul(result, ks[i]), 10**18) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/SafeMathInt.sol\":4082:4122  result = div(mul(result, ks[i]), 10**18) */\n      swap4\n      pop\n        /* \"contracts/SafeMathInt.sol\":3985:4176  if (remaining >= current) {... */\n    tag_237:\n        /* \"contracts/SafeMathInt.sol\":4199:4214  div(current, 2) */\n      tag_244\n        /* \"contracts/SafeMathInt.sol\":4203:4210  current */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":4212:4213  2 */\n      0x02\n        /* \"contracts/SafeMathInt.sol\":4199:4202  div */\n      tag_92\n        /* \"contracts/SafeMathInt.sol\":4199:4214  div(current, 2) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/SafeMathInt.sol\":4189:4214  current = div(current, 2) */\n      swap2\n      pop\n        /* \"contracts/SafeMathInt.sol\":3966:3969  i++ */\n      dup1\n      dup1\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":3939:4225  for (uint256 i = 0; i < 5; i++) {... */\n      jump(tag_234)\n    tag_235:\n      pop\n        /* \"contracts/SafeMathInt.sol\":4238:4248  reciprocal */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":4234:4310  if (reciprocal) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":4273:4299  div(mul(one, one), result) */\n      tag_248\n        /* \"contracts/SafeMathInt.sol\":4277:4290  mul(one, one) */\n      tag_249\n        /* \"contracts/SafeMathInt.sol\":4281:4284  one */\n      dup10\n        /* \"contracts/SafeMathInt.sol\":4286:4289  one */\n      dup11\n        /* \"contracts/SafeMathInt.sol\":4277:4280  mul */\n      tag_90\n        /* \"contracts/SafeMathInt.sol\":4277:4290  mul(one, one) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/SafeMathInt.sol\":4292:4298  result */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":4273:4276  div */\n      tag_92\n        /* \"contracts/SafeMathInt.sol\":4273:4299  div(mul(one, one), result) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/SafeMathInt.sol\":4264:4299  result = div(mul(one, one), result) */\n      swap3\n      pop\n        /* \"contracts/SafeMathInt.sol\":4234:4310  if (reciprocal) {... */\n    tag_247:\n        /* \"contracts/SafeMathInt.sol\":4326:4332  result */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":4319:4332  return result */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":3202:4339  function twoPower(int256 exp, int256 one) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":211:632  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"contracts/SafeMath.sol\":269:276  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":514:515  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":509:510  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":509:515  a == 0 */\n      eq\n        /* \"contracts/SafeMath.sol\":505:550  if (a == 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/SafeMath.sol\":538:539  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":531:539  return 0 */\n      swap1\n      pop\n      jump(tag_250)\n        /* \"contracts/SafeMath.sol\":505:550  if (a == 0) {... */\n    tag_251:\n        /* \"contracts/SafeMath.sol\":560:569  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":576:577  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":572:573  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":572:577  a * b */\n      tag_252\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_252:\n        /* \"contracts/SafeMath.sol\":560:577  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":604:605  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":599:600  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":595:596  c */\n      dup3\n        /* \"contracts/SafeMath.sol\":595:600  c / a */\n      tag_253\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_253:\n        /* \"contracts/SafeMath.sol\":595:605  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":587:606  require(c / a == b) */\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n        /* \"contracts/SafeMath.sol\":624:625  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":617:625  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":211:632  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_250:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":752:1040  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"contracts/SafeMath.sol\":810:817  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":841:842  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":837:838  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":837:842  b > 0 */\n      gt\n        /* \"contracts/SafeMath.sol\":829:843  require(b > 0) */\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n        /* \"contracts/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":923:928  a / b */\n      tag_257\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_257:\n        /* \"contracts/SafeMath.sol\":911:928  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1032:1033  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1025:1033  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":752:1040  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":7632:8295  function computeSupplyDelta(uint256 rate, uint256 targetRate) internal view returns (int256) {... */\n    tag_152:\n        /* \"contracts/CMMDPolicy.sol\":7717:7723  int256 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7739:7781  withinDeviationThreshold(rate, targetRate) */\n      tag_259\n        /* \"contracts/CMMDPolicy.sol\":7764:7768  rate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":7770:7780  targetRate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":7739:7763  withinDeviationThreshold */\n      tag_260\n        /* \"contracts/CMMDPolicy.sol\":7739:7781  withinDeviationThreshold(rate, targetRate) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/CMMDPolicy.sol\":7735:7816  if (withinDeviationThreshold(rate, targetRate)) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":7804:7805  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7797:7805  return 0 */\n      swap1\n      pop\n      jump(tag_258)\n        /* \"contracts/CMMDPolicy.sol\":7735:7816  if (withinDeviationThreshold(rate, targetRate)) {... */\n    tag_261:\n        /* \"contracts/CMMDPolicy.sol\":7825:7848  int256 targetRateSigned */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7858:7868  targetRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":7825:7869  int256 targetRateSigned = int256(targetRate) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7879:7900  int256 normalizedRate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7903:7970  SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned) */\n      tag_262\n        /* \"contracts/CMMDPolicy.sol\":7919:7952  SafeMathInt.mul(int256(rate),ONE) */\n      tag_263\n        /* \"contracts/CMMDPolicy.sol\":7942:7946  rate */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_264\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_264:\n        /* \"contracts/CMMDPolicy.sol\":7919:7934  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":7919:7952  SafeMathInt.mul(int256(rate),ONE) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/CMMDPolicy.sol\":7953:7969  targetRateSigned */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":7903:7918  SafeMathInt.div */\n      tag_92\n        /* \"contracts/CMMDPolicy.sol\":7903:7970  SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/CMMDPolicy.sol\":7879:7970  int256 normalizedRate = SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7980:8003  int256 rebasePercentage */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8006:8187  computeRebasePercentage(... */\n      tag_265\n        /* \"contracts/CMMDPolicy.sol\":8043:8057  normalizedRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":8071:8100  rebaseFunctionLowerPercentage */\n      sload(0x06)\n        /* \"contracts/CMMDPolicy.sol\":8114:8143  rebaseFunctionUpperPercentage */\n      sload(0x07)\n        /* \"contracts/CMMDPolicy.sol\":8157:8177  rebaseFunctionGrowth */\n      sload(0x08)\n        /* \"contracts/CMMDPolicy.sol\":8006:8029  computeRebasePercentage */\n      tag_26\n        /* \"contracts/CMMDPolicy.sol\":8006:8187  computeRebasePercentage(... */\n      jump\t// in\n    tag_265:\n        /* \"contracts/CMMDPolicy.sol\":7980:8187  int256 rebasePercentage = computeRebasePercentage(... */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8205:8288  SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE)) */\n      tag_266\n        /* \"contracts/CMMDPolicy.sol\":8221:8281  SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage) */\n      tag_267\n        /* \"contracts/CMMDPolicy.sol\":8244:8248  cmmd */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":8244:8260  cmmd.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/CMMDPolicy.sol\":8244:8262  cmmd.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_271:\n        /* \"contracts/CMMDPolicy.sol\":8264:8280  rebasePercentage */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":8221:8236  SafeMathInt.mul */\n      tag_90\n        /* \"contracts/CMMDPolicy.sol\":8221:8281  SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2302:2304  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2302:2314  10**DECIMALS */\n      tag_272\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_272:\n        /* \"contracts/CMMDPolicy.sol\":8205:8220  SafeMathInt.div */\n      tag_92\n        /* \"contracts/CMMDPolicy.sol\":8205:8288  SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE)) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/CMMDPolicy.sol\":8198:8288  return SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE)) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7632:8295  function computeSupplyDelta(uint256 rate, uint256 targetRate) internal view returns (int256) {... */\n    tag_258:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":2742:2868  function abs(int256 a) internal pure returns (int256) {... */\n    tag_227:\n        /* \"contracts/SafeMathInt.sol\":2788:2794  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":2814:2815  a */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2814:2829  a != MIN_INT256 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2806:2830  require(a != MIN_INT256) */\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n        /* \"contracts/SafeMathInt.sol\":2851:2852  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2847:2848  a */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2847:2852  a < 0 */\n      slt\n        /* \"contracts/SafeMathInt.sol\":2847:2861  a < 0 ? -a : a */\n      tag_275\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":2860:2861  a */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2847:2861  a < 0 ? -a : a */\n      jump(tag_276)\n    tag_275:\n        /* \"contracts/SafeMathInt.sol\":2856:2857  a */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2855:2857  -a */\n      tag_277\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"contracts/SafeMathInt.sol\":2847:2861  a < 0 ? -a : a */\n    tag_276:\n        /* \"contracts/SafeMathInt.sol\":2840:2861  return a < 0 ? -a : a */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":2742:2868  function abs(int256 a) internal pure returns (int256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":8620:9080  function withinDeviationThreshold(uint256 rate, uint256 targetRate)... */\n    tag_260:\n        /* \"contracts/CMMDPolicy.sol\":8735:8739  bool */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8755:8789  uint256 absoluteDeviationThreshold */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":8792:8862  SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS) */\n      tag_280\n        /* \"contracts/CMMDPolicy.sol\":8805:8848  SafeMath.mul(targetRate,deviationThreshold) */\n      tag_281\n        /* \"contracts/CMMDPolicy.sol\":8818:8828  targetRate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":8829:8847  deviationThreshold */\n      sload(0x04)\n        /* \"contracts/CMMDPolicy.sol\":8805:8817  SafeMath.mul */\n      tag_138\n        /* \"contracts/CMMDPolicy.sol\":8805:8848  SafeMath.mul(targetRate,deviationThreshold) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/CMMDPolicy.sol\":1648:1650  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":8849:8851  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":8849:8861  10**DECIMALS */\n      tag_282\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_282:\n        /* \"contracts/CMMDPolicy.sol\":8792:8804  SafeMath.div */\n      tag_139\n        /* \"contracts/CMMDPolicy.sol\":8792:8862  SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/CMMDPolicy.sol\":8755:8862  uint256 absoluteDeviationThreshold = SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8903:8913  targetRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":8895:8899  rate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":8895:8913  rate >= targetRate */\n      lt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":8895:8975  rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8949:8975  absoluteDeviationThreshold */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":8917:8946  SafeMath.sub(rate,targetRate) */\n      tag_284\n        /* \"contracts/CMMDPolicy.sol\":8930:8934  rate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":8935:8945  targetRate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":8917:8929  SafeMath.sub */\n      tag_285\n        /* \"contracts/CMMDPolicy.sol\":8917:8946  SafeMath.sub(rate,targetRate) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/CMMDPolicy.sol\":8917:8975  SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold */\n      lt\n        /* \"contracts/CMMDPolicy.sol\":8895:8975  rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold */\n    tag_283:\n        /* \"contracts/CMMDPolicy.sol\":8894:9073  (rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold) ||... */\n      dup1\n      tag_286\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9000:9010  targetRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":8993:8997  rate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":8993:9010  rate < targetRate */\n      lt\n        /* \"contracts/CMMDPolicy.sol\":8993:9072  rate < targetRate && SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold */\n      dup1\n      iszero\n      tag_287\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9046:9072  absoluteDeviationThreshold */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":9014:9043  SafeMath.sub(targetRate,rate) */\n      tag_288\n        /* \"contracts/CMMDPolicy.sol\":9027:9037  targetRate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":9038:9042  rate */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":9014:9026  SafeMath.sub */\n      tag_285\n        /* \"contracts/CMMDPolicy.sol\":9014:9043  SafeMath.sub(targetRate,rate) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/CMMDPolicy.sol\":9014:9072  SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold */\n      lt\n        /* \"contracts/CMMDPolicy.sol\":8993:9072  rate < targetRate && SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold */\n    tag_287:\n        /* \"contracts/CMMDPolicy.sol\":8894:9073  (rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold) ||... */\n    tag_286:\n        /* \"contracts/CMMDPolicy.sol\":8875:9073  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8620:9080  function withinDeviationThreshold(uint256 rate, uint256 targetRate)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1163:1308  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_285:\n        /* \"contracts/SafeMath.sol\":1221:1228  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1253:1254  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":1248:1249  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":1248:1254  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1240:1255  require(b <= a) */\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n        /* \"contracts/SafeMath.sol\":1265:1274  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1281:1282  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":1277:1278  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":1277:1282  a - b */\n      tag_291\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_291:\n        /* \"contracts/SafeMath.sol\":1265:1282  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1300:1301  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1293:1301  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":1163:1308  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_293:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_295\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:313   */\n    tag_297:\n        /* \"#utility.yul\":208:213   */\n      0x00\n        /* \"#utility.yul\":246:252   */\n      dup2\n        /* \"#utility.yul\":233:253   */\n      calldataload\n        /* \"#utility.yul\":224:253   */\n      swap1\n      pop\n        /* \"#utility.yul\":262:307   */\n      tag_299\n        /* \"#utility.yul\":301:306   */\n      dup2\n        /* \"#utility.yul\":262:307   */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":150:313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":319:486   */\n    tag_301:\n        /* \"#utility.yul\":379:384   */\n      0x00\n        /* \"#utility.yul\":417:423   */\n      dup2\n        /* \"#utility.yul\":404:424   */\n      calldataload\n        /* \"#utility.yul\":395:424   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:480   */\n      tag_303\n        /* \"#utility.yul\":474:479   */\n      dup2\n        /* \"#utility.yul\":433:480   */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":319:486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":492:629   */\n    tag_305:\n        /* \"#utility.yul\":537:542   */\n      0x00\n        /* \"#utility.yul\":575:581   */\n      dup2\n        /* \"#utility.yul\":562:582   */\n      calldataload\n        /* \"#utility.yul\":553:582   */\n      swap1\n      pop\n        /* \"#utility.yul\":591:623   */\n      tag_307\n        /* \"#utility.yul\":617:622   */\n      dup2\n        /* \"#utility.yul\":591:623   */\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":492:629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:774   */\n    tag_309:\n        /* \"#utility.yul\":681:686   */\n      0x00\n        /* \"#utility.yul\":719:725   */\n      dup2\n        /* \"#utility.yul\":706:726   */\n      calldataload\n        /* \"#utility.yul\":697:726   */\n      swap1\n      pop\n        /* \"#utility.yul\":735:768   */\n      tag_311\n        /* \"#utility.yul\":762:767   */\n      dup2\n        /* \"#utility.yul\":735:768   */\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":635:774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:923   */\n    tag_313:\n        /* \"#utility.yul\":837:842   */\n      0x00\n        /* \"#utility.yul\":868:874   */\n      dup2\n        /* \"#utility.yul\":862:875   */\n      mload\n        /* \"#utility.yul\":853:875   */\n      swap1\n      pop\n        /* \"#utility.yul\":884:917   */\n      tag_315\n        /* \"#utility.yul\":911:916   */\n      dup2\n        /* \"#utility.yul\":884:917   */\n      tag_312\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":780:923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":929:1427   */\n    tag_72:\n        /* \"#utility.yul\":1009:1015   */\n      0x00\n        /* \"#utility.yul\":1017:1023   */\n      dup1\n        /* \"#utility.yul\":1066:1068   */\n      0x40\n        /* \"#utility.yul\":1054:1063   */\n      dup4\n        /* \"#utility.yul\":1045:1052   */\n      dup6\n        /* \"#utility.yul\":1041:1064   */\n      sub\n        /* \"#utility.yul\":1037:1069   */\n      slt\n        /* \"#utility.yul\":1034:1153   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":1072:1151   */\n      tag_318\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1034:1153   */\n    tag_317:\n        /* \"#utility.yul\":1192:1193   */\n      0x00\n        /* \"#utility.yul\":1217:1282   */\n      tag_320\n        /* \"#utility.yul\":1274:1281   */\n      dup6\n        /* \"#utility.yul\":1265:1271   */\n      dup3\n        /* \"#utility.yul\":1254:1263   */\n      dup7\n        /* \"#utility.yul\":1250:1272   */\n      add\n        /* \"#utility.yul\":1217:1282   */\n      tag_297\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1207:1282   */\n      swap3\n      pop\n        /* \"#utility.yul\":1163:1292   */\n      pop\n        /* \"#utility.yul\":1331:1333   */\n      0x20\n        /* \"#utility.yul\":1357:1410   */\n      tag_321\n        /* \"#utility.yul\":1402:1409   */\n      dup6\n        /* \"#utility.yul\":1393:1399   */\n      dup3\n        /* \"#utility.yul\":1382:1391   */\n      dup7\n        /* \"#utility.yul\":1378:1400   */\n      add\n        /* \"#utility.yul\":1357:1410   */\n      tag_309\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1347:1410   */\n      swap2\n      pop\n        /* \"#utility.yul\":1302:1420   */\n      pop\n        /* \"#utility.yul\":929:1427   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1433:1790   */\n    tag_31:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1555:1557   */\n      0x20\n        /* \"#utility.yul\":1543:1552   */\n      dup3\n        /* \"#utility.yul\":1534:1541   */\n      dup5\n        /* \"#utility.yul\":1530:1553   */\n      sub\n        /* \"#utility.yul\":1526:1558   */\n      slt\n        /* \"#utility.yul\":1523:1642   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1561:1640   */\n      tag_324\n      tag_319\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1523:1642   */\n    tag_323:\n        /* \"#utility.yul\":1681:1682   */\n      0x00\n        /* \"#utility.yul\":1706:1773   */\n      tag_325\n        /* \"#utility.yul\":1765:1772   */\n      dup5\n        /* \"#utility.yul\":1756:1762   */\n      dup3\n        /* \"#utility.yul\":1745:1754   */\n      dup6\n        /* \"#utility.yul\":1741:1763   */\n      add\n        /* \"#utility.yul\":1706:1773   */\n      tag_301\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1696:1773   */\n      swap2\n      pop\n        /* \"#utility.yul\":1652:1783   */\n      pop\n        /* \"#utility.yul\":1433:1790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1796:2123   */\n    tag_53:\n        /* \"#utility.yul\":1854:1860   */\n      0x00\n        /* \"#utility.yul\":1903:1905   */\n      0x20\n        /* \"#utility.yul\":1891:1900   */\n      dup3\n        /* \"#utility.yul\":1882:1889   */\n      dup5\n        /* \"#utility.yul\":1878:1901   */\n      sub\n        /* \"#utility.yul\":1874:1906   */\n      slt\n        /* \"#utility.yul\":1871:1990   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1909:1988   */\n      tag_328\n      tag_319\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1871:1990   */\n    tag_327:\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2054:2106   */\n      tag_329\n        /* \"#utility.yul\":2098:2105   */\n      dup5\n        /* \"#utility.yul\":2089:2095   */\n      dup3\n        /* \"#utility.yul\":2078:2087   */\n      dup6\n        /* \"#utility.yul\":2074:2096   */\n      add\n        /* \"#utility.yul\":2054:2106   */\n      tag_305\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2044:2106   */\n      swap2\n      pop\n        /* \"#utility.yul\":2000:2116   */\n      pop\n        /* \"#utility.yul\":1796:2123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2129:2886   */\n    tag_25:\n        /* \"#utility.yul\":2211:2217   */\n      0x00\n        /* \"#utility.yul\":2219:2225   */\n      dup1\n        /* \"#utility.yul\":2227:2233   */\n      0x00\n        /* \"#utility.yul\":2235:2241   */\n      dup1\n        /* \"#utility.yul\":2284:2287   */\n      0x80\n        /* \"#utility.yul\":2272:2281   */\n      dup6\n        /* \"#utility.yul\":2263:2270   */\n      dup8\n        /* \"#utility.yul\":2259:2282   */\n      sub\n        /* \"#utility.yul\":2255:2288   */\n      slt\n        /* \"#utility.yul\":2252:2372   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2291:2370   */\n      tag_332\n      tag_319\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2252:2372   */\n    tag_331:\n        /* \"#utility.yul\":2411:2412   */\n      0x00\n        /* \"#utility.yul\":2436:2488   */\n      tag_333\n        /* \"#utility.yul\":2480:2487   */\n      dup8\n        /* \"#utility.yul\":2471:2477   */\n      dup3\n        /* \"#utility.yul\":2460:2469   */\n      dup9\n        /* \"#utility.yul\":2456:2478   */\n      add\n        /* \"#utility.yul\":2436:2488   */\n      tag_305\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2426:2488   */\n      swap5\n      pop\n        /* \"#utility.yul\":2382:2498   */\n      pop\n        /* \"#utility.yul\":2537:2539   */\n      0x20\n        /* \"#utility.yul\":2563:2615   */\n      tag_334\n        /* \"#utility.yul\":2607:2614   */\n      dup8\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2587:2596   */\n      dup9\n        /* \"#utility.yul\":2583:2605   */\n      add\n        /* \"#utility.yul\":2563:2615   */\n      tag_305\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2553:2615   */\n      swap4\n      pop\n        /* \"#utility.yul\":2508:2625   */\n      pop\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2690:2742   */\n      tag_335\n        /* \"#utility.yul\":2734:2741   */\n      dup8\n        /* \"#utility.yul\":2725:2731   */\n      dup3\n        /* \"#utility.yul\":2714:2723   */\n      dup9\n        /* \"#utility.yul\":2710:2732   */\n      add\n        /* \"#utility.yul\":2690:2742   */\n      tag_305\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2680:2742   */\n      swap3\n      pop\n        /* \"#utility.yul\":2635:2752   */\n      pop\n        /* \"#utility.yul\":2791:2793   */\n      0x60\n        /* \"#utility.yul\":2817:2869   */\n      tag_336\n        /* \"#utility.yul\":2861:2868   */\n      dup8\n        /* \"#utility.yul\":2852:2858   */\n      dup3\n        /* \"#utility.yul\":2841:2850   */\n      dup9\n        /* \"#utility.yul\":2837:2859   */\n      add\n        /* \"#utility.yul\":2817:2869   */\n      tag_305\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2807:2869   */\n      swap2\n      pop\n        /* \"#utility.yul\":2762:2879   */\n      pop\n        /* \"#utility.yul\":2129:2886   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3221   */\n    tag_39:\n        /* \"#utility.yul\":2951:2957   */\n      0x00\n        /* \"#utility.yul\":3000:3002   */\n      0x20\n        /* \"#utility.yul\":2988:2997   */\n      dup3\n        /* \"#utility.yul\":2979:2986   */\n      dup5\n        /* \"#utility.yul\":2975:2998   */\n      sub\n        /* \"#utility.yul\":2971:3003   */\n      slt\n        /* \"#utility.yul\":2968:3087   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3006:3085   */\n      tag_339\n      tag_319\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2968:3087   */\n    tag_338:\n        /* \"#utility.yul\":3126:3127   */\n      0x00\n        /* \"#utility.yul\":3151:3204   */\n      tag_340\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3187:3193   */\n      dup3\n        /* \"#utility.yul\":3176:3185   */\n      dup6\n        /* \"#utility.yul\":3172:3194   */\n      add\n        /* \"#utility.yul\":3151:3204   */\n      tag_309\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3141:3204   */\n      swap2\n      pop\n        /* \"#utility.yul\":3097:3214   */\n      pop\n        /* \"#utility.yul\":2892:3221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3227:3578   */\n    tag_162:\n        /* \"#utility.yul\":3297:3303   */\n      0x00\n        /* \"#utility.yul\":3346:3348   */\n      0x20\n        /* \"#utility.yul\":3334:3343   */\n      dup3\n        /* \"#utility.yul\":3325:3332   */\n      dup5\n        /* \"#utility.yul\":3321:3344   */\n      sub\n        /* \"#utility.yul\":3317:3349   */\n      slt\n        /* \"#utility.yul\":3314:3433   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3352:3431   */\n      tag_343\n      tag_319\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3314:3433   */\n    tag_342:\n        /* \"#utility.yul\":3472:3473   */\n      0x00\n        /* \"#utility.yul\":3497:3561   */\n      tag_344\n        /* \"#utility.yul\":3553:3560   */\n      dup5\n        /* \"#utility.yul\":3544:3550   */\n      dup3\n        /* \"#utility.yul\":3533:3542   */\n      dup6\n        /* \"#utility.yul\":3529:3551   */\n      add\n        /* \"#utility.yul\":3497:3561   */\n      tag_313\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3487:3561   */\n      swap2\n      pop\n        /* \"#utility.yul\":3443:3571   */\n      pop\n        /* \"#utility.yul\":3227:3578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3584:4085   */\n    tag_133:\n        /* \"#utility.yul\":3660:3666   */\n      0x00\n        /* \"#utility.yul\":3668:3674   */\n      dup1\n        /* \"#utility.yul\":3717:3719   */\n      0x40\n        /* \"#utility.yul\":3705:3714   */\n      dup4\n        /* \"#utility.yul\":3696:3703   */\n      dup6\n        /* \"#utility.yul\":3692:3715   */\n      sub\n        /* \"#utility.yul\":3688:3720   */\n      slt\n        /* \"#utility.yul\":3685:3804   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3723:3802   */\n      tag_347\n      tag_319\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3685:3804   */\n    tag_346:\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3868:3932   */\n      tag_348\n        /* \"#utility.yul\":3924:3931   */\n      dup6\n        /* \"#utility.yul\":3915:3921   */\n      dup3\n        /* \"#utility.yul\":3904:3913   */\n      dup7\n        /* \"#utility.yul\":3900:3922   */\n      add\n        /* \"#utility.yul\":3868:3932   */\n      tag_313\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3858:3932   */\n      swap3\n      pop\n        /* \"#utility.yul\":3814:3942   */\n      pop\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"#utility.yul\":4007:4068   */\n      tag_349\n        /* \"#utility.yul\":4060:4067   */\n      dup6\n        /* \"#utility.yul\":4051:4057   */\n      dup3\n        /* \"#utility.yul\":4040:4049   */\n      dup7\n        /* \"#utility.yul\":4036:4058   */\n      add\n        /* \"#utility.yul\":4007:4068   */\n      tag_293\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3997:4068   */\n      swap2\n      pop\n        /* \"#utility.yul\":3952:4078   */\n      pop\n        /* \"#utility.yul\":3584:4085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4091:4246   */\n    tag_350:\n        /* \"#utility.yul\":4190:4239   */\n      tag_352\n        /* \"#utility.yul\":4233:4238   */\n      dup2\n        /* \"#utility.yul\":4190:4239   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4178:4240   */\n      mstore\n        /* \"#utility.yul\":4091:4246   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4411   */\n    tag_354:\n        /* \"#utility.yul\":4353:4404   */\n      tag_356\n        /* \"#utility.yul\":4398:4403   */\n      dup2\n        /* \"#utility.yul\":4353:4404   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4348:4351   */\n      dup3\n        /* \"#utility.yul\":4341:4405   */\n      mstore\n        /* \"#utility.yul\":4252:4411   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4417:4532   */\n    tag_358:\n        /* \"#utility.yul\":4502:4525   */\n      tag_360\n        /* \"#utility.yul\":4519:4524   */\n      dup2\n        /* \"#utility.yul\":4502:4525   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4497:4500   */\n      dup3\n        /* \"#utility.yul\":4490:4526   */\n      mstore\n        /* \"#utility.yul\":4417:4532   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4538:4656   */\n    tag_362:\n        /* \"#utility.yul\":4625:4649   */\n      tag_364\n        /* \"#utility.yul\":4643:4648   */\n      dup2\n        /* \"#utility.yul\":4625:4649   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4620:4623   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      mstore\n        /* \"#utility.yul\":4538:4656   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4908   */\n    tag_36:\n        /* \"#utility.yul\":4767:4771   */\n      0x00\n        /* \"#utility.yul\":4805:4807   */\n      0x20\n        /* \"#utility.yul\":4794:4803   */\n      dup3\n        /* \"#utility.yul\":4790:4808   */\n      add\n        /* \"#utility.yul\":4782:4808   */\n      swap1\n      pop\n        /* \"#utility.yul\":4818:4901   */\n      tag_367\n        /* \"#utility.yul\":4898:4899   */\n      0x00\n        /* \"#utility.yul\":4887:4896   */\n      dup4\n        /* \"#utility.yul\":4883:4900   */\n      add\n        /* \"#utility.yul\":4874:4880   */\n      dup5\n        /* \"#utility.yul\":4818:4901   */\n      tag_350\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4662:4908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4914:5164   */\n    tag_47:\n        /* \"#utility.yul\":5021:5025   */\n      0x00\n        /* \"#utility.yul\":5059:5061   */\n      0x20\n        /* \"#utility.yul\":5048:5057   */\n      dup3\n        /* \"#utility.yul\":5044:5062   */\n      add\n        /* \"#utility.yul\":5036:5062   */\n      swap1\n      pop\n        /* \"#utility.yul\":5072:5157   */\n      tag_369\n        /* \"#utility.yul\":5154:5155   */\n      0x00\n        /* \"#utility.yul\":5143:5152   */\n      dup4\n        /* \"#utility.yul\":5139:5156   */\n      add\n        /* \"#utility.yul\":5130:5136   */\n      dup5\n        /* \"#utility.yul\":5072:5157   */\n      tag_354\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4914:5164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5170:5388   */\n    tag_28:\n        /* \"#utility.yul\":5261:5265   */\n      0x00\n        /* \"#utility.yul\":5299:5301   */\n      0x20\n        /* \"#utility.yul\":5288:5297   */\n      dup3\n        /* \"#utility.yul\":5284:5302   */\n      add\n        /* \"#utility.yul\":5276:5302   */\n      swap1\n      pop\n        /* \"#utility.yul\":5312:5381   */\n      tag_371\n        /* \"#utility.yul\":5378:5379   */\n      0x00\n        /* \"#utility.yul\":5367:5376   */\n      dup4\n        /* \"#utility.yul\":5363:5380   */\n      add\n        /* \"#utility.yul\":5354:5360   */\n      dup5\n        /* \"#utility.yul\":5312:5381   */\n      tag_358\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5170:5388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5616   */\n    tag_58:\n        /* \"#utility.yul\":5487:5491   */\n      0x00\n        /* \"#utility.yul\":5525:5527   */\n      0x20\n        /* \"#utility.yul\":5514:5523   */\n      dup3\n        /* \"#utility.yul\":5510:5528   */\n      add\n        /* \"#utility.yul\":5502:5528   */\n      swap1\n      pop\n        /* \"#utility.yul\":5538:5609   */\n      tag_373\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5595:5604   */\n      dup4\n        /* \"#utility.yul\":5591:5608   */\n      add\n        /* \"#utility.yul\":5582:5588   */\n      dup5\n        /* \"#utility.yul\":5538:5609   */\n      tag_362\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5394:5616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5622:5950   */\n    tag_175:\n        /* \"#utility.yul\":5741:5745   */\n      0x00\n        /* \"#utility.yul\":5779:5781   */\n      0x40\n        /* \"#utility.yul\":5768:5777   */\n      dup3\n        /* \"#utility.yul\":5764:5782   */\n      add\n        /* \"#utility.yul\":5756:5782   */\n      swap1\n      pop\n        /* \"#utility.yul\":5792:5863   */\n      tag_375\n        /* \"#utility.yul\":5860:5861   */\n      0x00\n        /* \"#utility.yul\":5849:5858   */\n      dup4\n        /* \"#utility.yul\":5845:5862   */\n      add\n        /* \"#utility.yul\":5836:5842   */\n      dup6\n        /* \"#utility.yul\":5792:5863   */\n      tag_362\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5873:5943   */\n      tag_376\n        /* \"#utility.yul\":5939:5941   */\n      0x20\n        /* \"#utility.yul\":5928:5937   */\n      dup4\n        /* \"#utility.yul\":5924:5942   */\n      add\n        /* \"#utility.yul\":5915:5921   */\n      dup5\n        /* \"#utility.yul\":5873:5943   */\n      tag_358\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5622:5950   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6505   */\n    tag_187:\n        /* \"#utility.yul\":6131:6135   */\n      0x00\n        /* \"#utility.yul\":6169:6172   */\n      0x80\n        /* \"#utility.yul\":6158:6167   */\n      dup3\n        /* \"#utility.yul\":6154:6173   */\n      add\n        /* \"#utility.yul\":6146:6173   */\n      swap1\n      pop\n        /* \"#utility.yul\":6183:6254   */\n      tag_378\n        /* \"#utility.yul\":6251:6252   */\n      0x00\n        /* \"#utility.yul\":6240:6249   */\n      dup4\n        /* \"#utility.yul\":6236:6253   */\n      add\n        /* \"#utility.yul\":6227:6233   */\n      dup8\n        /* \"#utility.yul\":6183:6254   */\n      tag_362\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6264:6336   */\n      tag_379\n        /* \"#utility.yul\":6332:6334   */\n      0x20\n        /* \"#utility.yul\":6321:6330   */\n      dup4\n        /* \"#utility.yul\":6317:6335   */\n      add\n        /* \"#utility.yul\":6308:6314   */\n      dup7\n        /* \"#utility.yul\":6264:6336   */\n      tag_362\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6346:6416   */\n      tag_380\n        /* \"#utility.yul\":6412:6414   */\n      0x40\n        /* \"#utility.yul\":6401:6410   */\n      dup4\n        /* \"#utility.yul\":6397:6415   */\n      add\n        /* \"#utility.yul\":6388:6394   */\n      dup6\n        /* \"#utility.yul\":6346:6416   */\n      tag_358\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6426:6498   */\n      tag_381\n        /* \"#utility.yul\":6494:6496   */\n      0x60\n        /* \"#utility.yul\":6483:6492   */\n      dup4\n        /* \"#utility.yul\":6479:6497   */\n      add\n        /* \"#utility.yul\":6470:6476   */\n      dup5\n        /* \"#utility.yul\":6426:6498   */\n      tag_362\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5956:6505   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6592:7117   */\n    tag_120:\n        /* \"#utility.yul\":6631:6634   */\n      0x00\n        /* \"#utility.yul\":6650:6669   */\n      tag_385\n        /* \"#utility.yul\":6667:6668   */\n      dup3\n        /* \"#utility.yul\":6650:6669   */\n      tag_361\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6645:6669   */\n      swap2\n      pop\n        /* \"#utility.yul\":6683:6702   */\n      tag_386\n        /* \"#utility.yul\":6700:6701   */\n      dup4\n        /* \"#utility.yul\":6683:6702   */\n      tag_361\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6678:6702   */\n      swap3\n      pop\n        /* \"#utility.yul\":6871:6872   */\n      dup2\n        /* \"#utility.yul\":6803:6869   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6799:6873   */\n      sub\n        /* \"#utility.yul\":6796:6797   */\n      dup4\n        /* \"#utility.yul\":6792:6874   */\n      sgt\n        /* \"#utility.yul\":6787:6788   */\n      0x00\n        /* \"#utility.yul\":6784:6785   */\n      dup4\n        /* \"#utility.yul\":6780:6789   */\n      slt\n        /* \"#utility.yul\":6773:6790   */\n      iszero\n        /* \"#utility.yul\":6769:6875   */\n      and\n        /* \"#utility.yul\":6766:6898   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":6878:6896   */\n      tag_388\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6766:6898   */\n    tag_387:\n        /* \"#utility.yul\":7058:7059   */\n      dup2\n        /* \"#utility.yul\":6990:7056   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6986:7060   */\n      sub\n        /* \"#utility.yul\":6983:6984   */\n      dup4\n        /* \"#utility.yul\":6979:7061   */\n      slt\n        /* \"#utility.yul\":6975:6976   */\n      0x00\n        /* \"#utility.yul\":6972:6973   */\n      dup4\n        /* \"#utility.yul\":6968:6977   */\n      slt\n        /* \"#utility.yul\":6964:7062   */\n      and\n        /* \"#utility.yul\":6961:7085   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":7065:7083   */\n      tag_391\n      tag_389\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6961:7085   */\n    tag_390:\n        /* \"#utility.yul\":7109:7110   */\n      dup3\n        /* \"#utility.yul\":7106:7107   */\n      dup3\n        /* \"#utility.yul\":7102:7111   */\n      add\n        /* \"#utility.yul\":7095:7111   */\n      swap1\n      pop\n        /* \"#utility.yul\":6592:7117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7123:7428   */\n    tag_128:\n        /* \"#utility.yul\":7163:7166   */\n      0x00\n        /* \"#utility.yul\":7182:7202   */\n      tag_393\n        /* \"#utility.yul\":7200:7201   */\n      dup3\n        /* \"#utility.yul\":7182:7202   */\n      tag_365\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7177:7202   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7236   */\n      tag_394\n        /* \"#utility.yul\":7234:7235   */\n      dup4\n        /* \"#utility.yul\":7216:7236   */\n      tag_365\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7211:7236   */\n      swap3\n      pop\n        /* \"#utility.yul\":7370:7371   */\n      dup3\n        /* \"#utility.yul\":7302:7368   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7298:7372   */\n      sub\n        /* \"#utility.yul\":7295:7296   */\n      dup3\n        /* \"#utility.yul\":7292:7373   */\n      gt\n        /* \"#utility.yul\":7289:7396   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":7376:7394   */\n      tag_396\n      tag_389\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7289:7396   */\n    tag_395:\n        /* \"#utility.yul\":7420:7421   */\n      dup3\n        /* \"#utility.yul\":7417:7418   */\n      dup3\n        /* \"#utility.yul\":7413:7422   */\n      add\n        /* \"#utility.yul\":7406:7422   */\n      swap1\n      pop\n        /* \"#utility.yul\":7123:7428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7434:7819   */\n    tag_218:\n        /* \"#utility.yul\":7473:7474   */\n      0x00\n        /* \"#utility.yul\":7490:7509   */\n      tag_398\n        /* \"#utility.yul\":7507:7508   */\n      dup3\n        /* \"#utility.yul\":7490:7509   */\n      tag_361\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7485:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7523:7542   */\n      tag_399\n        /* \"#utility.yul\":7540:7541   */\n      dup4\n        /* \"#utility.yul\":7523:7542   */\n      tag_361\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7518:7542   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7562   */\n      dup3\n        /* \"#utility.yul\":7551:7586   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7566:7584   */\n      tag_401\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7551:7586   */\n    tag_400:\n        /* \"#utility.yul\":7752:7753   */\n      0x01\n        /* \"#utility.yul\":7749:7750   */\n      0x00\n        /* \"#utility.yul\":7745:7754   */\n      sub\n        /* \"#utility.yul\":7742:7743   */\n      dup4\n        /* \"#utility.yul\":7739:7755   */\n      eq\n        /* \"#utility.yul\":7658:7724   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7655:7656   */\n      dup4\n        /* \"#utility.yul\":7652:7725   */\n      eq\n        /* \"#utility.yul\":7635:7765   */\n      and\n        /* \"#utility.yul\":7632:7788   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7768:7786   */\n      tag_404\n      tag_389\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7632:7788   */\n    tag_403:\n        /* \"#utility.yul\":7811:7812   */\n      dup3\n        /* \"#utility.yul\":7808:7809   */\n      dup3\n        /* \"#utility.yul\":7803:7813   */\n      sdiv\n        /* \"#utility.yul\":7798:7813   */\n      swap1\n      pop\n        /* \"#utility.yul\":7434:7819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7825:8010   */\n    tag_157:\n        /* \"#utility.yul\":7865:7866   */\n      0x00\n        /* \"#utility.yul\":7882:7902   */\n      tag_406\n        /* \"#utility.yul\":7900:7901   */\n      dup3\n        /* \"#utility.yul\":7882:7902   */\n      tag_365\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7877:7902   */\n      swap2\n      pop\n        /* \"#utility.yul\":7916:7936   */\n      tag_407\n        /* \"#utility.yul\":7934:7935   */\n      dup4\n        /* \"#utility.yul\":7916:7936   */\n      tag_365\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7911:7936   */\n      swap3\n      pop\n        /* \"#utility.yul\":7955:7956   */\n      dup3\n        /* \"#utility.yul\":7945:7980   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7960:7978   */\n      tag_409\n      tag_402\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7945:7980   */\n    tag_408:\n        /* \"#utility.yul\":8002:8003   */\n      dup3\n        /* \"#utility.yul\":7999:8000   */\n      dup3\n        /* \"#utility.yul\":7995:8004   */\n      div\n        /* \"#utility.yul\":7990:8004   */\n      swap1\n      pop\n        /* \"#utility.yul\":7825:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8864   */\n    tag_410:\n        /* \"#utility.yul\":8077:8082   */\n      0x00\n        /* \"#utility.yul\":8084:8088   */\n      dup1\n        /* \"#utility.yul\":8108:8114   */\n      dup3\n        /* \"#utility.yul\":8099:8114   */\n      swap2\n      pop\n        /* \"#utility.yul\":8132:8137   */\n      dup4\n        /* \"#utility.yul\":8123:8137   */\n      swap1\n      pop\n        /* \"#utility.yul\":8146:8858   */\n    tag_412:\n        /* \"#utility.yul\":8167:8168   */\n      0x01\n        /* \"#utility.yul\":8157:8165   */\n      dup6\n        /* \"#utility.yul\":8154:8169   */\n      gt\n        /* \"#utility.yul\":8146:8858   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":8262:8266   */\n      dup1\n        /* \"#utility.yul\":8257:8260   */\n      dup7\n        /* \"#utility.yul\":8253:8267   */\n      div\n        /* \"#utility.yul\":8247:8251   */\n      dup2\n        /* \"#utility.yul\":8244:8268   */\n      gt\n        /* \"#utility.yul\":8241:8291   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":8271:8289   */\n      tag_416\n      tag_389\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8241:8291   */\n    tag_415:\n        /* \"#utility.yul\":8321:8322   */\n      0x01\n        /* \"#utility.yul\":8311:8319   */\n      dup6\n        /* \"#utility.yul\":8307:8323   */\n      and\n        /* \"#utility.yul\":8304:8755   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8736:8740   */\n      dup1\n        /* \"#utility.yul\":8729:8734   */\n      dup3\n        /* \"#utility.yul\":8725:8741   */\n      mul\n        /* \"#utility.yul\":8716:8741   */\n      swap2\n      pop\n        /* \"#utility.yul\":8304:8755   */\n    tag_417:\n        /* \"#utility.yul\":8786:8790   */\n      dup1\n        /* \"#utility.yul\":8780:8784   */\n      dup2\n        /* \"#utility.yul\":8776:8791   */\n      mul\n        /* \"#utility.yul\":8768:8791   */\n      swap1\n      pop\n        /* \"#utility.yul\":8816:8848   */\n      tag_418\n        /* \"#utility.yul\":8839:8847   */\n      dup6\n        /* \"#utility.yul\":8816:8848   */\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8804:8848   */\n      swap5\n      pop\n        /* \"#utility.yul\":8146:8858   */\n      jump(tag_412)\n    tag_414:\n        /* \"#utility.yul\":8016:8864   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8870:9155   */\n    tag_86:\n        /* \"#utility.yul\":8930:8935   */\n      0x00\n        /* \"#utility.yul\":8954:8977   */\n      tag_421\n        /* \"#utility.yul\":8972:8976   */\n      dup3\n        /* \"#utility.yul\":8954:8977   */\n      tag_365\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8946:8977   */\n      swap2\n      pop\n        /* \"#utility.yul\":8998:9025   */\n      tag_422\n        /* \"#utility.yul\":9016:9024   */\n      dup4\n        /* \"#utility.yul\":8998:9025   */\n      tag_365\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8986:9025   */\n      swap3\n      pop\n        /* \"#utility.yul\":9044:9148   */\n      tag_423\n        /* \"#utility.yul\":9081:9147   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9071:9079   */\n      dup5\n        /* \"#utility.yul\":9065:9069   */\n      dup5\n        /* \"#utility.yul\":9044:9148   */\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9035:9148   */\n      swap1\n      pop\n        /* \"#utility.yul\":8870:9155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9161:10234   */\n    tag_424:\n        /* \"#utility.yul\":9215:9220   */\n      0x00\n        /* \"#utility.yul\":9406:9414   */\n      dup3\n        /* \"#utility.yul\":9396:9436   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9427:9428   */\n      0x01\n        /* \"#utility.yul\":9418:9428   */\n      swap1\n      pop\n        /* \"#utility.yul\":9429:9434   */\n      jump(tag_425)\n        /* \"#utility.yul\":9396:9436   */\n    tag_426:\n        /* \"#utility.yul\":9455:9459   */\n      dup2\n        /* \"#utility.yul\":9445:9481   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":9472:9473   */\n      0x00\n        /* \"#utility.yul\":9463:9473   */\n      swap1\n      pop\n        /* \"#utility.yul\":9474:9479   */\n      jump(tag_425)\n        /* \"#utility.yul\":9445:9481   */\n    tag_427:\n        /* \"#utility.yul\":9541:9545   */\n      dup2\n        /* \"#utility.yul\":9589:9590   */\n      0x01\n        /* \"#utility.yul\":9584:9611   */\n      dup2\n      eq\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9625:9626   */\n      0x02\n        /* \"#utility.yul\":9620:9811   */\n      dup2\n      eq\n      tag_430\n      jumpi\n        /* \"#utility.yul\":9534:9811   */\n      jump(tag_428)\n        /* \"#utility.yul\":9584:9611   */\n    tag_429:\n        /* \"#utility.yul\":9602:9603   */\n      0x01\n        /* \"#utility.yul\":9593:9603   */\n      swap2\n      pop\n        /* \"#utility.yul\":9604:9609   */\n      pop\n      jump(tag_425)\n        /* \"#utility.yul\":9620:9811   */\n    tag_430:\n        /* \"#utility.yul\":9665:9668   */\n      0xff\n        /* \"#utility.yul\":9655:9663   */\n      dup5\n        /* \"#utility.yul\":9652:9669   */\n      gt\n        /* \"#utility.yul\":9649:9692   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":9672:9690   */\n      tag_432\n      tag_389\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9649:9692   */\n    tag_431:\n        /* \"#utility.yul\":9721:9729   */\n      dup4\n        /* \"#utility.yul\":9718:9719   */\n      0x02\n        /* \"#utility.yul\":9714:9730   */\n      exp\n        /* \"#utility.yul\":9705:9730   */\n      swap2\n      pop\n        /* \"#utility.yul\":9756:9759   */\n      dup5\n        /* \"#utility.yul\":9749:9754   */\n      dup3\n        /* \"#utility.yul\":9746:9760   */\n      gt\n        /* \"#utility.yul\":9743:9783   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":9763:9781   */\n      tag_434\n      tag_389\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9743:9783   */\n    tag_433:\n        /* \"#utility.yul\":9796:9801   */\n      pop\n      jump(tag_425)\n        /* \"#utility.yul\":9534:9811   */\n    tag_428:\n      pop\n        /* \"#utility.yul\":9920:9922   */\n      0x20\n        /* \"#utility.yul\":9910:9918   */\n      dup4\n        /* \"#utility.yul\":9907:9923   */\n      lt\n        /* \"#utility.yul\":9901:9904   */\n      0x0133\n        /* \"#utility.yul\":9895:9899   */\n      dup4\n        /* \"#utility.yul\":9892:9905   */\n      lt\n        /* \"#utility.yul\":9888:9924   */\n      and\n        /* \"#utility.yul\":9870:9872   */\n      0x4e\n        /* \"#utility.yul\":9860:9868   */\n      dup5\n        /* \"#utility.yul\":9857:9873   */\n      lt\n        /* \"#utility.yul\":9852:9854   */\n      0x0b\n        /* \"#utility.yul\":9846:9850   */\n      dup5\n        /* \"#utility.yul\":9843:9855   */\n      lt\n        /* \"#utility.yul\":9839:9874   */\n      and\n        /* \"#utility.yul\":9823:9934   */\n      or\n        /* \"#utility.yul\":9820:10066   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9976:9984   */\n      dup3\n        /* \"#utility.yul\":9970:9974   */\n      dup3\n        /* \"#utility.yul\":9966:9985   */\n      exp\n        /* \"#utility.yul\":9957:9985   */\n      swap1\n      pop\n        /* \"#utility.yul\":10011:10014   */\n      dup4\n        /* \"#utility.yul\":10004:10009   */\n      dup2\n        /* \"#utility.yul\":10001:10015   */\n      gt\n        /* \"#utility.yul\":9998:10038   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10018:10036   */\n      tag_437\n      tag_389\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9998:10038   */\n    tag_436:\n        /* \"#utility.yul\":10051:10056   */\n      jump(tag_425)\n        /* \"#utility.yul\":9820:10066   */\n    tag_435:\n        /* \"#utility.yul\":10091:10133   */\n      tag_438\n        /* \"#utility.yul\":10129:10132   */\n      dup5\n        /* \"#utility.yul\":10119:10127   */\n      dup5\n        /* \"#utility.yul\":10113:10117   */\n      dup5\n        /* \"#utility.yul\":10110:10111   */\n      0x01\n        /* \"#utility.yul\":10091:10133   */\n      tag_410\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10076:10133   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10165:10169   */\n      dup2\n        /* \"#utility.yul\":10160:10163   */\n      dup5\n        /* \"#utility.yul\":10156:10170   */\n      div\n        /* \"#utility.yul\":10149:10154   */\n      dup2\n        /* \"#utility.yul\":10146:10171   */\n      gt\n        /* \"#utility.yul\":10143:10194   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10174:10192   */\n      tag_440\n      tag_389\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10143:10194   */\n    tag_439:\n        /* \"#utility.yul\":10223:10227   */\n      dup2\n        /* \"#utility.yul\":10216:10221   */\n      dup2\n        /* \"#utility.yul\":10212:10228   */\n      mul\n        /* \"#utility.yul\":10203:10228   */\n      swap1\n      pop\n        /* \"#utility.yul\":9161:10234   */\n    tag_425:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10240:11231   */\n    tag_200:\n        /* \"#utility.yul\":10279:10286   */\n      0x00\n        /* \"#utility.yul\":10302:10321   */\n      tag_442\n        /* \"#utility.yul\":10319:10320   */\n      dup3\n        /* \"#utility.yul\":10302:10321   */\n      tag_361\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10297:10321   */\n      swap2\n      pop\n        /* \"#utility.yul\":10335:10354   */\n      tag_443\n        /* \"#utility.yul\":10352:10353   */\n      dup4\n        /* \"#utility.yul\":10335:10354   */\n      tag_361\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10330:10354   */\n      swap3\n      pop\n        /* \"#utility.yul\":10536:10537   */\n      dup3\n        /* \"#utility.yul\":10468:10534   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10464:10538   */\n      div\n        /* \"#utility.yul\":10461:10462   */\n      dup3\n        /* \"#utility.yul\":10458:10539   */\n      gt\n        /* \"#utility.yul\":10453:10454   */\n      0x00\n        /* \"#utility.yul\":10450:10451   */\n      dup5\n        /* \"#utility.yul\":10446:10455   */\n      sgt\n        /* \"#utility.yul\":10442:10443   */\n      0x00\n        /* \"#utility.yul\":10439:10440   */\n      dup5\n        /* \"#utility.yul\":10435:10444   */\n      sgt\n        /* \"#utility.yul\":10431:10456   */\n      and\n        /* \"#utility.yul\":10427:10540   */\n      and\n        /* \"#utility.yul\":10424:10563   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":10543:10561   */\n      tag_445\n      tag_389\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10424:10563   */\n    tag_444:\n        /* \"#utility.yul\":10747:10748   */\n      dup2\n        /* \"#utility.yul\":10679:10745   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10674:10749   */\n      sdiv\n        /* \"#utility.yul\":10671:10672   */\n      dup4\n        /* \"#utility.yul\":10667:10750   */\n      slt\n        /* \"#utility.yul\":10662:10663   */\n      0x00\n        /* \"#utility.yul\":10659:10660   */\n      dup5\n        /* \"#utility.yul\":10655:10664   */\n      slt\n        /* \"#utility.yul\":10651:10652   */\n      0x00\n        /* \"#utility.yul\":10648:10649   */\n      dup5\n        /* \"#utility.yul\":10644:10653   */\n      sgt\n        /* \"#utility.yul\":10640:10665   */\n      and\n        /* \"#utility.yul\":10636:10751   */\n      and\n        /* \"#utility.yul\":10633:10774   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":10754:10772   */\n      tag_447\n      tag_389\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10633:10774   */\n    tag_446:\n        /* \"#utility.yul\":10958:10959   */\n      dup3\n        /* \"#utility.yul\":10890:10956   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10885:10960   */\n      sdiv\n        /* \"#utility.yul\":10882:10883   */\n      dup3\n        /* \"#utility.yul\":10878:10961   */\n      slt\n        /* \"#utility.yul\":10873:10874   */\n      0x00\n        /* \"#utility.yul\":10870:10871   */\n      dup5\n        /* \"#utility.yul\":10866:10875   */\n      sgt\n        /* \"#utility.yul\":10862:10863   */\n      0x00\n        /* \"#utility.yul\":10859:10860   */\n      dup5\n        /* \"#utility.yul\":10855:10864   */\n      slt\n        /* \"#utility.yul\":10851:10876   */\n      and\n        /* \"#utility.yul\":10847:10962   */\n      and\n        /* \"#utility.yul\":10844:10985   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":10965:10983   */\n      tag_449\n      tag_389\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10844:10985   */\n    tag_448:\n        /* \"#utility.yul\":11168:11169   */\n      dup3\n        /* \"#utility.yul\":11100:11166   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11095:11170   */\n      sdiv\n        /* \"#utility.yul\":11092:11093   */\n      dup3\n        /* \"#utility.yul\":11088:11171   */\n      slt\n        /* \"#utility.yul\":11083:11084   */\n      0x00\n        /* \"#utility.yul\":11080:11081   */\n      dup5\n        /* \"#utility.yul\":11076:11085   */\n      slt\n        /* \"#utility.yul\":11072:11073   */\n      0x00\n        /* \"#utility.yul\":11069:11070   */\n      dup5\n        /* \"#utility.yul\":11065:11074   */\n      slt\n        /* \"#utility.yul\":11061:11086   */\n      and\n        /* \"#utility.yul\":11057:11172   */\n      and\n        /* \"#utility.yul\":11054:11195   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":11175:11193   */\n      tag_451\n      tag_389\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11054:11195   */\n    tag_450:\n        /* \"#utility.yul\":11223:11224   */\n      dup3\n        /* \"#utility.yul\":11220:11221   */\n      dup3\n        /* \"#utility.yul\":11216:11225   */\n      mul\n        /* \"#utility.yul\":11205:11225   */\n      swap1\n      pop\n        /* \"#utility.yul\":10240:11231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11237:11585   */\n    tag_147:\n        /* \"#utility.yul\":11277:11284   */\n      0x00\n        /* \"#utility.yul\":11300:11320   */\n      tag_453\n        /* \"#utility.yul\":11318:11319   */\n      dup3\n        /* \"#utility.yul\":11300:11320   */\n      tag_365\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11295:11320   */\n      swap2\n      pop\n        /* \"#utility.yul\":11334:11354   */\n      tag_454\n        /* \"#utility.yul\":11352:11353   */\n      dup4\n        /* \"#utility.yul\":11334:11354   */\n      tag_365\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11329:11354   */\n      swap3\n      pop\n        /* \"#utility.yul\":11522:11523   */\n      dup2\n        /* \"#utility.yul\":11454:11520   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11450:11524   */\n      div\n        /* \"#utility.yul\":11447:11448   */\n      dup4\n        /* \"#utility.yul\":11444:11525   */\n      gt\n        /* \"#utility.yul\":11439:11440   */\n      dup3\n        /* \"#utility.yul\":11432:11441   */\n      iszero\n        /* \"#utility.yul\":11425:11442   */\n      iszero\n        /* \"#utility.yul\":11421:11526   */\n      and\n        /* \"#utility.yul\":11418:11549   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":11529:11547   */\n      tag_456\n      tag_389\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11418:11549   */\n    tag_455:\n        /* \"#utility.yul\":11577:11578   */\n      dup3\n        /* \"#utility.yul\":11574:11575   */\n      dup3\n        /* \"#utility.yul\":11570:11579   */\n      mul\n        /* \"#utility.yul\":11559:11579   */\n      swap1\n      pop\n        /* \"#utility.yul\":11237:11585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11591:12118   */\n    tag_207:\n        /* \"#utility.yul\":11630:11634   */\n      0x00\n        /* \"#utility.yul\":11650:11669   */\n      tag_458\n        /* \"#utility.yul\":11667:11668   */\n      dup3\n        /* \"#utility.yul\":11650:11669   */\n      tag_361\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":11645:11669   */\n      swap2\n      pop\n        /* \"#utility.yul\":11683:11702   */\n      tag_459\n        /* \"#utility.yul\":11700:11701   */\n      dup4\n        /* \"#utility.yul\":11683:11702   */\n      tag_361\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11678:11702   */\n      swap3\n      pop\n        /* \"#utility.yul\":11872:11873   */\n      dup3\n        /* \"#utility.yul\":11804:11870   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11800:11874   */\n      add\n        /* \"#utility.yul\":11797:11798   */\n      dup3\n        /* \"#utility.yul\":11793:11875   */\n      slt\n        /* \"#utility.yul\":11788:11789   */\n      0x00\n        /* \"#utility.yul\":11785:11786   */\n      dup5\n        /* \"#utility.yul\":11781:11790   */\n      slt\n        /* \"#utility.yul\":11774:11791   */\n      iszero\n        /* \"#utility.yul\":11770:11876   */\n      and\n        /* \"#utility.yul\":11767:11899   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":11879:11897   */\n      tag_461\n      tag_389\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11767:11899   */\n    tag_460:\n        /* \"#utility.yul\":12058:12059   */\n      dup3\n        /* \"#utility.yul\":11990:12056   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11986:12060   */\n      add\n        /* \"#utility.yul\":11983:11984   */\n      dup3\n        /* \"#utility.yul\":11979:12061   */\n      sgt\n        /* \"#utility.yul\":11975:11976   */\n      0x00\n        /* \"#utility.yul\":11972:11973   */\n      dup5\n        /* \"#utility.yul\":11968:11977   */\n      slt\n        /* \"#utility.yul\":11964:12062   */\n      and\n        /* \"#utility.yul\":11961:12085   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":12065:12083   */\n      tag_463\n      tag_389\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11961:12085   */\n    tag_462:\n        /* \"#utility.yul\":12110:12111   */\n      dup3\n        /* \"#utility.yul\":12107:12108   */\n      dup3\n        /* \"#utility.yul\":12103:12112   */\n      sub\n        /* \"#utility.yul\":12095:12112   */\n      swap1\n      pop\n        /* \"#utility.yul\":11591:12118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12124:12315   */\n    tag_173:\n        /* \"#utility.yul\":12164:12168   */\n      0x00\n        /* \"#utility.yul\":12184:12204   */\n      tag_465\n        /* \"#utility.yul\":12202:12203   */\n      dup3\n        /* \"#utility.yul\":12184:12204   */\n      tag_365\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12179:12204   */\n      swap2\n      pop\n        /* \"#utility.yul\":12218:12238   */\n      tag_466\n        /* \"#utility.yul\":12236:12237   */\n      dup4\n        /* \"#utility.yul\":12218:12238   */\n      tag_365\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12213:12238   */\n      swap3\n      pop\n        /* \"#utility.yul\":12257:12258   */\n      dup3\n        /* \"#utility.yul\":12254:12255   */\n      dup3\n        /* \"#utility.yul\":12251:12259   */\n      lt\n        /* \"#utility.yul\":12248:12282   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":12262:12280   */\n      tag_468\n      tag_389\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12248:12282   */\n    tag_467:\n        /* \"#utility.yul\":12307:12308   */\n      dup3\n        /* \"#utility.yul\":12304:12305   */\n      dup3\n        /* \"#utility.yul\":12300:12309   */\n      sub\n        /* \"#utility.yul\":12292:12309   */\n      swap1\n      pop\n        /* \"#utility.yul\":12124:12315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12321:12417   */\n    tag_469:\n        /* \"#utility.yul\":12358:12365   */\n      0x00\n        /* \"#utility.yul\":12387:12411   */\n      tag_471\n        /* \"#utility.yul\":12405:12410   */\n      dup3\n        /* \"#utility.yul\":12387:12411   */\n      tag_472\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12376:12411   */\n      swap1\n      pop\n        /* \"#utility.yul\":12321:12417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12423:12513   */\n    tag_473:\n        /* \"#utility.yul\":12457:12464   */\n      0x00\n        /* \"#utility.yul\":12500:12505   */\n      dup2\n        /* \"#utility.yul\":12493:12506   */\n      iszero\n        /* \"#utility.yul\":12486:12507   */\n      iszero\n        /* \"#utility.yul\":12475:12507   */\n      swap1\n      pop\n        /* \"#utility.yul\":12423:12513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12519:12627   */\n    tag_475:\n        /* \"#utility.yul\":12568:12575   */\n      0x00\n        /* \"#utility.yul\":12597:12621   */\n      tag_477\n        /* \"#utility.yul\":12615:12620   */\n      dup3\n        /* \"#utility.yul\":12597:12621   */\n      tag_469\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12586:12621   */\n      swap1\n      pop\n        /* \"#utility.yul\":12519:12627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12633:12743   */\n    tag_478:\n        /* \"#utility.yul\":12684:12691   */\n      0x00\n        /* \"#utility.yul\":12713:12737   */\n      tag_480\n        /* \"#utility.yul\":12731:12736   */\n      dup3\n        /* \"#utility.yul\":12713:12737   */\n      tag_469\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12702:12737   */\n      swap1\n      pop\n        /* \"#utility.yul\":12633:12743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:12825   */\n    tag_361:\n        /* \"#utility.yul\":12785:12792   */\n      0x00\n        /* \"#utility.yul\":12814:12819   */\n      dup2\n        /* \"#utility.yul\":12803:12819   */\n      swap1\n      pop\n        /* \"#utility.yul\":12749:12825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12831:12957   */\n    tag_472:\n        /* \"#utility.yul\":12868:12875   */\n      0x00\n        /* \"#utility.yul\":12908:12950   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12901:12906   */\n      dup3\n        /* \"#utility.yul\":12897:12951   */\n      and\n        /* \"#utility.yul\":12886:12951   */\n      swap1\n      pop\n        /* \"#utility.yul\":12831:12957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12963:13040   */\n    tag_365:\n        /* \"#utility.yul\":13000:13007   */\n      0x00\n        /* \"#utility.yul\":13029:13034   */\n      dup2\n        /* \"#utility.yul\":13018:13034   */\n      swap1\n      pop\n        /* \"#utility.yul\":12963:13040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13046:13184   */\n    tag_353:\n        /* \"#utility.yul\":13108:13117   */\n      0x00\n        /* \"#utility.yul\":13141:13178   */\n      tag_485\n        /* \"#utility.yul\":13172:13177   */\n      dup3\n        /* \"#utility.yul\":13141:13178   */\n      tag_486\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13128:13178   */\n      swap1\n      pop\n        /* \"#utility.yul\":13046:13184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13190:13330   */\n    tag_357:\n        /* \"#utility.yul\":13254:13263   */\n      0x00\n        /* \"#utility.yul\":13287:13324   */\n      tag_488\n        /* \"#utility.yul\":13318:13323   */\n      dup3\n        /* \"#utility.yul\":13287:13324   */\n      tag_486\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13274:13324   */\n      swap1\n      pop\n        /* \"#utility.yul\":13190:13330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13336:13462   */\n    tag_486:\n        /* \"#utility.yul\":13386:13395   */\n      0x00\n        /* \"#utility.yul\":13419:13456   */\n      tag_490\n        /* \"#utility.yul\":13450:13455   */\n      dup3\n        /* \"#utility.yul\":13419:13456   */\n      tag_491\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13406:13456   */\n      swap1\n      pop\n        /* \"#utility.yul\":13336:13462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13468:13581   */\n    tag_491:\n        /* \"#utility.yul\":13518:13527   */\n      0x00\n        /* \"#utility.yul\":13551:13575   */\n      tag_493\n        /* \"#utility.yul\":13569:13574   */\n      dup3\n        /* \"#utility.yul\":13551:13575   */\n      tag_472\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13538:13575   */\n      swap1\n      pop\n        /* \"#utility.yul\":13468:13581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13587:13820   */\n    tag_246:\n        /* \"#utility.yul\":13626:13629   */\n      0x00\n        /* \"#utility.yul\":13649:13673   */\n      tag_495\n        /* \"#utility.yul\":13667:13672   */\n      dup3\n        /* \"#utility.yul\":13649:13673   */\n      tag_365\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13640:13673   */\n      swap2\n      pop\n        /* \"#utility.yul\":13695:13761   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13688:13693   */\n      dup3\n        /* \"#utility.yul\":13685:13762   */\n      eq\n        /* \"#utility.yul\":13682:13785   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":13765:13783   */\n      tag_497\n      tag_389\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13682:13785   */\n    tag_496:\n        /* \"#utility.yul\":13812:13813   */\n      0x01\n        /* \"#utility.yul\":13805:13810   */\n      dup3\n        /* \"#utility.yul\":13801:13814   */\n      add\n        /* \"#utility.yul\":13794:13814   */\n      swap1\n      pop\n        /* \"#utility.yul\":13587:13820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13826:14054   */\n    tag_278:\n        /* \"#utility.yul\":13861:13864   */\n      0x00\n        /* \"#utility.yul\":13884:13907   */\n      tag_499\n        /* \"#utility.yul\":13901:13906   */\n      dup3\n        /* \"#utility.yul\":13884:13907   */\n      tag_361\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13875:13907   */\n      swap2\n      pop\n        /* \"#utility.yul\":13929:13995   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13922:13927   */\n      dup3\n        /* \"#utility.yul\":13919:13996   */\n      eq\n        /* \"#utility.yul\":13916:14019   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":13999:14017   */\n      tag_501\n      tag_389\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13916:14019   */\n    tag_500:\n        /* \"#utility.yul\":14042:14047   */\n      dup2\n        /* \"#utility.yul\":14039:14040   */\n      0x00\n        /* \"#utility.yul\":14035:14048   */\n      sub\n        /* \"#utility.yul\":14028:14048   */\n      swap1\n      pop\n        /* \"#utility.yul\":13826:14054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14060:14240   */\n    tag_185:\n        /* \"#utility.yul\":14108:14185   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14105:14106   */\n      0x00\n        /* \"#utility.yul\":14098:14186   */\n      mstore\n        /* \"#utility.yul\":14205:14209   */\n      0x01\n        /* \"#utility.yul\":14202:14203   */\n      0x04\n        /* \"#utility.yul\":14195:14210   */\n      mstore\n        /* \"#utility.yul\":14229:14233   */\n      0x24\n        /* \"#utility.yul\":14226:14227   */\n      0x00\n        /* \"#utility.yul\":14219:14234   */\n      revert\n        /* \"#utility.yul\":14246:14426   */\n    tag_389:\n        /* \"#utility.yul\":14294:14371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14291:14292   */\n      0x00\n        /* \"#utility.yul\":14284:14372   */\n      mstore\n        /* \"#utility.yul\":14391:14395   */\n      0x11\n        /* \"#utility.yul\":14388:14389   */\n      0x04\n        /* \"#utility.yul\":14381:14396   */\n      mstore\n        /* \"#utility.yul\":14415:14419   */\n      0x24\n        /* \"#utility.yul\":14412:14413   */\n      0x00\n        /* \"#utility.yul\":14405:14420   */\n      revert\n        /* \"#utility.yul\":14432:14612   */\n    tag_402:\n        /* \"#utility.yul\":14480:14557   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14477:14478   */\n      0x00\n        /* \"#utility.yul\":14470:14558   */\n      mstore\n        /* \"#utility.yul\":14577:14581   */\n      0x12\n        /* \"#utility.yul\":14574:14575   */\n      0x04\n        /* \"#utility.yul\":14567:14582   */\n      mstore\n        /* \"#utility.yul\":14601:14605   */\n      0x24\n        /* \"#utility.yul\":14598:14599   */\n      0x00\n        /* \"#utility.yul\":14591:14606   */\n      revert\n        /* \"#utility.yul\":14618:14798   */\n    tag_243:\n        /* \"#utility.yul\":14666:14743   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14663:14664   */\n      0x00\n        /* \"#utility.yul\":14656:14744   */\n      mstore\n        /* \"#utility.yul\":14763:14767   */\n      0x32\n        /* \"#utility.yul\":14760:14761   */\n      0x04\n        /* \"#utility.yul\":14753:14768   */\n      mstore\n        /* \"#utility.yul\":14787:14791   */\n      0x24\n        /* \"#utility.yul\":14784:14785   */\n      0x00\n        /* \"#utility.yul\":14777:14792   */\n      revert\n        /* \"#utility.yul\":14927:15044   */\n    tag_319:\n        /* \"#utility.yul\":15036:15037   */\n      0x00\n        /* \"#utility.yul\":15033:15034   */\n      dup1\n        /* \"#utility.yul\":15026:15038   */\n      revert\n        /* \"#utility.yul\":15050:15152   */\n    tag_419:\n        /* \"#utility.yul\":15092:15100   */\n      0x00\n        /* \"#utility.yul\":15139:15144   */\n      dup2\n        /* \"#utility.yul\":15136:15137   */\n      0x01\n        /* \"#utility.yul\":15132:15145   */\n      shr\n        /* \"#utility.yul\":15111:15145   */\n      swap1\n      pop\n        /* \"#utility.yul\":15050:15152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15158:15274   */\n    tag_296:\n        /* \"#utility.yul\":15228:15249   */\n      tag_511\n        /* \"#utility.yul\":15243:15248   */\n      dup2\n        /* \"#utility.yul\":15228:15249   */\n      tag_473\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15221:15226   */\n      dup2\n        /* \"#utility.yul\":15218:15250   */\n      eq\n        /* \"#utility.yul\":15208:15268   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15264:15265   */\n      0x00\n        /* \"#utility.yul\":15261:15262   */\n      dup1\n        /* \"#utility.yul\":15254:15266   */\n      revert\n        /* \"#utility.yul\":15208:15268   */\n    tag_512:\n        /* \"#utility.yul\":15158:15274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15280:15426   */\n    tag_300:\n        /* \"#utility.yul\":15365:15401   */\n      tag_514\n        /* \"#utility.yul\":15395:15400   */\n      dup2\n        /* \"#utility.yul\":15365:15401   */\n      tag_475\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15358:15363   */\n      dup2\n        /* \"#utility.yul\":15355:15402   */\n      eq\n        /* \"#utility.yul\":15345:15420   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":15416:15417   */\n      0x00\n        /* \"#utility.yul\":15413:15414   */\n      dup1\n        /* \"#utility.yul\":15406:15418   */\n      revert\n        /* \"#utility.yul\":15345:15420   */\n    tag_515:\n        /* \"#utility.yul\":15280:15426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15432:15582   */\n    tag_304:\n        /* \"#utility.yul\":15519:15557   */\n      tag_517\n        /* \"#utility.yul\":15551:15556   */\n      dup2\n        /* \"#utility.yul\":15519:15557   */\n      tag_478\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15512:15517   */\n      dup2\n        /* \"#utility.yul\":15509:15558   */\n      eq\n        /* \"#utility.yul\":15499:15576   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":15572:15573   */\n      0x00\n        /* \"#utility.yul\":15569:15570   */\n      dup1\n        /* \"#utility.yul\":15562:15574   */\n      revert\n        /* \"#utility.yul\":15499:15576   */\n    tag_518:\n        /* \"#utility.yul\":15432:15582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15588:15708   */\n    tag_308:\n        /* \"#utility.yul\":15660:15683   */\n      tag_520\n        /* \"#utility.yul\":15677:15682   */\n      dup2\n        /* \"#utility.yul\":15660:15683   */\n      tag_361\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15653:15658   */\n      dup2\n        /* \"#utility.yul\":15650:15684   */\n      eq\n        /* \"#utility.yul\":15640:15702   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":15698:15699   */\n      0x00\n        /* \"#utility.yul\":15695:15696   */\n      dup1\n        /* \"#utility.yul\":15688:15700   */\n      revert\n        /* \"#utility.yul\":15640:15702   */\n    tag_521:\n        /* \"#utility.yul\":15588:15708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15714:15836   */\n    tag_312:\n        /* \"#utility.yul\":15787:15811   */\n      tag_523\n        /* \"#utility.yul\":15805:15810   */\n      dup2\n        /* \"#utility.yul\":15787:15811   */\n      tag_365\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15780:15785   */\n      dup2\n        /* \"#utility.yul\":15777:15812   */\n      eq\n        /* \"#utility.yul\":15767:15830   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":15826:15827   */\n      0x00\n        /* \"#utility.yul\":15823:15824   */\n      dup1\n        /* \"#utility.yul\":15816:15828   */\n      revert\n        /* \"#utility.yul\":15767:15830   */\n    tag_524:\n        /* \"#utility.yul\":15714:15836   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a268477565d2245838e11e38b3e54a7fda01963ec568880ddab160fea849878f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611c71806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063900cf0cf116100a2578063af14052c11610071578063af14052c14610282578063cd6dc6871461028c578063d94ad837146102a8578063e9fa88a4146102c6578063f4fefa49146102e25761010b565b8063900cf0cf1461020c5780639db59b2f1461022a5780639e30bac514610248578063ab33c5ca146102645761010b565b80635ee01540116100de5780635ee015401461019657806360961528146101b45780637486cdea146101d25780638001066d146101f05761010b565b80633a785af1146101105780633d6a46e5146101405780634dafa35e1461015c57806353a15edc1461017a575b600080fd5b61012a60048036038101906101259190611264565b6102fe565b60405161013791906113d7565b60405180910390f35b61015a6004803603810190610155919061120a565b6104d0565b005b610164610514565b60405161017191906113a1565b60405180910390f35b610194600480360381019061018f91906112cb565b610538565b005b61019e610542565b6040516101ab91906113d7565b60405180910390f35b6101bc610548565b6040516101c991906113bc565b60405180910390f35b6101da61056e565b6040516101e791906113d7565b60405180910390f35b61020a60048036038101906102059190611237565b610574565b005b61021461058c565b60405161022191906113f2565b60405180910390f35b610232610592565b60405161023f91906113d7565b60405180910390f35b610262600480360381019061025d919061120a565b610598565b005b61026c6105dc565b60405161027991906113bc565b60405180910390f35b61028a610602565b005b6102a660048036038101906102a191906111ca565b610b41565b005b6102b0610c57565b6040516102bd91906113f2565b60405180910390f35b6102e060048036038101906102db9190611237565b610c5d565b005b6102fc60048036038101906102f79190611237565b610c75565b005b600080610318866012600a6103139190611653565b610c8d565b9050600061033c6103298584610cd8565b6012600a6103379190611653565b610d40565b90506103566012600a61034f9190611653565b6064610cd8565b811315610378576103756012600a61036e9190611653565b6064610cd8565b90505b6103af6012600a6103899190611653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610cd8565b8112156103f0576103ed6012600a6103c79190611653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610cd8565b90505b6000610409826012600a6104049190611653565b610d93565b9050600081141561041f578693505050506104c8565b600061042b8789610c8d565b9050600061044f610449896012600a6104449190611653565b610cd8565b8a610d40565b905061047161046b826012600a6104669190611653565b610cd8565b84610d40565b9050600061048c6012600a6104869190611653565b83610c8d565b905060008a6104b16104ab866012600a6104a69190611653565b610cd8565b84610d40565b6104bb919061147b565b9050809750505050505050505b949350505050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060048190555050565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b600081121561058257600080fd5b8060088190555050565b60055481565b60075481565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600554610611919061150f565b600581905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190611325565b8092508193505050806106cd57600080fd5b60006106f16106e9846012600a6106e49190611653565b610efa565b600354610f3f565b9050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561075f57600080fd5b505af1158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611325565b8092508193505050806107a957600080fd5b6012600a6107b79190611653565b620f42406107c59190611888565b8211156107eb576012600a6107da9190611653565b620f42406107e89190611888565b91505b60006107f78385610f67565b90506000811380156108f657506012600a6108129190611653565b620f42406108209190611888565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61084b91906115cf565b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108b257600080fd5b505afa1580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea91906112f8565b6108f4919061150f565b115b156109ed5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099991906112f8565b6012600a6109a79190611653565b620f42406109b59190611888565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6109e091906115cf565b6109ea9190611976565b90505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637a43e23f600554846040518363ffffffff1660e01b8152600401610a4d92919061140d565b602060405180830381600087803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906112f8565b90506012600a610aaf9190611653565b620f4240610abd9190611888565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ae891906115cf565b811115610af857610af7611afa565b5b6005547f41d948a7f29cc695f5d4b3ec147f766bffa165ddd317470fbe05c86d0a9c3e0485898542604051610b309493929190611436565b60405180910390a250505050505050565b60026012610b4f9190611976565b600a610b5b9190611653565b6005610b679190611888565b6004819055506012600a610b7b9190611653565b6003610b879190611888565b60088190555060026012610b9b9190611976565b600a610ba79190611653565b600a610bb39190611888565b60078190555060026012610bc79190611976565b600a610bd39190611653565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6610bfe9190611771565b6006819055506000600581905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050565b60045481565b6000811315610c6b57600080fd5b8060068190555050565b6000811215610c8357600080fd5b8060078190555050565b6000808284610c9c91906118e2565b905060008312158015610caf5750838113155b80610cc55750600083128015610cc457508381135b5b610cce57600080fd5b8091505092915050565b6000808284610ce79190611771565b905060ff6001901b81141580610d0b575060ff6001901b831660ff6001901b851614155b610d1457600080fd5b6000831480610d2d5750838382610d2b9190611565565b145b610d3657600080fd5b8091505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141580610d76575060ff6001901b8314155b610d7f57600080fd5b8183610d8b9190611565565b905092915050565b600080600090506000841215610db35760019050610db084611089565b93505b60006040518060a001604052806713a04bbdfdc9be898152602001671080e992061ab32b8152602001670f2243014e544ebb8152602001670e7e0178e9d6ed508152602001670e2e820ade835f4681525090506000610e128686610d40565b90506064811315610e2257600080fd5b6000610e32826001901b87610cd8565b90506000610e4988610e44858a610cd8565b610c8d565b90506000610e58886002610d40565b905060005b6005811015610ece57818312610eae57610e778383610c8d565b9250610eab610e9d85888460058110610e9357610e92611b87565b5b6020020151610cd8565b670de0b6b3a7640000610d40565b93505b610eb9826002610d40565b91508080610ec690611a68565b915050610e5d565b508515610eeb57610ee8610ee2898a610cd8565b84610d40565b92505b82965050505050505092915050565b600080831415610f0d5760009050610f39565b60008284610f1b9190611888565b9050828482610f2a91906115cf565b14610f3457600080fd5b809150505b92915050565b6000808211610f4d57600080fd5b60008284610f5b91906115cf565b90508091505092915050565b6000610f7383836110bd565b15610f815760009050611083565b60008290506000610fa8610fa2866012600a610f9d9190611653565b610cd8565b83610d40565b90506000610fbe826006546007546008546102fe565b905061107d61106a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102c57600080fd5b505afa158015611040573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106491906112f8565b83610cd8565b6012600a6110789190611653565b610d40565b93505050505b92915050565b600060ff6001901b82141561109d57600080fd5b600082126110ab57816110b6565b816110b590611ab1565b5b9050919050565b6000806110e26110cf84600454610efa565b6012600a6110dd9190611653565b610f3f565b90508284101580156110fc5750806110fa8585611123565b105b8061111a575082841080156111195750806111178486611123565b105b5b91505092915050565b60008282111561113257600080fd5b600082846111409190611976565b90508091505092915050565b60008151905061115b81611bc8565b92915050565b60008135905061117081611bdf565b92915050565b60008135905061118581611bf6565b92915050565b60008135905061119a81611c0d565b92915050565b6000813590506111af81611c24565b92915050565b6000815190506111c481611c24565b92915050565b600080604083850312156111e1576111e0611bb6565b5b60006111ef85828601611161565b9250506020611200858286016111a0565b9150509250929050565b6000602082840312156112205761121f611bb6565b5b600061122e84828501611176565b91505092915050565b60006020828403121561124d5761124c611bb6565b5b600061125b8482850161118b565b91505092915050565b6000806000806080858703121561127e5761127d611bb6565b5b600061128c8782880161118b565b945050602061129d8782880161118b565b93505060406112ae8782880161118b565b92505060606112bf8782880161118b565b91505092959194509250565b6000602082840312156112e1576112e0611bb6565b5b60006112ef848285016111a0565b91505092915050565b60006020828403121561130e5761130d611bb6565b5b600061131c848285016111b5565b91505092915050565b6000806040838503121561133c5761133b611bb6565b5b600061134a858286016111b5565b925050602061135b8582860161114c565b9150509250929050565b61136e81611a20565b82525050565b61137d81611a32565b82525050565b61138c816119ec565b82525050565b61139b81611a16565b82525050565b60006020820190506113b66000830184611365565b92915050565b60006020820190506113d16000830184611374565b92915050565b60006020820190506113ec6000830184611383565b92915050565b60006020820190506114076000830184611392565b92915050565b60006040820190506114226000830185611392565b61142f6020830184611383565b9392505050565b600060808201905061144b6000830187611392565b6114586020830186611392565b6114656040830185611383565b6114726060830184611392565b95945050505050565b6000611486826119ec565b9150611491836119ec565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156114cc576114cb611b29565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561150457611503611b29565b5b828201905092915050565b600061151a82611a16565b915061152583611a16565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155a57611559611b29565b5b828201905092915050565b6000611570826119ec565b915061157b836119ec565b92508261158b5761158a611b58565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156115c4576115c3611b29565b5b828205905092915050565b60006115da82611a16565b91506115e583611a16565b9250826115f5576115f4611b58565b5b828204905092915050565b6000808291508390505b600185111561164a5780860481111561162657611625611b29565b5b60018516156116355780820291505b808102905061164385611bbb565b945061160a565b94509492505050565b600061165e82611a16565b915061166983611a16565b92506116967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461169e565b905092915050565b6000826116ae576001905061176a565b816116bc576000905061176a565b81600181146116d257600281146116dc5761170b565b600191505061176a565b60ff8411156116ee576116ed611b29565b5b8360020a91508482111561170557611704611b29565b5b5061176a565b5060208310610133831016604e8410600b84101617156117405782820a90508381111561173b5761173a611b29565b5b61176a565b61174d8484846001611600565b9250905081840481111561176457611763611b29565b5b81810290505b9392505050565b600061177c826119ec565b9150611787836119ec565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156117c6576117c5611b29565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561180357611802611b29565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156118405761183f611b29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561187d5761187c611b29565b5b828202905092915050565b600061189382611a16565b915061189e83611a16565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118d7576118d6611b29565b5b828202905092915050565b60006118ed826119ec565b91506118f8836119ec565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561193357611932611b29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561196b5761196a611b29565b5b828203905092915050565b600061198182611a16565b915061198c83611a16565b92508282101561199f5761199e611b29565b5b828203905092915050565b60006119b5826119f6565b9050919050565b60008115159050919050565b60006119d3826119aa565b9050919050565b60006119e5826119aa565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a2b82611a44565b9050919050565b6000611a3d82611a44565b9050919050565b6000611a4f82611a56565b9050919050565b6000611a61826119f6565b9050919050565b6000611a7382611a16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611aa657611aa5611b29565b5b600182019050919050565b6000611abc826119ec565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611aef57611aee611b29565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b611bd1816119bc565b8114611bdc57600080fd5b50565b611be8816119c8565b8114611bf357600080fd5b50565b611bff816119da565b8114611c0a57600080fd5b50565b611c16816119ec565b8114611c2157600080fd5b50565b611c2d81611a16565b8114611c3857600080fd5b5056fea2646970667358221220a268477565d2245838e11e38b3e54a7fda01963ec568880ddab160fea849878f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C71 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900CF0CF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAF14052C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAF14052C EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xD94AD837 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xE9FA88A4 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xF4FEFA49 EQ PUSH2 0x2E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x9DB59B2F EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x9E30BAC5 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xAB33C5CA EQ PUSH2 0x264 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x5EE01540 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x5EE01540 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x60961528 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x7486CDEA EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8001066D EQ PUSH2 0x1F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x3A785AF1 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x3D6A46E5 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x4DAFA35E EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x53A15EDC EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x318 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C PUSH2 0x329 DUP6 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH2 0x356 PUSH1 0x12 PUSH1 0xA PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xCD8 JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x378 JUMPI PUSH2 0x375 PUSH1 0x12 PUSH1 0xA PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3AF PUSH1 0x12 PUSH1 0xA PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xCD8 JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x3F0 JUMPI PUSH2 0x3ED PUSH1 0x12 PUSH1 0xA PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x409 DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x41F JUMPI DUP7 SWAP4 POP POP POP POP PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP8 DUP10 PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44F PUSH2 0x449 DUP10 PUSH1 0x12 PUSH1 0xA PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP11 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH2 0x471 PUSH2 0x46B DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP5 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x48C PUSH1 0x12 PUSH1 0xA PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP11 PUSH2 0x4B1 PUSH2 0x4AB DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP5 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH2 0x6E9 DUP5 PUSH1 0x12 PUSH1 0xA PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x12 PUSH1 0xA PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7F7 DUP4 DUP6 PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT DUP1 ISZERO PUSH2 0x8F6 JUMPI POP PUSH1 0x12 PUSH1 0xA PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x9ED JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x975 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x999 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A43E23F PUSH1 0x5 SLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP3 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0xA PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x5 SLOAD PUSH32 0x41D948A7F29CC695F5D4B3EC147F766BFFA165DDD317470FBE05C86D0A9C3E04 DUP6 DUP10 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB30 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x12 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xA PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x5 PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xA PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBA7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6 PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xC9C SWAP2 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0xCC5 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCC4 JUMPI POP DUP4 DUP2 SGT JUMPDEST JUMPDEST PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xCE7 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP2 EQ ISZERO DUP1 PUSH2 0xD0B JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 AND PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP6 AND EQ ISZERO JUMPDEST PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0xD2D JUMPI POP DUP4 DUP4 DUP3 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xD36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO DUP1 PUSH2 0xD76 JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 EQ ISZERO JUMPDEST PUSH2 0xD7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP5 SLT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDB0 DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH8 0x13A04BBDFDC9BE89 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1080E992061AB32B DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xF2243014E544EBB DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE7E0178E9D6ED50 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE2E820ADE835F46 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP7 DUP7 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 SGT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE32 DUP3 PUSH1 0x1 SWAP1 SHL DUP8 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE49 DUP9 PUSH2 0xE44 DUP6 DUP11 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE58 DUP9 PUSH1 0x2 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP4 SLT PUSH2 0xEAE JUMPI PUSH2 0xE77 DUP4 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP3 POP PUSH2 0xEAB PUSH2 0xE9D DUP6 DUP9 DUP5 PUSH1 0x5 DUP2 LT PUSH2 0xE93 JUMPI PUSH2 0xE92 PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xCD8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xD40 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH2 0xEB9 DUP3 PUSH1 0x2 PUSH2 0xD40 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xEC6 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE5D JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0xEEB JUMPI PUSH2 0xEE8 PUSH2 0xEE2 DUP10 DUP11 PUSH2 0xCD8 JUMP JUMPDEST DUP5 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xF1B SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST EQ PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF73 DUP4 DUP4 PUSH2 0x10BD JUMP JUMPDEST ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0xFA8 PUSH2 0xFA2 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFBE DUP3 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2FE JUMP JUMPDEST SWAP1 POP PUSH2 0x107D PUSH2 0x106A PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1064 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP4 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP3 EQ ISZERO PUSH2 0x109D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT PUSH2 0x10AB JUMPI DUP2 PUSH2 0x10B6 JUMP JUMPDEST DUP2 PUSH2 0x10B5 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10E2 PUSH2 0x10CF DUP5 PUSH1 0x4 SLOAD PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP DUP3 DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x10FC JUMPI POP DUP1 PUSH2 0x10FA DUP6 DUP6 PUSH2 0x1123 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x111A JUMPI POP DUP3 DUP5 LT DUP1 ISZERO PUSH2 0x1119 JUMPI POP DUP1 PUSH2 0x1117 DUP5 DUP7 PUSH2 0x1123 JUMP JUMPDEST LT JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1140 SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x115B DUP2 PUSH2 0x1BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1170 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1185 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x119A DUP2 PUSH2 0x1C0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11AF DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C4 DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EF DUP6 DUP3 DUP7 ADD PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1200 DUP6 DUP3 DUP7 ADD PUSH2 0x11A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122E DUP5 DUP3 DUP6 ADD PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125B DUP5 DUP3 DUP6 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x127E JUMPI PUSH2 0x127D PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x128C DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x129D DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x12AE DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x12BF DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12EF DUP5 DUP3 DUP6 ADD PUSH2 0x11A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH2 0x130D PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP5 DUP3 DUP6 ADD PUSH2 0x11B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133B PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP6 DUP3 DUP7 ADD PUSH2 0x11B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x135B DUP6 DUP3 DUP7 ADD PUSH2 0x114C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x136E DUP2 PUSH2 0x1A20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x137D DUP2 PUSH2 0x1A32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x138C DUP2 PUSH2 0x19EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x139B DUP2 PUSH2 0x1A16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1374 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1407 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1422 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x142F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x144B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x1458 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x1465 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x1472 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1486 DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1491 DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x1504 JUMPI PUSH2 0x1503 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151A DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1525 DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1570 DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x158B JUMPI PUSH2 0x158A PUSH2 0x1B58 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E5 DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15F5 JUMPI PUSH2 0x15F4 PUSH2 0x1B58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x164A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1626 JUMPI PUSH2 0x1625 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1635 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1643 DUP6 PUSH2 0x1BBB JUMP JUMPDEST SWAP5 POP PUSH2 0x160A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1669 DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP PUSH2 0x1696 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16AE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x176A JUMP JUMPDEST DUP2 PUSH2 0x16BC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x176A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16D2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x16DC JUMPI PUSH2 0x170B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x176A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST POP PUSH2 0x176A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1740 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x173B JUMPI PUSH2 0x173A PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH2 0x176A JUMP JUMPDEST PUSH2 0x174D DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1600 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177C DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1787 DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x17C6 JUMPI PUSH2 0x17C5 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1840 JUMPI PUSH2 0x183F PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x187D JUMPI PUSH2 0x187C PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x189E DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18D7 JUMPI PUSH2 0x18D6 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18ED DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x18F8 DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x196B JUMPI PUSH2 0x196A PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1981 DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D3 DUP3 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E5 DUP3 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2B DUP3 PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3D DUP3 PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP3 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1AA6 JUMPI PUSH2 0x1AA5 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1AEF JUMPI PUSH2 0x1AEE PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BE8 DUP2 PUSH2 0x19C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BFF DUP2 PUSH2 0x19DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C16 DUP2 PUSH2 0x19EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1C21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1A16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH9 0x477565D2245838E11E CODESIZE 0xB3 0xE5 0x4A PUSH32 0xDA01963EC568880DDAB160FEA849878F64736F6C634300080700330000000000 ",
							"sourceMap": "643:8440:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@abs_979": {
									"entryPoint": 4233,
									"id": 979,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cmmd_42": {
									"entryPoint": 1300,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@computeRebasePercentage_530": {
									"entryPoint": 766,
									"id": 530,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@computeSupplyDelta_596": {
									"entryPoint": 3943,
									"id": 596,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cpiOracle_45": {
									"entryPoint": 1500,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deviationThreshold_52": {
									"entryPoint": 3159,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_710": {
									"entryPoint": 3903,
									"id": 710,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_878": {
									"entryPoint": 3392,
									"id": 878,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@epoch_54": {
									"entryPoint": 1420,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_384": {
									"entryPoint": 2881,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@marketOracle_48": {
									"entryPoint": 1352,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_685": {
									"entryPoint": 3834,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_852": {
									"entryPoint": 3288,
									"id": 852,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rebaseFunctionGrowth_84": {
									"entryPoint": 1390,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseFunctionLowerPercentage_80": {
									"entryPoint": 1346,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseFunctionUpperPercentage_82": {
									"entryPoint": 1426,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebase_222": {
									"entryPoint": 1538,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCpiOracle_234": {
									"entryPoint": 1232,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDeviationThreshold_305": {
									"entryPoint": 1336,
									"id": 305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketOracle_246": {
									"entryPoint": 1432,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRebaseFunctionGrowth_262": {
									"entryPoint": 1396,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRebaseFunctionLowerPercentage_278": {
									"entryPoint": 3165,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRebaseFunctionUpperPercentage_294": {
									"entryPoint": 3189,
									"id": 294,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_735": {
									"entryPoint": 4387,
									"id": 735,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_917": {
									"entryPoint": 3213,
									"id": 917,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@twoPower_1133": {
									"entryPoint": 3475,
									"id": 1133,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withinDeviationThreshold_647": {
									"entryPoint": 4285,
									"id": 647,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ICMMD_$18": {
									"entryPoint": 4449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IOracle_$26": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ICMMD_$18t_uint256": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IOracle_$26": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_int256t_int256t_int256": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool_fromMemory": {
									"entryPoint": 4901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_ICMMD_$18__to_t_address__fromStack_reversed": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IOracle_$26__to_t_address__fromStack_reversed": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_int256_t_uint256__to_t_uint256_t_uint256_t_int256_t_uint256__fromStack_reversed": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ICMMD_$18": {
									"entryPoint": 6600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IOracle_$26": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICMMD_$18_to_t_address": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IOracle_$26_to_t_address": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bool": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ICMMD_$18": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IOracle_$26": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15839:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:3",
														"type": ""
													}
												],
												"src": "7:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:99:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "246:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "233:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "301:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ICMMD_$18",
																	"nodeType": "YulIdentifier",
																	"src": "262:38:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "262:45:3"
														}
													]
												},
												"name": "abi_decode_t_contract$_ICMMD_$18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "192:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "200:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "208:5:3",
														"type": ""
													}
												],
												"src": "150:163:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "385:101:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "395:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "417:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "404:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "474:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IOracle_$26",
																	"nodeType": "YulIdentifier",
																	"src": "433:40:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:47:3"
														}
													]
												},
												"name": "abi_decode_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "363:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "371:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "379:5:3",
														"type": ""
													}
												],
												"src": "319:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "543:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "553:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "575:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "562:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "553:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "617:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "591:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "591:32:3"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "521:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "529:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "537:5:3",
														"type": ""
													}
												],
												"src": "492:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "697:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "719:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "706:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "697:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "762:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "735:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "735:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "665:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "673:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "681:5:3",
														"type": ""
													}
												],
												"src": "635:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "853:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "868:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "862:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "853:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "911:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "884:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "884:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "884:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "821:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "829:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "837:5:3",
														"type": ""
													}
												],
												"src": "780:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1024:403:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1070:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1072:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1072:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1072:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1045:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1054:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1041:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1041:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1037:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:32:3"
															},
															"nodeType": "YulIf",
															"src": "1034:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1163:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1178:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1182:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1207:75:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1254:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1265:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1250:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1274:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ICMMD_$18",
																			"nodeType": "YulIdentifier",
																			"src": "1217:32:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:65:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1207:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1302:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1317:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1321:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1347:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1382:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1393:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1378:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1378:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1402:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1357:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1357:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1347:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ICMMD_$18t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "986:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "997:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1009:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1017:6:3",
														"type": ""
													}
												],
												"src": "929:498:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:277:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1559:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1561:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1561:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1561:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1534:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1543:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1530:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1530:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1555:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:32:3"
															},
															"nodeType": "YulIf",
															"src": "1523:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1652:131:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1667:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1681:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1671:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1696:77:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1745:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1756:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1741:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1741:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IOracle_$26",
																			"nodeType": "YulIdentifier",
																			"src": "1706:34:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1706:67:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1696:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:3",
														"type": ""
													}
												],
												"src": "1433:357:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1861:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1907:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1909:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1909:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1909:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1882:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1891:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1878:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1903:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1874:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:32:3"
															},
															"nodeType": "YulIf",
															"src": "1871:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2000:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2015:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2019:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2044:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2078:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2089:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2074:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2074:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2098:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2054:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2044:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1831:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1842:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1854:6:3",
														"type": ""
													}
												],
												"src": "1796:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2242:644:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2289:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2291:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2291:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2291:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2263:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2272:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2259:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2259:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2255:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:33:3"
															},
															"nodeType": "YulIf",
															"src": "2252:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2382:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2397:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2411:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2401:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2426:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2460:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2471:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2456:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2456:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2436:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2426:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2508:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2523:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2527:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2553:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2587:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2598:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2583:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2583:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2607:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2563:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2553:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2635:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2650:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2654:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2680:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2714:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2725:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2710:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2710:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2734:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2690:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2690:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2680:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2762:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2777:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2781:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2807:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2841:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2852:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2837:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2837:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2861:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2817:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2817:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_int256t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2188:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2199:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2211:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2219:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2227:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2235:6:3",
														"type": ""
													}
												],
												"src": "2129:757:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3004:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3006:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3006:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3006:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2979:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3000:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2971:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:32:3"
															},
															"nodeType": "YulIf",
															"src": "2968:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3097:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3112:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3116:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3141:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3176:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3187:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3172:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3151:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3141:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2928:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2939:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2951:6:3",
														"type": ""
													}
												],
												"src": "2892:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3304:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3350:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3352:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3352:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3352:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3325:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3334:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3321:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3346:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3317:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3317:32:3"
															},
															"nodeType": "YulIf",
															"src": "3314:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3443:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3458:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3472:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3462:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3487:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3497:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3497:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3487:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3274:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3285:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3297:6:3",
														"type": ""
													}
												],
												"src": "3227:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3675:410:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3721:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3723:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3723:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3723:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3696:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3705:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3717:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:32:3"
															},
															"nodeType": "YulIf",
															"src": "3685:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3814:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3829:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3833:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3858:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3904:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3915:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3924:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3868:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3858:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3952:126:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3967:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3971:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3997:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4040:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4051:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4036:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4036:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4060:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4007:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3997:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3637:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3648:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3660:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3668:6:3",
														"type": ""
													}
												],
												"src": "3584:501:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4168:78:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4233:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICMMD_$18_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4190:42:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:49:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4178:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4178:62:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4156:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4163:3:3",
														"type": ""
													}
												],
												"src": "4091:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4331:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4398:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IOracle_$26_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4353:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4353:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4341:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4326:3:3",
														"type": ""
													}
												],
												"src": "4252:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4480:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4497:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4519:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "4502:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4502:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4490:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4490:36:3"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4468:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4475:3:3",
														"type": ""
													}
												],
												"src": "4417:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4603:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4620:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4643:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4625:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4625:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4613:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4591:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4598:3:3",
														"type": ""
													}
												],
												"src": "4538:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4772:136:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4782:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4794:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4805:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4790:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4782:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4874:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4887:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4898:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4818:55:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:83:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4818:83:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICMMD_$18__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4744:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4756:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4767:4:3",
														"type": ""
													}
												],
												"src": "4662:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5048:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5059:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5044:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5044:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5036:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5130:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5143:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5154:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5139:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5072:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5072:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5072:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IOracle_$26__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4998:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5010:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5021:4:3",
														"type": ""
													}
												],
												"src": "4914:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5266:122:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5276:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5288:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5276:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5354:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5312:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5312:69:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5238:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5250:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5261:4:3",
														"type": ""
													}
												],
												"src": "5170:218:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5492:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5502:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5510:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5502:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5595:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5606:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5591:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5591:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5538:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5538:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5538:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5464:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5476:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5487:4:3",
														"type": ""
													}
												],
												"src": "5394:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5746:204:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5756:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5768:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5764:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5756:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5836:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5849:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5860:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5845:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5845:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5792:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5792:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5928:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5939:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5924:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5873:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5873:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5873:70:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5710:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5722:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5730:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5741:4:3",
														"type": ""
													}
												],
												"src": "5622:328:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6136:369:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6146:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6158:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6154:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6154:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6146:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6227:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6240:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6183:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6183:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6183:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6308:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6321:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6332:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6317:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6317:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6264:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6264:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6388:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6401:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6412:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6397:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6397:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6346:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6346:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6346:70:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6470:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6483:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6494:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6479:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6479:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6426:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6426:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6426:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_int256_t_uint256__to_t_uint256_t_uint256_t_int256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6084:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6096:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6104:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6112:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6120:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6131:4:3",
														"type": ""
													}
												],
												"src": "5956:549:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6551:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6561:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6571:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6544:6:3",
														"type": ""
													}
												],
												"src": "6511:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6635:482:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6645:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6667:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "6650:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6645:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6678:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6700:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "6683:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6683:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6678:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6876:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6878:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6878:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6878:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6784:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6787:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6780:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6773:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6773:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6803:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6871:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6799:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6799:74:3"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "6792:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6792:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:106:3"
															},
															"nodeType": "YulIf",
															"src": "6766:132:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7063:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7065:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7065:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7065:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "6972:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6975:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6968:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6968:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6983:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6990:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7058:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6986:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6986:74:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6979:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:98:3"
															},
															"nodeType": "YulIf",
															"src": "6961:124:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7095:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7106:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7109:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7095:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6622:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6625:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6631:3:3",
														"type": ""
													}
												],
												"src": "6592:525:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7167:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7177:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7200:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7182:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7177:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7211:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7234:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7216:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7216:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7211:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7374:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7376:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7376:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7376:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7295:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7302:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7370:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7298:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7298:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7292:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:81:3"
															},
															"nodeType": "YulIf",
															"src": "7289:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7406:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7417:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7420:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7413:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7413:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7406:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7154:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7157:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7163:3:3",
														"type": ""
													}
												],
												"src": "7123:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7475:344:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7485:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7507:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "7490:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7485:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7518:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7540:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "7523:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7518:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7564:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7566:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7566:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7566:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7561:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:9:3"
															},
															"nodeType": "YulIf",
															"src": "7551:35:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7768:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7658:66:3",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7652:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7652:73:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7742:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7749:1:3",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7752:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7745:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7745:9:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7739:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7739:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7635:130:3"
															},
															"nodeType": "YulIf",
															"src": "7632:156:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7798:15:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7808:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7811:1:3"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "7803:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7803:10:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7798:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7464:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7467:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7473:1:3",
														"type": ""
													}
												],
												"src": "7434:385:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7867:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7877:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7900:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7882:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7877:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7911:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7934:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7916:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7911:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7958:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7960:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7960:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7960:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7948:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7948:9:3"
															},
															"nodeType": "YulIf",
															"src": "7945:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7990:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7999:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8002:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7995:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7990:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7856:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7859:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7865:1:3",
														"type": ""
													}
												],
												"src": "7825:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8089:775:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8099:15:3",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "8108:6:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8099:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8123:14:3",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "8132:5:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8181:677:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8269:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "8271:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8271:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8271:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8247:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "8257:3:3"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "8262:4:3"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "8253:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8253:14:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "8244:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8244:24:3"
																		},
																		"nodeType": "YulIf",
																		"src": "8241:50:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8336:419:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8716:25:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "8729:5:3"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "8736:4:3"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "8725:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8725:16:3"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "8716:5:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8311:8:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8321:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8307:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8307:16:3"
																		},
																		"nodeType": "YulIf",
																		"src": "8304:451:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8768:23:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8780:4:3"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8786:4:3"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "8776:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8776:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8768:4:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8804:44:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8839:8:3"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "8816:22:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8816:32:3"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "8804:8:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8157:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8167:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8154:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8170:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8150:3:3",
																"statements": []
															},
															"src": "8146:712:3"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "8044:6:3",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "8052:5:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8059:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "8069:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8077:5:3",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8084:4:3",
														"type": ""
													}
												],
												"src": "8016:848:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8936:219:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8946:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8972:4:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8954:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8954:23:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8946:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9016:8:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8998:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:27:3"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "8986:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9035:113:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9065:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9071:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9081:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "9044:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:104:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9035:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8911:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8917:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8930:5:3",
														"type": ""
													}
												],
												"src": "8870:285:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9221:1013:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9416:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9418:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9427:1:3",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9418:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9429:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9406:8:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9399:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:16:3"
															},
															"nodeType": "YulIf",
															"src": "9396:40:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9461:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9463:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9472:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9463:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9474:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9455:4:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9448:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9448:12:3"
															},
															"nodeType": "YulIf",
															"src": "9445:36:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9591:20:3",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "9593:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9602:1:3",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "9593:5:3"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "9604:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9584:27:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9635:176:3",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9670:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "9672:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9672:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9672:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "9655:8:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9665:3:3",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "9652:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9652:17:3"
																				},
																				"nodeType": "YulIf",
																				"src": "9649:43:3"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9705:25:3",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9718:1:3",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "9721:8:3"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "9714:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9714:16:3"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "9705:5:3"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9761:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "9763:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9763:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9763:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "9749:5:3"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "9756:3:3"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "9746:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9746:14:3"
																				},
																				"nodeType": "YulIf",
																				"src": "9743:40:3"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "9796:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9620:191:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9625:1:3",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "9541:4:3"
															},
															"nodeType": "YulSwitch",
															"src": "9534:277:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9943:123:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9957:28:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9970:4:3"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9976:8:3"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "9966:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9966:19:3"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9957:5:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10016:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "10018:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10018:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10018:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "10004:5:3"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "10011:3:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "10001:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10001:14:3"
																		},
																		"nodeType": "YulIf",
																		"src": "9998:40:3"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10051:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "9846:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9852:2:3",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9843:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9843:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "9860:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9870:2:3",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9857:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9857:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9839:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9839:35:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "9895:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9901:3:3",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9892:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9892:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "9910:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9920:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9907:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9907:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9888:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9888:36:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9823:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:111:3"
															},
															"nodeType": "YulIf",
															"src": "9820:246:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10076:57:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10110:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10113:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10119:8:3"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "10129:3:3"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "10091:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:42:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10076:5:3"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10083:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10172:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10174:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10174:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10174:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "10149:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "10160:3:3"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "10165:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "10156:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10156:14:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10146:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10146:25:3"
															},
															"nodeType": "YulIf",
															"src": "10143:51:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10203:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "10216:5:3"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10223:4:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10212:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:16:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10203:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9191:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9197:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "9207:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9215:5:3",
														"type": ""
													}
												],
												"src": "9161:1073:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10287:944:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10297:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10319:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "10302:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10302:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10297:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10330:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10352:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "10335:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10330:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10541:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10543:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10543:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10543:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10439:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10442:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "10435:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10435:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10450:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10453:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "10446:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10446:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10431:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "10461:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10468:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10536:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10464:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10464:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10458:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10427:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:113:3"
															},
															"nodeType": "YulIf",
															"src": "10424:139:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10752:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10754:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10754:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10754:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10648:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10651:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "10644:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10644:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10659:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10662:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10655:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10655:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10640:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10671:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10679:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10747:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "10674:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10674:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10667:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10636:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10636:115:3"
															},
															"nodeType": "YulIf",
															"src": "10633:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10963:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10965:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10965:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10965:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10859:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10862:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10855:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10855:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10870:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10873:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "10866:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10866:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10851:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10851:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "10882:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10890:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10958:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "10885:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10885:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10878:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10847:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10847:115:3"
															},
															"nodeType": "YulIf",
															"src": "10844:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11173:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11175:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11175:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11175:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11069:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11072:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "11065:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11065:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11080:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11083:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "11076:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11076:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11061:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11061:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "11092:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11100:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11168:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "11095:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11095:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11088:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11088:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11057:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11057:115:3"
															},
															"nodeType": "YulIf",
															"src": "11054:141:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11205:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11220:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11223:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11216:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11216:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11205:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10270:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10273:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10279:7:3",
														"type": ""
													}
												],
												"src": "10240:991:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11295:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11318:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11300:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11300:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11295:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11329:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11352:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11334:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11334:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11329:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11527:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11529:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11529:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11529:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11439:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11432:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11432:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11425:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11425:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11447:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11454:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11522:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11450:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11450:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11444:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11444:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:105:3"
															},
															"nodeType": "YulIf",
															"src": "11418:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11559:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11574:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11577:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11570:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11570:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11559:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11268:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11271:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11277:7:3",
														"type": ""
													}
												],
												"src": "11237:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11635:483:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11645:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11667:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11650:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11650:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11645:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11678:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11700:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11683:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11683:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11678:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11877:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11879:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11879:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11879:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11785:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11788:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "11781:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11781:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11774:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11774:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "11797:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11804:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11872:1:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11800:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11800:74:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11793:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11793:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:106:3"
															},
															"nodeType": "YulIf",
															"src": "11767:132:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12063:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12065:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12065:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12065:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11972:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11968:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11968:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "11983:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11990:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12058:1:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11986:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11986:74:3"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11979:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11964:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11964:98:3"
															},
															"nodeType": "YulIf",
															"src": "11961:124:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12095:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12107:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12110:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12103:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12095:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11621:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11624:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11630:4:3",
														"type": ""
													}
												],
												"src": "11591:527:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12169:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12179:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12202:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12184:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12184:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12179:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12213:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12236:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12218:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12218:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12213:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12260:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12262:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12262:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12262:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12254:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12257:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12251:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12251:8:3"
															},
															"nodeType": "YulIf",
															"src": "12248:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12292:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12304:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12307:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12300:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12300:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12292:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12155:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12158:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12164:4:3",
														"type": ""
													}
												],
												"src": "12124:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12366:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12376:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12405:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12387:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12376:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12348:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12358:7:3",
														"type": ""
													}
												],
												"src": "12321:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12465:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12475:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12500:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12493:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12493:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12486:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12486:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12475:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12447:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12457:7:3",
														"type": ""
													}
												],
												"src": "12423:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12576:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12586:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12615:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12597:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12586:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ICMMD_$18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12558:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12568:7:3",
														"type": ""
													}
												],
												"src": "12519:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12692:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12702:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12731:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12713:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12702:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12674:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12684:7:3",
														"type": ""
													}
												],
												"src": "12633:110:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12793:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12803:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12814:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12803:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12775:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12785:7:3",
														"type": ""
													}
												],
												"src": "12749:76:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12876:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12886:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12901:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12908:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12897:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12897:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12886:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12858:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12868:7:3",
														"type": ""
													}
												],
												"src": "12831:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13008:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13018:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13029:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13018:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12990:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13000:7:3",
														"type": ""
													}
												],
												"src": "12963:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13118:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13128:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13172:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13141:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13141:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13128:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICMMD_$18_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13098:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13108:9:3",
														"type": ""
													}
												],
												"src": "13046:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13264:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13274:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13318:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13287:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13287:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13274:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IOracle_$26_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13244:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13254:9:3",
														"type": ""
													}
												],
												"src": "13190:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13396:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13406:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13450:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13419:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13406:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13376:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13386:9:3",
														"type": ""
													}
												],
												"src": "13336:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13528:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13538:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13569:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13551:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13551:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13538:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13508:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13518:9:3",
														"type": ""
													}
												],
												"src": "13468:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13630:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13640:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13667:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13649:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13649:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13640:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13763:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13765:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13765:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13765:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13688:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13685:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:77:3"
															},
															"nodeType": "YulIf",
															"src": "13682:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13794:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13805:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13812:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13794:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13616:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13626:3:3",
														"type": ""
													}
												],
												"src": "13587:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13865:189:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13875:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13901:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13884:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13875:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13997:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13999:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13999:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13999:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13922:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13929:66:3",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13919:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13919:77:3"
															},
															"nodeType": "YulIf",
															"src": "13916:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14028:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14039:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14042:5:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14035:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14028:3:3"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13851:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13861:3:3",
														"type": ""
													}
												],
												"src": "13826:228:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14088:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14105:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14108:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14098:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14098:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14098:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14202:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14205:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14195:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14195:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14195:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14226:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14229:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14219:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14219:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "14060:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14274:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14291:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14294:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14284:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14284:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14284:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14388:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14391:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14381:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14381:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14412:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14415:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14405:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14405:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14405:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14246:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14460:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14477:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14480:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14470:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14470:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14574:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14577:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14567:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14567:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14598:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14601:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14591:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14591:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14591:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14432:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14646:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14663:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14666:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14656:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14656:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14656:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14760:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14763:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14753:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14753:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14753:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14784:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14787:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14777:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14777:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14777:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14618:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14893:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14910:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14913:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14903:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14903:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14903:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "14804:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15016:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15033:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15036:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15026:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15026:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15026:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14927:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15101:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15111:34:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15139:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "15132:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15132:13:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "15111:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15082:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "15092:8:3",
														"type": ""
													}
												],
												"src": "15050:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15198:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15252:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15261:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15264:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15254:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15254:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15254:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15221:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15243:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15228:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15228:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15218:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15218:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15211:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15211:40:3"
															},
															"nodeType": "YulIf",
															"src": "15208:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15191:5:3",
														"type": ""
													}
												],
												"src": "15158:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15335:91:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15404:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15413:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15416:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15406:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15406:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15406:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15358:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15395:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ICMMD_$18",
																					"nodeType": "YulIdentifier",
																					"src": "15365:29:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15365:36:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15355:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15355:47:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15348:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15348:55:3"
															},
															"nodeType": "YulIf",
															"src": "15345:75:3"
														}
													]
												},
												"name": "validator_revert_t_contract$_ICMMD_$18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15328:5:3",
														"type": ""
													}
												],
												"src": "15280:146:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15489:93:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15560:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15569:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15572:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15562:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15562:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15562:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15512:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15551:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IOracle_$26",
																					"nodeType": "YulIdentifier",
																					"src": "15519:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15519:38:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15509:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15509:49:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15502:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15502:57:3"
															},
															"nodeType": "YulIf",
															"src": "15499:77:3"
														}
													]
												},
												"name": "validator_revert_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15482:5:3",
														"type": ""
													}
												],
												"src": "15432:150:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15630:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15686:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15695:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15698:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15688:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15688:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15688:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15653:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15677:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "15660:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15660:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15650:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15650:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15643:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15643:42:3"
															},
															"nodeType": "YulIf",
															"src": "15640:62:3"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15623:5:3",
														"type": ""
													}
												],
												"src": "15588:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15757:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15814:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15823:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15826:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15816:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15816:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15816:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15780:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15805:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15787:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15787:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15777:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15777:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15770:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15770:43:3"
															},
															"nodeType": "YulIf",
															"src": "15767:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15750:5:3",
														"type": ""
													}
												],
												"src": "15714:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ICMMD_$18(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ICMMD_$18(value)\n    }\n\n    function abi_decode_t_contract$_IOracle_$26(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IOracle_$26(value)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ICMMD_$18t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ICMMD_$18(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IOracle_$26(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IOracle_$26(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_int256t_int256t_int256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICMMD_$18_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IOracle_$26_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICMMD_$18__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IOracle_$26__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_int256_t_uint256__to_t_uint256_t_uint256_t_int256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // underflow, if y >= 0 and x < (minValue + y)\n        if and(iszero(slt(y, 0)), slt(x, add(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if y < 0 and x > (maxValue + y)\n        if and(slt(y, 0), sgt(x, add(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ICMMD_$18(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IOracle_$26(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ICMMD_$18_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IOracle_$26_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ICMMD_$18(value) {\n        if iszero(eq(value, cleanup_t_contract$_ICMMD_$18(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IOracle_$26(value) {\n        if iszero(eq(value, cleanup_t_contract$_IOracle_$26(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063900cf0cf116100a2578063af14052c11610071578063af14052c14610282578063cd6dc6871461028c578063d94ad837146102a8578063e9fa88a4146102c6578063f4fefa49146102e25761010b565b8063900cf0cf1461020c5780639db59b2f1461022a5780639e30bac514610248578063ab33c5ca146102645761010b565b80635ee01540116100de5780635ee015401461019657806360961528146101b45780637486cdea146101d25780638001066d146101f05761010b565b80633a785af1146101105780633d6a46e5146101405780634dafa35e1461015c57806353a15edc1461017a575b600080fd5b61012a60048036038101906101259190611264565b6102fe565b60405161013791906113d7565b60405180910390f35b61015a6004803603810190610155919061120a565b6104d0565b005b610164610514565b60405161017191906113a1565b60405180910390f35b610194600480360381019061018f91906112cb565b610538565b005b61019e610542565b6040516101ab91906113d7565b60405180910390f35b6101bc610548565b6040516101c991906113bc565b60405180910390f35b6101da61056e565b6040516101e791906113d7565b60405180910390f35b61020a60048036038101906102059190611237565b610574565b005b61021461058c565b60405161022191906113f2565b60405180910390f35b610232610592565b60405161023f91906113d7565b60405180910390f35b610262600480360381019061025d919061120a565b610598565b005b61026c6105dc565b60405161027991906113bc565b60405180910390f35b61028a610602565b005b6102a660048036038101906102a191906111ca565b610b41565b005b6102b0610c57565b6040516102bd91906113f2565b60405180910390f35b6102e060048036038101906102db9190611237565b610c5d565b005b6102fc60048036038101906102f79190611237565b610c75565b005b600080610318866012600a6103139190611653565b610c8d565b9050600061033c6103298584610cd8565b6012600a6103379190611653565b610d40565b90506103566012600a61034f9190611653565b6064610cd8565b811315610378576103756012600a61036e9190611653565b6064610cd8565b90505b6103af6012600a6103899190611653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610cd8565b8112156103f0576103ed6012600a6103c79190611653565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610cd8565b90505b6000610409826012600a6104049190611653565b610d93565b9050600081141561041f578693505050506104c8565b600061042b8789610c8d565b9050600061044f610449896012600a6104449190611653565b610cd8565b8a610d40565b905061047161046b826012600a6104669190611653565b610cd8565b84610d40565b9050600061048c6012600a6104869190611653565b83610c8d565b905060008a6104b16104ab866012600a6104a69190611653565b610cd8565b84610d40565b6104bb919061147b565b9050809750505050505050505b949350505050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060048190555050565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b600081121561058257600080fd5b8060088190555050565b60055481565b60075481565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600554610611919061150f565b600581905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190611325565b8092508193505050806106cd57600080fd5b60006106f16106e9846012600a6106e49190611653565b610efa565b600354610f3f565b9050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561075f57600080fd5b505af1158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611325565b8092508193505050806107a957600080fd5b6012600a6107b79190611653565b620f42406107c59190611888565b8211156107eb576012600a6107da9190611653565b620f42406107e89190611888565b91505b60006107f78385610f67565b90506000811380156108f657506012600a6108129190611653565b620f42406108209190611888565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61084b91906115cf565b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108b257600080fd5b505afa1580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea91906112f8565b6108f4919061150f565b115b156109ed5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099991906112f8565b6012600a6109a79190611653565b620f42406109b59190611888565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6109e091906115cf565b6109ea9190611976565b90505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637a43e23f600554846040518363ffffffff1660e01b8152600401610a4d92919061140d565b602060405180830381600087803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906112f8565b90506012600a610aaf9190611653565b620f4240610abd9190611888565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ae891906115cf565b811115610af857610af7611afa565b5b6005547f41d948a7f29cc695f5d4b3ec147f766bffa165ddd317470fbe05c86d0a9c3e0485898542604051610b309493929190611436565b60405180910390a250505050505050565b60026012610b4f9190611976565b600a610b5b9190611653565b6005610b679190611888565b6004819055506012600a610b7b9190611653565b6003610b879190611888565b60088190555060026012610b9b9190611976565b600a610ba79190611653565b600a610bb39190611888565b60078190555060026012610bc79190611976565b600a610bd39190611653565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6610bfe9190611771565b6006819055506000600581905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050565b60045481565b6000811315610c6b57600080fd5b8060068190555050565b6000811215610c8357600080fd5b8060078190555050565b6000808284610c9c91906118e2565b905060008312158015610caf5750838113155b80610cc55750600083128015610cc457508381135b5b610cce57600080fd5b8091505092915050565b6000808284610ce79190611771565b905060ff6001901b81141580610d0b575060ff6001901b831660ff6001901b851614155b610d1457600080fd5b6000831480610d2d5750838382610d2b9190611565565b145b610d3657600080fd5b8091505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141580610d76575060ff6001901b8314155b610d7f57600080fd5b8183610d8b9190611565565b905092915050565b600080600090506000841215610db35760019050610db084611089565b93505b60006040518060a001604052806713a04bbdfdc9be898152602001671080e992061ab32b8152602001670f2243014e544ebb8152602001670e7e0178e9d6ed508152602001670e2e820ade835f4681525090506000610e128686610d40565b90506064811315610e2257600080fd5b6000610e32826001901b87610cd8565b90506000610e4988610e44858a610cd8565b610c8d565b90506000610e58886002610d40565b905060005b6005811015610ece57818312610eae57610e778383610c8d565b9250610eab610e9d85888460058110610e9357610e92611b87565b5b6020020151610cd8565b670de0b6b3a7640000610d40565b93505b610eb9826002610d40565b91508080610ec690611a68565b915050610e5d565b508515610eeb57610ee8610ee2898a610cd8565b84610d40565b92505b82965050505050505092915050565b600080831415610f0d5760009050610f39565b60008284610f1b9190611888565b9050828482610f2a91906115cf565b14610f3457600080fd5b809150505b92915050565b6000808211610f4d57600080fd5b60008284610f5b91906115cf565b90508091505092915050565b6000610f7383836110bd565b15610f815760009050611083565b60008290506000610fa8610fa2866012600a610f9d9190611653565b610cd8565b83610d40565b90506000610fbe826006546007546008546102fe565b905061107d61106a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102c57600080fd5b505afa158015611040573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106491906112f8565b83610cd8565b6012600a6110789190611653565b610d40565b93505050505b92915050565b600060ff6001901b82141561109d57600080fd5b600082126110ab57816110b6565b816110b590611ab1565b5b9050919050565b6000806110e26110cf84600454610efa565b6012600a6110dd9190611653565b610f3f565b90508284101580156110fc5750806110fa8585611123565b105b8061111a575082841080156111195750806111178486611123565b105b5b91505092915050565b60008282111561113257600080fd5b600082846111409190611976565b90508091505092915050565b60008151905061115b81611bc8565b92915050565b60008135905061117081611bdf565b92915050565b60008135905061118581611bf6565b92915050565b60008135905061119a81611c0d565b92915050565b6000813590506111af81611c24565b92915050565b6000815190506111c481611c24565b92915050565b600080604083850312156111e1576111e0611bb6565b5b60006111ef85828601611161565b9250506020611200858286016111a0565b9150509250929050565b6000602082840312156112205761121f611bb6565b5b600061122e84828501611176565b91505092915050565b60006020828403121561124d5761124c611bb6565b5b600061125b8482850161118b565b91505092915050565b6000806000806080858703121561127e5761127d611bb6565b5b600061128c8782880161118b565b945050602061129d8782880161118b565b93505060406112ae8782880161118b565b92505060606112bf8782880161118b565b91505092959194509250565b6000602082840312156112e1576112e0611bb6565b5b60006112ef848285016111a0565b91505092915050565b60006020828403121561130e5761130d611bb6565b5b600061131c848285016111b5565b91505092915050565b6000806040838503121561133c5761133b611bb6565b5b600061134a858286016111b5565b925050602061135b8582860161114c565b9150509250929050565b61136e81611a20565b82525050565b61137d81611a32565b82525050565b61138c816119ec565b82525050565b61139b81611a16565b82525050565b60006020820190506113b66000830184611365565b92915050565b60006020820190506113d16000830184611374565b92915050565b60006020820190506113ec6000830184611383565b92915050565b60006020820190506114076000830184611392565b92915050565b60006040820190506114226000830185611392565b61142f6020830184611383565b9392505050565b600060808201905061144b6000830187611392565b6114586020830186611392565b6114656040830185611383565b6114726060830184611392565b95945050505050565b6000611486826119ec565b9150611491836119ec565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156114cc576114cb611b29565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561150457611503611b29565b5b828201905092915050565b600061151a82611a16565b915061152583611a16565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155a57611559611b29565b5b828201905092915050565b6000611570826119ec565b915061157b836119ec565b92508261158b5761158a611b58565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156115c4576115c3611b29565b5b828205905092915050565b60006115da82611a16565b91506115e583611a16565b9250826115f5576115f4611b58565b5b828204905092915050565b6000808291508390505b600185111561164a5780860481111561162657611625611b29565b5b60018516156116355780820291505b808102905061164385611bbb565b945061160a565b94509492505050565b600061165e82611a16565b915061166983611a16565b92506116967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461169e565b905092915050565b6000826116ae576001905061176a565b816116bc576000905061176a565b81600181146116d257600281146116dc5761170b565b600191505061176a565b60ff8411156116ee576116ed611b29565b5b8360020a91508482111561170557611704611b29565b5b5061176a565b5060208310610133831016604e8410600b84101617156117405782820a90508381111561173b5761173a611b29565b5b61176a565b61174d8484846001611600565b9250905081840481111561176457611763611b29565b5b81810290505b9392505050565b600061177c826119ec565b9150611787836119ec565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156117c6576117c5611b29565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561180357611802611b29565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156118405761183f611b29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561187d5761187c611b29565b5b828202905092915050565b600061189382611a16565b915061189e83611a16565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118d7576118d6611b29565b5b828202905092915050565b60006118ed826119ec565b91506118f8836119ec565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561193357611932611b29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561196b5761196a611b29565b5b828203905092915050565b600061198182611a16565b915061198c83611a16565b92508282101561199f5761199e611b29565b5b828203905092915050565b60006119b5826119f6565b9050919050565b60008115159050919050565b60006119d3826119aa565b9050919050565b60006119e5826119aa565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a2b82611a44565b9050919050565b6000611a3d82611a44565b9050919050565b6000611a4f82611a56565b9050919050565b6000611a61826119f6565b9050919050565b6000611a7382611a16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611aa657611aa5611b29565b5b600182019050919050565b6000611abc826119ec565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611aef57611aee611b29565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b611bd1816119bc565b8114611bdc57600080fd5b50565b611be8816119c8565b8114611bf357600080fd5b50565b611bff816119da565b8114611c0a57600080fd5b50565b611c16816119ec565b8114611c2157600080fd5b50565b611c2d81611a16565b8114611c3857600080fd5b5056fea2646970667358221220a268477565d2245838e11e38b3e54a7fda01963ec568880ddab160fea849878f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900CF0CF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAF14052C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAF14052C EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xD94AD837 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xE9FA88A4 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xF4FEFA49 EQ PUSH2 0x2E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x9DB59B2F EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x9E30BAC5 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xAB33C5CA EQ PUSH2 0x264 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x5EE01540 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x5EE01540 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x60961528 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x7486CDEA EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8001066D EQ PUSH2 0x1F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x3A785AF1 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x3D6A46E5 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x4DAFA35E EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x53A15EDC EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x318 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C PUSH2 0x329 DUP6 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH2 0x356 PUSH1 0x12 PUSH1 0xA PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xCD8 JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x378 JUMPI PUSH2 0x375 PUSH1 0x12 PUSH1 0xA PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3AF PUSH1 0x12 PUSH1 0xA PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xCD8 JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x3F0 JUMPI PUSH2 0x3ED PUSH1 0x12 PUSH1 0xA PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x409 DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x41F JUMPI DUP7 SWAP4 POP POP POP POP PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP8 DUP10 PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44F PUSH2 0x449 DUP10 PUSH1 0x12 PUSH1 0xA PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP11 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH2 0x471 PUSH2 0x46B DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP5 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x48C PUSH1 0x12 PUSH1 0xA PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP11 PUSH2 0x4B1 PUSH2 0x4AB DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP5 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH2 0x6E9 DUP5 PUSH1 0x12 PUSH1 0xA PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x773 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x12 PUSH1 0xA PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7F7 DUP4 DUP6 PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT DUP1 ISZERO PUSH2 0x8F6 JUMPI POP PUSH1 0x12 PUSH1 0xA PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x9ED JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x975 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x999 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A43E23F PUSH1 0x5 SLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP3 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0xA PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x5 SLOAD PUSH32 0x41D948A7F29CC695F5D4B3EC147F766BFFA165DDD317470FBE05C86D0A9C3E04 DUP6 DUP10 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB30 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x12 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xA PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x5 PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xA PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBA7 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6 PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xC9C SWAP2 SWAP1 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0xCC5 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCC4 JUMPI POP DUP4 DUP2 SGT JUMPDEST JUMPDEST PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xCE7 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP2 EQ ISZERO DUP1 PUSH2 0xD0B JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 AND PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP6 AND EQ ISZERO JUMPDEST PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0xD2D JUMPI POP DUP4 DUP4 DUP3 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xD36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO DUP1 PUSH2 0xD76 JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 EQ ISZERO JUMPDEST PUSH2 0xD7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP5 SLT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDB0 DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH8 0x13A04BBDFDC9BE89 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1080E992061AB32B DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xF2243014E544EBB DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE7E0178E9D6ED50 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE2E820ADE835F46 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP7 DUP7 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 SGT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE32 DUP3 PUSH1 0x1 SWAP1 SHL DUP8 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE49 DUP9 PUSH2 0xE44 DUP6 DUP11 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE58 DUP9 PUSH1 0x2 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP4 SLT PUSH2 0xEAE JUMPI PUSH2 0xE77 DUP4 DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP3 POP PUSH2 0xEAB PUSH2 0xE9D DUP6 DUP9 DUP5 PUSH1 0x5 DUP2 LT PUSH2 0xE93 JUMPI PUSH2 0xE92 PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xCD8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xD40 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH2 0xEB9 DUP3 PUSH1 0x2 PUSH2 0xD40 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xEC6 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE5D JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0xEEB JUMPI PUSH2 0xEE8 PUSH2 0xEE2 DUP10 DUP11 PUSH2 0xCD8 JUMP JUMPDEST DUP5 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xF1B SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST EQ PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF73 DUP4 DUP4 PUSH2 0x10BD JUMP JUMPDEST ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0xFA8 PUSH2 0xFA2 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFBE DUP3 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2FE JUMP JUMPDEST SWAP1 POP PUSH2 0x107D PUSH2 0x106A PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1064 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP4 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP3 EQ ISZERO PUSH2 0x109D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT PUSH2 0x10AB JUMPI DUP2 PUSH2 0x10B6 JUMP JUMPDEST DUP2 PUSH2 0x10B5 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10E2 PUSH2 0x10CF DUP5 PUSH1 0x4 SLOAD PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP DUP3 DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x10FC JUMPI POP DUP1 PUSH2 0x10FA DUP6 DUP6 PUSH2 0x1123 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x111A JUMPI POP DUP3 DUP5 LT DUP1 ISZERO PUSH2 0x1119 JUMPI POP DUP1 PUSH2 0x1117 DUP5 DUP7 PUSH2 0x1123 JUMP JUMPDEST LT JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1140 SWAP2 SWAP1 PUSH2 0x1976 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x115B DUP2 PUSH2 0x1BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1170 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1185 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x119A DUP2 PUSH2 0x1C0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11AF DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C4 DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EF DUP6 DUP3 DUP7 ADD PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1200 DUP6 DUP3 DUP7 ADD PUSH2 0x11A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122E DUP5 DUP3 DUP6 ADD PUSH2 0x1176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x125B DUP5 DUP3 DUP6 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x127E JUMPI PUSH2 0x127D PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x128C DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x129D DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x12AE DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x12BF DUP8 DUP3 DUP9 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12EF DUP5 DUP3 DUP6 ADD PUSH2 0x11A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH2 0x130D PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x131C DUP5 DUP3 DUP6 ADD PUSH2 0x11B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133B PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP6 DUP3 DUP7 ADD PUSH2 0x11B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x135B DUP6 DUP3 DUP7 ADD PUSH2 0x114C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x136E DUP2 PUSH2 0x1A20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x137D DUP2 PUSH2 0x1A32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x138C DUP2 PUSH2 0x19EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x139B DUP2 PUSH2 0x1A16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1374 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1407 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1422 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x142F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x144B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x1458 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x1465 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x1472 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1486 DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1491 DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x1504 JUMPI PUSH2 0x1503 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151A DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1525 DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1570 DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x158B JUMPI PUSH2 0x158A PUSH2 0x1B58 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E5 DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15F5 JUMPI PUSH2 0x15F4 PUSH2 0x1B58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x164A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1626 JUMPI PUSH2 0x1625 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1635 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1643 DUP6 PUSH2 0x1BBB JUMP JUMPDEST SWAP5 POP PUSH2 0x160A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1669 DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP PUSH2 0x1696 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16AE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x176A JUMP JUMPDEST DUP2 PUSH2 0x16BC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x176A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16D2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x16DC JUMPI PUSH2 0x170B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x176A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST POP PUSH2 0x176A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1740 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x173B JUMPI PUSH2 0x173A PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH2 0x176A JUMP JUMPDEST PUSH2 0x174D DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1600 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177C DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x1787 DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x17C6 JUMPI PUSH2 0x17C5 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1840 JUMPI PUSH2 0x183F PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x187D JUMPI PUSH2 0x187C PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x189E DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18D7 JUMPI PUSH2 0x18D6 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18ED DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH2 0x18F8 DUP4 PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x196B JUMPI PUSH2 0x196A PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1981 DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP4 PUSH2 0x1A16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D3 DUP3 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E5 DUP3 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2B DUP3 PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3D DUP3 PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP3 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 DUP3 PUSH2 0x1A16 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1AA6 JUMPI PUSH2 0x1AA5 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC DUP3 PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1AEF JUMPI PUSH2 0x1AEE PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BE8 DUP2 PUSH2 0x19C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BFF DUP2 PUSH2 0x19DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C16 DUP2 PUSH2 0x19EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1C21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1A16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH9 0x477565D2245838E11E CODESIZE 0xB3 0xE5 0x4A PUSH32 0xDA01963EC568880DDAB160FEA849878F64736F6C634300080700330000000000 ",
							"sourceMap": "643:8440:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6179:1311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3641:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;851:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4994:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2126:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1053:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2224:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3986:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1585:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2175:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3879:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;945:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2561:940;;;:::i;:::-;;5352:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1494:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4168:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6179:1311;6337:6;6355:12;6386:35;6402:14;1648:2;2302;:12;;;;:::i;:::-;6386:15;:35::i;:::-;6378:43;;6511:15;6529:50;6545:29;6561:6;6568:5;6545:15;:29::i;:::-;1648:2;2302;:12;;;;:::i;:::-;6529:15;:50::i;:::-;6511:68;;6672:24;1648:2;2302;:12;;;;:::i;:::-;6692:3;6672:15;:24::i;:::-;6661:8;:35;6657:101;;;6723:24;1648:2;2302;:12;;;;:::i;:::-;6743:3;6723:15;:24::i;:::-;6712:35;;6657:101;6782:25;1648:2;2302;:12;;;;:::i;:::-;6802:4;6782:15;:25::i;:::-;6771:8;:36;6767:103;;;6834:25;1648:2;2302;:12;;;;:::i;:::-;6854:4;6834:15;:25::i;:::-;6823:36;;6767:103;6880:10;6893:35;6914:8;1648:2;2302;:12;;;;:::i;:::-;6893:20;:35::i;:::-;6880:48;;6969:1;6962:3;:8;6958:51;;;6993:5;6986:12;;;;;;;6958:51;7018:16;7037:28;7053:5;7059;7037:15;:28::i;:::-;7018:47;;7091:19;7113:49;7129:26;7145:5;1648:2;2302;:12;;;;:::i;:::-;7129:15;:26::i;:::-;7156:5;7113:15;:49::i;:::-;7091:71;;7187:54;7203:33;7219:12;1648:2;2302;:12;;;;:::i;:::-;7203:15;:33::i;:::-;7237:3;7187:15;:54::i;:::-;7172:69;;7251:18;7272:33;1648:2;2302;:12;;;;:::i;:::-;7292;7272:15;:33::i;:::-;7251:54;;7355:23;7445:5;7382:59;7398:30;7414:9;1648:2;2302;:12;;;;:::i;:::-;7398:15;:30::i;:::-;7429:11;7382:15;:59::i;:::-;7381:69;;;;:::i;:::-;7355:95;;7467:16;7460:23;;;;;;;;;6179:1311;;;;;;;:::o;3641:88::-;3712:10;3700:9;;:22;;;;;;;;;;;;;;;;;;3641:88;:::o;851:17::-;;;;;;;;;;;;:::o;4994:124::-;5092:19;5071:18;:40;;;;4994:124;:::o;2126:43::-;;;;:::o;1053:27::-;;;;;;;;;;;;;:::o;2224:34::-;;;;:::o;3986:176::-;4099:1;4074:21;:26;;4066:35;;;;;;4134:21;4111:20;:44;;;;3986:176;:::o;1585:20::-;;;;:::o;2175:43::-;;;;:::o;3879:100::-;3959:13;3944:12;;:28;;;;;;;;;;;;;;;;;;3879:100;:::o;945:24::-;;;;;;;;;;;;;:::o;2561:940::-;2612:1;2604:5;;:9;;;;:::i;:::-;2596:5;:17;;;;2624:11;2645:13;2686:9;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2668:37;;;;;;;;2723:8;2715:17;;;;;;2743:18;2764:54;2777:30;2790:3;1648:2;2794;:12;;;;:::i;:::-;2777;:30::i;:::-;2809:7;;2764:12;:54::i;:::-;2743:75;;2829:20;2859:14;2911:12;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2883:50;;;;;;;;2951:9;2943:18;;;;;;1648:2;1851;:12;;;;:::i;:::-;1843:5;:20;;;;:::i;:::-;2976:12;:23;2972:77;;;1648:2;1851;:12;;;;:::i;:::-;1843:5;:20;;;;:::i;:::-;3015:23;;2972:77;3059:18;3080:44;3099:12;3113:10;3080:18;:44::i;:::-;3059:65;;3153:1;3139:11;:15;:75;;;;;1648:2;1851;:12;;;;:::i;:::-;1843:5;:20;;;;:::i;:::-;1957:16;1949:36;;;;:::i;:::-;3188:11;3158:4;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:56;3139:75;3135:161;;;3265:4;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1648:2;1851;:12;;;;:::i;:::-;1843:5;:20;;;;:::i;:::-;1957:16;1949:36;;;;:::i;:::-;3251:33;;;;:::i;:::-;3230:55;;3135:161;3306:25;3334:4;;;;;;;;;;;:11;;;3346:5;;3353:11;3334:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3306:59;;1648:2;1851;:12;;;;:::i;:::-;1843:5;:20;;;;:::i;:::-;1957:16;1949:36;;;;:::i;:::-;3382:17;:31;;3375:39;;;;:::i;:::-;;3439:5;;3429:65;3446:12;3460:3;3465:11;3478:15;3429:65;;;;;;;;;:::i;:::-;;;;;;;;2586:915;;;;;;;2561:940::o;5352:493::-;5531:1;1648:2;5520:12;;;;:::i;:::-;5515:2;:18;;;;:::i;:::-;5511:1;:22;;;;:::i;:::-;5490:18;:43;;;;1648:2;5579;:12;;;;:::i;:::-;5574:1;:18;;;;:::i;:::-;5544:20;:49;;;;5664:1;1648:2;5653:12;;;;:::i;:::-;5648:2;:18;;;;:::i;:::-;5642:2;:25;;;;:::i;:::-;5603:29;:65;;;;5755:1;1648:2;5744:12;;;;:::i;:::-;5739:2;:18;;;;:::i;:::-;5725:3;5724:34;;;;:::i;:::-;5685:29;:74;;;;5786:1;5778:5;:9;;;;5805:5;5798:4;;:12;;;;;;;;;;;;;;;;;;5830:8;5820:7;:18;;;;5352:493;;:::o;1494:33::-;;;;:::o;4168:233::-;4320:1;4286:30;:35;;4278:44;;;;;;4364:30;4332:29;:62;;;;4168:233;:::o;4407:::-;4559:1;4525:30;:35;;4517:44;;;;;;4603:30;4571:29;:62;;;;4407:233;:::o;2230:172:2:-;2286:6;2304:8;2319:1;2315;:5;;;;:::i;:::-;2304:16;;2344:1;2339;:6;;:16;;;;;2354:1;2349;:6;;2339:16;2338:38;;;;2365:1;2361;:5;:14;;;;;2374:1;2370;:5;2361:14;2338:38;2330:47;;;;;;2394:1;2387:8;;;2230:172;;;;:::o;1503:296::-;1559:6;1577:8;1592:1;1588;:5;;;;:::i;:::-;1577:16;;1348:3;1342:1;1335:16;;1675:1;:15;;:55;;;;1348:3;1342:1;1335:16;;1715:1;:14;1348:3;1342:1;1335:16;;1695:1;:14;1694:36;;1675:55;1667:64;;;;;;1755:1;1750;:6;1749:24;;;;1771:1;1766;1762;:5;;;;:::i;:::-;:10;1749:24;1741:33;;;;;;1791:1;1784:8;;;1503:296;;;;:::o;1889:253::-;1945:6;2035:2;2030:1;:7;;:26;;;;1348:3;1342:1;1335:16;;2041:1;:15;;2030:26;2022:35;;;;;;2134:1;2130;:5;;;;:::i;:::-;2123:12;;1889:253;;;;:::o;3202:1137::-;3267:6;3285:15;3303:5;3285:23;;3328:1;3322:3;:7;3318:83;;;3358:4;3345:17;;3382:8;3386:3;3382;:8::i;:::-;3376:14;;3318:83;3490:19;:205;;;;;;;;3533:19;3490:205;;;;3567:19;3490:205;;;;3600:19;3490:205;;;;3633:19;3490:205;;;;3666:19;3490:205;;;;;3705:12;3720:13;3724:3;3729;3720;:13::i;:::-;3705:28;;3760:3;3751:5;:12;;3743:21;;;;;;3774:13;3790:46;3823:5;3809:1;3801:28;;3832:3;3790;:46::i;:::-;3774:62;;3846:16;3865:25;3869:3;3874:15;3878:5;3885:3;3874;:15::i;:::-;3865:3;:25::i;:::-;3846:44;;3901:14;3918:11;3922:3;3927:1;3918:3;:11::i;:::-;3901:28;;3944:9;3939:286;3963:1;3959;:5;3939:286;;;4002:7;3989:9;:20;3985:191;;4041:23;4045:9;4056:7;4041:3;:23::i;:::-;4029:35;;4091:31;4095:18;4099:6;4107:2;4110:1;4107:5;;;;;;;:::i;:::-;;;;;;4095:3;:18::i;:::-;4115:6;4091:3;:31::i;:::-;4082:40;;3985:191;4199:15;4203:7;4212:1;4199:3;:15::i;:::-;4189:25;;3966:3;;;;;:::i;:::-;;;;3939:286;;;;4238:10;4234:76;;;4273:26;4277:13;4281:3;4286;4277;:13::i;:::-;4292:6;4273:3;:26::i;:::-;4264:35;;4234:76;4326:6;4319:13;;;;;;;;3202:1137;;;;:::o;211:421:1:-;269:7;514:1;509;:6;505:45;;;538:1;531:8;;;;505:45;560:9;576:1;572;:5;;;;:::i;:::-;560:17;;604:1;599;595;:5;;;;:::i;:::-;:10;587:19;;;;;;624:1;617:8;;;211:421;;;;;:::o;752:288::-;810:7;841:1;837;:5;829:14;;;;;;911:9;927:1;923;:5;;;;:::i;:::-;911:17;;1032:1;1025:8;;;752:288;;;;:::o;7632:663:0:-;7717:6;7739:42;7764:4;7770:10;7739:24;:42::i;:::-;7735:81;;;7804:1;7797:8;;;;7735:81;7825:23;7858:10;7825:44;;7879:21;7903:67;7919:33;7942:4;1648:2;2302;:12;;;;:::i;:::-;7919:15;:33::i;:::-;7953:16;7903:15;:67::i;:::-;7879:91;;7980:23;8006:181;8043:14;8071:29;;8114;;8157:20;;8006:23;:181::i;:::-;7980:207;;8205:83;8221:60;8244:4;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8264:16;8221:15;:60::i;:::-;1648:2;2302;:12;;;;:::i;:::-;8205:15;:83::i;:::-;8198:90;;;;;7632:663;;;;;:::o;2742:126:2:-;2788:6;1348:3;1342:1;1335:16;;2814:1;:15;;2806:24;;;;;;2851:1;2847;:5;:14;;2860:1;2847:14;;;2856:1;2855:2;;;:::i;:::-;2847:14;2840:21;;2742:126;;;:::o;8620:460:0:-;8735:4;8755:34;8792:70;8805:43;8818:10;8829:18;;8805:12;:43::i;:::-;1648:2;8849;:12;;;;:::i;:::-;8792;:70::i;:::-;8755:107;;8903:10;8895:4;:18;;:80;;;;;8949:26;8917:29;8930:4;8935:10;8917:12;:29::i;:::-;:58;8895:80;8894:179;;;;9000:10;8993:4;:17;:79;;;;;9046:26;9014:29;9027:10;9038:4;9014:12;:29::i;:::-;:58;8993:79;8894:179;8875:198;;;8620:460;;;;:::o;1163:145:1:-;1221:7;1253:1;1248;:6;;1240:15;;;;;;1265:9;1281:1;1277;:5;;;;:::i;:::-;1265:17;;1300:1;1293:8;;;1163:145;;;;:::o;7:137:3:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:163::-;208:5;246:6;233:20;224:29;;262:45;301:5;262:45;:::i;:::-;150:163;;;;:::o;319:167::-;379:5;417:6;404:20;395:29;;433:47;474:5;433:47;:::i;:::-;319:167;;;;:::o;492:137::-;537:5;575:6;562:20;553:29;;591:32;617:5;591:32;:::i;:::-;492:137;;;;:::o;635:139::-;681:5;719:6;706:20;697:29;;735:33;762:5;735:33;:::i;:::-;635:139;;;;:::o;780:143::-;837:5;868:6;862:13;853:22;;884:33;911:5;884:33;:::i;:::-;780:143;;;;:::o;929:498::-;1009:6;1017;1066:2;1054:9;1045:7;1041:23;1037:32;1034:119;;;1072:79;;:::i;:::-;1034:119;1192:1;1217:65;1274:7;1265:6;1254:9;1250:22;1217:65;:::i;:::-;1207:75;;1163:129;1331:2;1357:53;1402:7;1393:6;1382:9;1378:22;1357:53;:::i;:::-;1347:63;;1302:118;929:498;;;;;:::o;1433:357::-;1506:6;1555:2;1543:9;1534:7;1530:23;1526:32;1523:119;;;1561:79;;:::i;:::-;1523:119;1681:1;1706:67;1765:7;1756:6;1745:9;1741:22;1706:67;:::i;:::-;1696:77;;1652:131;1433:357;;;;:::o;1796:327::-;1854:6;1903:2;1891:9;1882:7;1878:23;1874:32;1871:119;;;1909:79;;:::i;:::-;1871:119;2029:1;2054:52;2098:7;2089:6;2078:9;2074:22;2054:52;:::i;:::-;2044:62;;2000:116;1796:327;;;;:::o;2129:757::-;2211:6;2219;2227;2235;2284:3;2272:9;2263:7;2259:23;2255:33;2252:120;;;2291:79;;:::i;:::-;2252:120;2411:1;2436:52;2480:7;2471:6;2460:9;2456:22;2436:52;:::i;:::-;2426:62;;2382:116;2537:2;2563:52;2607:7;2598:6;2587:9;2583:22;2563:52;:::i;:::-;2553:62;;2508:117;2664:2;2690:52;2734:7;2725:6;2714:9;2710:22;2690:52;:::i;:::-;2680:62;;2635:117;2791:2;2817:52;2861:7;2852:6;2841:9;2837:22;2817:52;:::i;:::-;2807:62;;2762:117;2129:757;;;;;;;:::o;2892:329::-;2951:6;3000:2;2988:9;2979:7;2975:23;2971:32;2968:119;;;3006:79;;:::i;:::-;2968:119;3126:1;3151:53;3196:7;3187:6;3176:9;3172:22;3151:53;:::i;:::-;3141:63;;3097:117;2892:329;;;;:::o;3227:351::-;3297:6;3346:2;3334:9;3325:7;3321:23;3317:32;3314:119;;;3352:79;;:::i;:::-;3314:119;3472:1;3497:64;3553:7;3544:6;3533:9;3529:22;3497:64;:::i;:::-;3487:74;;3443:128;3227:351;;;;:::o;3584:501::-;3660:6;3668;3717:2;3705:9;3696:7;3692:23;3688:32;3685:119;;;3723:79;;:::i;:::-;3685:119;3843:1;3868:64;3924:7;3915:6;3904:9;3900:22;3868:64;:::i;:::-;3858:74;;3814:128;3981:2;4007:61;4060:7;4051:6;4040:9;4036:22;4007:61;:::i;:::-;3997:71;;3952:126;3584:501;;;;;:::o;4091:155::-;4190:49;4233:5;4190:49;:::i;:::-;4185:3;4178:62;4091:155;;:::o;4252:159::-;4353:51;4398:5;4353:51;:::i;:::-;4348:3;4341:64;4252:159;;:::o;4417:115::-;4502:23;4519:5;4502:23;:::i;:::-;4497:3;4490:36;4417:115;;:::o;4538:118::-;4625:24;4643:5;4625:24;:::i;:::-;4620:3;4613:37;4538:118;;:::o;4662:246::-;4767:4;4805:2;4794:9;4790:18;4782:26;;4818:83;4898:1;4887:9;4883:17;4874:6;4818:83;:::i;:::-;4662:246;;;;:::o;4914:250::-;5021:4;5059:2;5048:9;5044:18;5036:26;;5072:85;5154:1;5143:9;5139:17;5130:6;5072:85;:::i;:::-;4914:250;;;;:::o;5170:218::-;5261:4;5299:2;5288:9;5284:18;5276:26;;5312:69;5378:1;5367:9;5363:17;5354:6;5312:69;:::i;:::-;5170:218;;;;:::o;5394:222::-;5487:4;5525:2;5514:9;5510:18;5502:26;;5538:71;5606:1;5595:9;5591:17;5582:6;5538:71;:::i;:::-;5394:222;;;;:::o;5622:328::-;5741:4;5779:2;5768:9;5764:18;5756:26;;5792:71;5860:1;5849:9;5845:17;5836:6;5792:71;:::i;:::-;5873:70;5939:2;5928:9;5924:18;5915:6;5873:70;:::i;:::-;5622:328;;;;;:::o;5956:549::-;6131:4;6169:3;6158:9;6154:19;6146:27;;6183:71;6251:1;6240:9;6236:17;6227:6;6183:71;:::i;:::-;6264:72;6332:2;6321:9;6317:18;6308:6;6264:72;:::i;:::-;6346:70;6412:2;6401:9;6397:18;6388:6;6346:70;:::i;:::-;6426:72;6494:2;6483:9;6479:18;6470:6;6426:72;:::i;:::-;5956:549;;;;;;;:::o;6592:525::-;6631:3;6650:19;6667:1;6650:19;:::i;:::-;6645:24;;6683:19;6700:1;6683:19;:::i;:::-;6678:24;;6871:1;6803:66;6799:74;6796:1;6792:82;6787:1;6784;6780:9;6773:17;6769:106;6766:132;;;6878:18;;:::i;:::-;6766:132;7058:1;6990:66;6986:74;6983:1;6979:82;6975:1;6972;6968:9;6964:98;6961:124;;;7065:18;;:::i;:::-;6961:124;7109:1;7106;7102:9;7095:16;;6592:525;;;;:::o;7123:305::-;7163:3;7182:20;7200:1;7182:20;:::i;:::-;7177:25;;7216:20;7234:1;7216:20;:::i;:::-;7211:25;;7370:1;7302:66;7298:74;7295:1;7292:81;7289:107;;;7376:18;;:::i;:::-;7289:107;7420:1;7417;7413:9;7406:16;;7123:305;;;;:::o;7434:385::-;7473:1;7490:19;7507:1;7490:19;:::i;:::-;7485:24;;7523:19;7540:1;7523:19;:::i;:::-;7518:24;;7561:1;7551:35;;7566:18;;:::i;:::-;7551:35;7752:1;7749;7745:9;7742:1;7739:16;7658:66;7655:1;7652:73;7635:130;7632:156;;;7768:18;;:::i;:::-;7632:156;7811:1;7808;7803:10;7798:15;;7434:385;;;;:::o;7825:185::-;7865:1;7882:20;7900:1;7882:20;:::i;:::-;7877:25;;7916:20;7934:1;7916:20;:::i;:::-;7911:25;;7955:1;7945:35;;7960:18;;:::i;:::-;7945:35;8002:1;7999;7995:9;7990:14;;7825:185;;;;:::o;8016:848::-;8077:5;8084:4;8108:6;8099:15;;8132:5;8123:14;;8146:712;8167:1;8157:8;8154:15;8146:712;;;8262:4;8257:3;8253:14;8247:4;8244:24;8241:50;;;8271:18;;:::i;:::-;8241:50;8321:1;8311:8;8307:16;8304:451;;;8736:4;8729:5;8725:16;8716:25;;8304:451;8786:4;8780;8776:15;8768:23;;8816:32;8839:8;8816:32;:::i;:::-;8804:44;;8146:712;;;8016:848;;;;;;;:::o;8870:285::-;8930:5;8954:23;8972:4;8954:23;:::i;:::-;8946:31;;8998:27;9016:8;8998:27;:::i;:::-;8986:39;;9044:104;9081:66;9071:8;9065:4;9044:104;:::i;:::-;9035:113;;8870:285;;;;:::o;9161:1073::-;9215:5;9406:8;9396:40;;9427:1;9418:10;;9429:5;;9396:40;9455:4;9445:36;;9472:1;9463:10;;9474:5;;9445:36;9541:4;9589:1;9584:27;;;;9625:1;9620:191;;;;9534:277;;9584:27;9602:1;9593:10;;9604:5;;;9620:191;9665:3;9655:8;9652:17;9649:43;;;9672:18;;:::i;:::-;9649:43;9721:8;9718:1;9714:16;9705:25;;9756:3;9749:5;9746:14;9743:40;;;9763:18;;:::i;:::-;9743:40;9796:5;;;9534:277;;9920:2;9910:8;9907:16;9901:3;9895:4;9892:13;9888:36;9870:2;9860:8;9857:16;9852:2;9846:4;9843:12;9839:35;9823:111;9820:246;;;9976:8;9970:4;9966:19;9957:28;;10011:3;10004:5;10001:14;9998:40;;;10018:18;;:::i;:::-;9998:40;10051:5;;9820:246;10091:42;10129:3;10119:8;10113:4;10110:1;10091:42;:::i;:::-;10076:57;;;;10165:4;10160:3;10156:14;10149:5;10146:25;10143:51;;;10174:18;;:::i;:::-;10143:51;10223:4;10216:5;10212:16;10203:25;;9161:1073;;;;;;:::o;10240:991::-;10279:7;10302:19;10319:1;10302:19;:::i;:::-;10297:24;;10335:19;10352:1;10335:19;:::i;:::-;10330:24;;10536:1;10468:66;10464:74;10461:1;10458:81;10453:1;10450;10446:9;10442:1;10439;10435:9;10431:25;10427:113;10424:139;;;10543:18;;:::i;:::-;10424:139;10747:1;10679:66;10674:75;10671:1;10667:83;10662:1;10659;10655:9;10651:1;10648;10644:9;10640:25;10636:115;10633:141;;;10754:18;;:::i;:::-;10633:141;10958:1;10890:66;10885:75;10882:1;10878:83;10873:1;10870;10866:9;10862:1;10859;10855:9;10851:25;10847:115;10844:141;;;10965:18;;:::i;:::-;10844:141;11168:1;11100:66;11095:75;11092:1;11088:83;11083:1;11080;11076:9;11072:1;11069;11065:9;11061:25;11057:115;11054:141;;;11175:18;;:::i;:::-;11054:141;11223:1;11220;11216:9;11205:20;;10240:991;;;;:::o;11237:348::-;11277:7;11300:20;11318:1;11300:20;:::i;:::-;11295:25;;11334:20;11352:1;11334:20;:::i;:::-;11329:25;;11522:1;11454:66;11450:74;11447:1;11444:81;11439:1;11432:9;11425:17;11421:105;11418:131;;;11529:18;;:::i;:::-;11418:131;11577:1;11574;11570:9;11559:20;;11237:348;;;;:::o;11591:527::-;11630:4;11650:19;11667:1;11650:19;:::i;:::-;11645:24;;11683:19;11700:1;11683:19;:::i;:::-;11678:24;;11872:1;11804:66;11800:74;11797:1;11793:82;11788:1;11785;11781:9;11774:17;11770:106;11767:132;;;11879:18;;:::i;:::-;11767:132;12058:1;11990:66;11986:74;11983:1;11979:82;11975:1;11972;11968:9;11964:98;11961:124;;;12065:18;;:::i;:::-;11961:124;12110:1;12107;12103:9;12095:17;;11591:527;;;;:::o;12124:191::-;12164:4;12184:20;12202:1;12184:20;:::i;:::-;12179:25;;12218:20;12236:1;12218:20;:::i;:::-;12213:25;;12257:1;12254;12251:8;12248:34;;;12262:18;;:::i;:::-;12248:34;12307:1;12304;12300:9;12292:17;;12124:191;;;;:::o;12321:96::-;12358:7;12387:24;12405:5;12387:24;:::i;:::-;12376:35;;12321:96;;;:::o;12423:90::-;12457:7;12500:5;12493:13;12486:21;12475:32;;12423:90;;;:::o;12519:108::-;12568:7;12597:24;12615:5;12597:24;:::i;:::-;12586:35;;12519:108;;;:::o;12633:110::-;12684:7;12713:24;12731:5;12713:24;:::i;:::-;12702:35;;12633:110;;;:::o;12749:76::-;12785:7;12814:5;12803:16;;12749:76;;;:::o;12831:126::-;12868:7;12908:42;12901:5;12897:54;12886:65;;12831:126;;;:::o;12963:77::-;13000:7;13029:5;13018:16;;12963:77;;;:::o;13046:138::-;13108:9;13141:37;13172:5;13141:37;:::i;:::-;13128:50;;13046:138;;;:::o;13190:140::-;13254:9;13287:37;13318:5;13287:37;:::i;:::-;13274:50;;13190:140;;;:::o;13336:126::-;13386:9;13419:37;13450:5;13419:37;:::i;:::-;13406:50;;13336:126;;;:::o;13468:113::-;13518:9;13551:24;13569:5;13551:24;:::i;:::-;13538:37;;13468:113;;;:::o;13587:233::-;13626:3;13649:24;13667:5;13649:24;:::i;:::-;13640:33;;13695:66;13688:5;13685:77;13682:103;;;13765:18;;:::i;:::-;13682:103;13812:1;13805:5;13801:13;13794:20;;13587:233;;;:::o;13826:228::-;13861:3;13884:23;13901:5;13884:23;:::i;:::-;13875:32;;13929:66;13922:5;13919:77;13916:103;;;13999:18;;:::i;:::-;13916:103;14042:5;14039:1;14035:13;14028:20;;13826:228;;;:::o;14060:180::-;14108:77;14105:1;14098:88;14205:4;14202:1;14195:15;14229:4;14226:1;14219:15;14246:180;14294:77;14291:1;14284:88;14391:4;14388:1;14381:15;14415:4;14412:1;14405:15;14432:180;14480:77;14477:1;14470:88;14577:4;14574:1;14567:15;14601:4;14598:1;14591:15;14618:180;14666:77;14663:1;14656:88;14763:4;14760:1;14753:15;14787:4;14784:1;14777:15;14927:117;15036:1;15033;15026:12;15050:102;15092:8;15139:5;15136:1;15132:13;15111:34;;15050:102;;;:::o;15158:116::-;15228:21;15243:5;15228:21;:::i;:::-;15221:5;15218:32;15208:60;;15264:1;15261;15254:12;15208:60;15158:116;:::o;15280:146::-;15365:36;15395:5;15365:36;:::i;:::-;15358:5;15355:47;15345:75;;15416:1;15413;15406:12;15345:75;15280:146;:::o;15432:150::-;15519:38;15551:5;15519:38;:::i;:::-;15512:5;15509:49;15499:77;;15572:1;15569;15562:12;15499:77;15432:150;:::o;15588:120::-;15660:23;15677:5;15660:23;:::i;:::-;15653:5;15650:34;15640:62;;15698:1;15695;15688:12;15640:62;15588:120;:::o;15714:122::-;15787:24;15805:5;15787:24;:::i;:::-;15780:5;15777:35;15767:63;;15826:1;15823;15816:12;15767:63;15714:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1456200",
								"executionCost": "1520",
								"totalCost": "1457720"
							},
							"external": {
								"cmmd()": "2665",
								"computeRebasePercentage(int256,int256,int256,int256)": "infinite",
								"cpiOracle()": "2689",
								"deviationThreshold()": "2495",
								"epoch()": "2452",
								"initialize(address,uint256)": "infinite",
								"marketOracle()": "2645",
								"rebase()": "infinite",
								"rebaseFunctionGrowth()": "2496",
								"rebaseFunctionLowerPercentage()": "2452",
								"rebaseFunctionUpperPercentage()": "2474",
								"setCpiOracle(address)": "24811",
								"setDeviationThreshold(uint256)": "22610",
								"setMarketOracle(address)": "24832",
								"setRebaseFunctionGrowth(int256)": "22635",
								"setRebaseFunctionLowerPercentage(int256)": "22634",
								"setRebaseFunctionUpperPercentage(int256)": "22656"
							},
							"internal": {
								"computeSupplyDelta(uint256,uint256)": "infinite",
								"withinDeviationThreshold(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 9083,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a268477565d2245838e11e38b3e54a7fda01963ec568880ddab160fea849878f64736f6c63430008070033",
									".code": [
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "AF14052C"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "AF14052C"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "CD6DC687"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "D94AD837"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "E9FA88A4"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "F4FEFA49"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "9DB59B2F"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "9E30BAC5"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "AB33C5CA"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "5EE01540"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "5EE01540"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "60961528"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "7486CDEA"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "8001066D"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "3A785AF1"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "3D6A46E5"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "4DAFA35E"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "53A15EDC"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6402,
											"end": 6416,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6386,
											"end": 6421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6386,
											"end": 6421,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6386,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6378,
											"end": 6421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6378,
											"end": 6421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6545,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6545,
											"end": 6574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6545,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6545,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6529,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6529,
											"end": 6579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6529,
											"end": 6579,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6529,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6672,
											"end": 6696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6672,
											"end": 6696,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6672,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6696,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6657,
											"end": 6758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6723,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6657,
											"end": 6758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6657,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C"
										},
										{
											"begin": 6782,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6782,
											"end": 6807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6782,
											"end": 6807,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6782,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6807,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6767,
											"end": 6870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6834,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6834,
											"end": 6859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6834,
											"end": 6859,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6834,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6823,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6823,
											"end": 6859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6870,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6767,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6880,
											"end": 6890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6914,
											"end": 6922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6893,
											"end": 6928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6893,
											"end": 6928,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6893,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6880,
											"end": 6928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6880,
											"end": 6928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 7009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6958,
											"end": 7009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 6998,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 7009,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6958,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7053,
											"end": 7058,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7059,
											"end": 7064,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7037,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7129,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7145,
											"end": 7150,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7129,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7129,
											"end": 7155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7155,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7129,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7161,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7113,
											"end": 7162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7113,
											"end": 7162,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7113,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7187,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7219,
											"end": 7231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7237,
											"end": 7240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7187,
											"end": 7241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7187,
											"end": 7241,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7187,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7172,
											"end": 7241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7172,
											"end": 7241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7292,
											"end": 7304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7272,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7272,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7450,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7398,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7398,
											"end": 7428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7428,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7398,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7440,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7382,
											"end": 7441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7382,
											"end": 7441,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7382,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7381,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 7490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 851,
											"end": 868,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5071,
											"end": 5111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5071,
											"end": 5111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5071,
											"end": 5111,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5071,
											"end": 5111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5118,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4074,
											"end": 4100,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 4074,
											"end": 4100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4066,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4134,
											"end": 4155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4111,
											"end": 4155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4155,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 4162,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3956,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3944,
											"end": 3956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3979,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2596,
											"end": 2613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2624,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2794,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2764,
											"end": 2818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 2818,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2764,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 2849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2911,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 2999,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2972,
											"end": 3049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2972,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2972,
											"end": 3049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2972,
											"end": 3049,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2972,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3080,
											"end": 3124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3080,
											"end": 3124,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3080,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3154,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3158,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3139,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3135,
											"end": 3296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3265,
											"end": 3281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3135,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "7A43E23F"
										},
										{
											"begin": 3346,
											"end": 3351,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3346,
											"end": 3351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3334,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1973,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1949,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3413,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3375,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3444,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3439,
											"end": 3444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "41D948A7F29CC695F5D4B3EC147F766BFFA165DDD317470FBE05C86D0A9C3E04"
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3463,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3493,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3494,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 3501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5531,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5517,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5490,
											"end": 5533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5490,
											"end": 5533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5490,
											"end": 5533,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5490,
											"end": 5533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5544,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5644,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5642,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5632,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5603,
											"end": 5668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5725,
											"end": 5728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6"
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5685,
											"end": 5759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5759,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5830,
											"end": 5838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5827,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1527,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4321,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4278,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4332,
											"end": 4394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4525,
											"end": 4560,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 4525,
											"end": 4560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4517,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4600,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4640,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2320,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2316,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2355,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1730,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1730,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1772,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2037,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2037,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3325,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3329,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3390,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 2,
											"value": "13A04BBDFDC9BE89"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3586,
											"name": "PUSH",
											"source": 2,
											"value": "1080E992061AB32B"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "F2243014E544EBB"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3633,
											"end": 3652,
											"name": "PUSH",
											"source": 2,
											"value": "E7E0178E9D6ED50"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3685,
											"name": "PUSH",
											"source": 2,
											"value": "E2E820ADE835F46"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3835,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3928,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3918,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 3964,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 3998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4056,
											"end": 4063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4064,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4091,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4122,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4248,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4281,
											"end": 4284,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4289,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 211,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 211,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 269,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 509,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 505,
											"end": 550,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 505,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 505,
											"end": 550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 531,
											"end": 539,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 505,
											"end": 550,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 505,
											"end": 550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 595,
											"end": 596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 605,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 587,
											"end": 606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 587,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 211,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 837,
											"end": 842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 829,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 829,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 7764,
											"end": 7768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7739,
											"end": 7781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7739,
											"end": 7781,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 7739,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7735,
											"end": 7816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7797,
											"end": 7805,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7816,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7735,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7858,
											"end": 7868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7919,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7942,
											"end": 7946,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7919,
											"end": 7952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7919,
											"end": 7952,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7919,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7903,
											"end": 7970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7903,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7903,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 8003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 8043,
											"end": 8057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8071,
											"end": 8100,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8071,
											"end": 8100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8143,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8114,
											"end": 8143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8006,
											"end": 8187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8187,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 8006,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 8187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 8187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8221,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8221,
											"end": 8281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8221,
											"end": 8281,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8221,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8205,
											"end": 8288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8205,
											"end": 8288,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8205,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8288,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 8295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2829,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8755,
											"end": 8789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8792,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8805,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 8818,
											"end": 8828,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8805,
											"end": 8848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8805,
											"end": 8848,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 8805,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8849,
											"end": 8851,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8792,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8792,
											"end": 8862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8792,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8792,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8903,
											"end": 8913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8913,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8930,
											"end": 8934,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8945,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8975,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 8895,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 9073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 8894,
											"end": 9073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 9073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9000,
											"end": 9010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 8997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 9010,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9046,
											"end": 9072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9027,
											"end": 9037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9042,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 9014,
											"end": 9043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9014,
											"end": 9043,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9014,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 8993,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 9073,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 8894,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8875,
											"end": 9073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8875,
											"end": 9073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8875,
											"end": 9073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 9080,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 313,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 150,
											"end": 313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 208,
											"end": 213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 233,
											"end": 253,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 262,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 301,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 262,
											"end": 307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 307,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 262,
											"end": 307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 150,
											"end": 313,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 150,
											"end": 313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 150,
											"end": 313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 150,
											"end": 313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 150,
											"end": 313,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 486,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 319,
											"end": 486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 379,
											"end": 384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 404,
											"end": 424,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 433,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 474,
											"end": 479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 433,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 433,
											"end": 480,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 480,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 433,
											"end": 480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 486,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 319,
											"end": 486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 319,
											"end": 486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 486,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 492,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 492,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 537,
											"end": 542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 562,
											"end": 582,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 553,
											"end": 582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 591,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 591,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 591,
											"end": 623,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 591,
											"end": 623,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 591,
											"end": 623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 492,
											"end": 629,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 492,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 492,
											"end": 629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 492,
											"end": 629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 492,
											"end": 629,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 635,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 635,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 681,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 726,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 697,
											"end": 726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 697,
											"end": 726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 762,
											"end": 767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 635,
											"end": 774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 774,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 780,
											"end": 923,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 780,
											"end": 923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 837,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 862,
											"end": 875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 911,
											"end": 916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 884,
											"end": 917,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 884,
											"end": 917,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 884,
											"end": 917,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 780,
											"end": 923,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 780,
											"end": 923,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 923,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1052,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1037,
											"end": 1069,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1274,
											"end": 1281,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1263,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1217,
											"end": 1282,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1217,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1207,
											"end": 1282,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1207,
											"end": 1282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1402,
											"end": 1409,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1357,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 1357,
											"end": 1410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1357,
											"end": 1410,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1357,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 929,
											"end": 1427,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1541,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1553,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1526,
											"end": 1558,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 1561,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1523,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1706,
											"end": 1773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1773,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 1706,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1905,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1878,
											"end": 1901,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1906,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1990,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1871,
											"end": 1990,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 1909,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 1909,
											"end": 1988,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1909,
											"end": 1988,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 1909,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1990,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1871,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2096,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 2123,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2287,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2272,
											"end": 2281,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2288,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2291,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2372,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2436,
											"end": 2488,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2436,
											"end": 2488,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2436,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2488,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 2607,
											"end": 2614,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2615,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2723,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2861,
											"end": 2868,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2850,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2886,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 2997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3003,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3087,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2968,
											"end": 3087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3087,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2968,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3185,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3172,
											"end": 3194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3097,
											"end": 3214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 3221,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3332,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3344,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3349,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3314,
											"end": 3433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 3352,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3314,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 3553,
											"end": 3560,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3497,
											"end": 3561,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 3497,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3443,
											"end": 3571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3578,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3714,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3703,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3715,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3720,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3685,
											"end": 3804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3723,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3723,
											"end": 3802,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3723,
											"end": 3802,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3723,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3804,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3685,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3868,
											"end": 3932,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3868,
											"end": 3932,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 3868,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 3942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4060,
											"end": 4067,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4049,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4007,
											"end": 4068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4007,
											"end": 4068,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4007,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3997,
											"end": 4068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3997,
											"end": 4068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 4078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 4085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4091,
											"end": 4246,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4091,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 4233,
											"end": 4238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4190,
											"end": 4239,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4239,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 4190,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4240,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4246,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4252,
											"end": 4411,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 4252,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4353,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4353,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 4353,
											"end": 4404,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4404,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4353,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4411,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4417,
											"end": 4532,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4417,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 4519,
											"end": 4524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 4526,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 4643,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4807,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4782,
											"end": 4808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4782,
											"end": 4808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4818,
											"end": 4901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4818,
											"end": 4901,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4818,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4908,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5021,
											"end": 5025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5061,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 5072,
											"end": 5157,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5157,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5072,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5164,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5284,
											"end": 5302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5360,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 5312,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5388,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5860,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5858,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5792,
											"end": 5863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5792,
											"end": 5863,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5792,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5873,
											"end": 5943,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 5943,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5873,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5950,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6158,
											"end": 6167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6146,
											"end": 6173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6146,
											"end": 6173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6183,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6251,
											"end": 6252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6249,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6227,
											"end": 6233,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6183,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6183,
											"end": 6254,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6183,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6183,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6321,
											"end": 6330,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6308,
											"end": 6314,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6264,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6412,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6401,
											"end": 6410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6388,
											"end": 6394,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 6346,
											"end": 6416,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6346,
											"end": 6416,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6346,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6505,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6631,
											"end": 6634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6702,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6871,
											"end": 6872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6799,
											"end": 6873,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6792,
											"end": 6874,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 6788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6773,
											"end": 6790,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6769,
											"end": 6875,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6898,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6766,
											"end": 6898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6898,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6766,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7058,
											"end": 7059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6990,
											"end": 7056,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6986,
											"end": 7060,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6983,
											"end": 6984,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6979,
											"end": 7061,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6976,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6973,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6968,
											"end": 6977,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6964,
											"end": 7062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7085,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6961,
											"end": 7085,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7085,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6961,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7102,
											"end": 7111,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7095,
											"end": 7111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7095,
											"end": 7111,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7117,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7200,
											"end": 7201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7202,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7234,
											"end": 7235,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 7216,
											"end": 7236,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7216,
											"end": 7236,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7216,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7236,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7370,
											"end": 7371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7368,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7298,
											"end": 7372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7292,
											"end": 7373,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7396,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7289,
											"end": 7396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7396,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7289,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7420,
											"end": 7421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7418,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7428,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7473,
											"end": 7474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 7551,
											"end": 7586,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7566,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 7566,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 7566,
											"end": 7584,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7566,
											"end": 7584,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 7566,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7586,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 7551,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7752,
											"end": 7753,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7749,
											"end": 7750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7755,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7658,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7652,
											"end": 7725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7765,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7788,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 7632,
											"end": 7788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7788,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 7632,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7813,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 7798,
											"end": 7813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7798,
											"end": 7813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7819,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7882,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 7882,
											"end": 7902,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7882,
											"end": 7902,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 7882,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7877,
											"end": 7902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7877,
											"end": 7902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7936,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 7956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 7945,
											"end": 7980,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 7960,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7980,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 7945,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7995,
											"end": 8004,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 8010,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8108,
											"end": 8114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8132,
											"end": 8137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8167,
											"end": 8168,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8157,
											"end": 8165,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8262,
											"end": 8266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8260,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8253,
											"end": 8267,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8244,
											"end": 8268,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8291,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 8241,
											"end": 8291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8241,
											"end": 8291,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 8241,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8311,
											"end": 8319,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8307,
											"end": 8323,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8304,
											"end": 8755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8304,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 8304,
											"end": 8755,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8736,
											"end": 8740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8734,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8304,
											"end": 8755,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 8304,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 8784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8776,
											"end": 8791,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8768,
											"end": 8791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8768,
											"end": 8791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 8839,
											"end": 8847,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8804,
											"end": 8848,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8804,
											"end": 8848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 8146,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8864,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 8935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 8972,
											"end": 8976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8954,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 8954,
											"end": 8977,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 8977,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 8954,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8977,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8998,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 9016,
											"end": 9024,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8998,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 8998,
											"end": 9025,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8998,
											"end": 9025,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 8998,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9025,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9044,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 9081,
											"end": 9147,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9071,
											"end": 9079,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9069,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9044,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 9044,
											"end": 9148,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9044,
											"end": 9148,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 9044,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8870,
											"end": 9155,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9215,
											"end": 9220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9406,
											"end": 9414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9396,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 9396,
											"end": 9436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9428,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9418,
											"end": 9428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9418,
											"end": 9428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9429,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 9429,
											"end": 9434,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9396,
											"end": 9436,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 9396,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9455,
											"end": 9459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 9445,
											"end": 9481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9474,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 9474,
											"end": 9479,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9481,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 9445,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9541,
											"end": 9545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9589,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9584,
											"end": 9611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9584,
											"end": 9611,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9584,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 9584,
											"end": 9611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 9534,
											"end": 9811,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9584,
											"end": 9611,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 9584,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9602,
											"end": 9603,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9593,
											"end": 9603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9593,
											"end": 9603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "tag",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9665,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 9655,
											"end": 9663,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9652,
											"end": 9669,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9692,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 9649,
											"end": 9692,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9692,
											"name": "tag",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 9649,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9721,
											"end": 9729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9718,
											"end": 9719,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9714,
											"end": 9730,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9705,
											"end": 9730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9705,
											"end": 9730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9756,
											"end": 9759,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9749,
											"end": 9754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 9760,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9783,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 9743,
											"end": 9783,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 9763,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 9763,
											"end": 9781,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9763,
											"end": 9781,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 9763,
											"end": 9781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9783,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 9743,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9796,
											"end": 9801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9796,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 9796,
											"end": 9801,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9811,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 9534,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9920,
											"end": 9922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9923,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "PUSH",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 9895,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9905,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9924,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9870,
											"end": 9872,
											"name": "PUSH",
											"source": 3,
											"value": "4E"
										},
										{
											"begin": 9860,
											"end": 9868,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9857,
											"end": 9873,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 9846,
											"end": 9850,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9843,
											"end": 9855,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9839,
											"end": 9874,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9823,
											"end": 9934,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9820,
											"end": 10066,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9820,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 9820,
											"end": 10066,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9976,
											"end": 9984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9970,
											"end": 9974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9966,
											"end": 9985,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10011,
											"end": 10014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10015,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 10051,
											"end": 10056,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9820,
											"end": 10066,
											"name": "tag",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 9820,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 10129,
											"end": 10132,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10119,
											"end": 10127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10113,
											"end": 10117,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10091,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 10091,
											"end": 10133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10091,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 10091,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10133,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10165,
											"end": 10169,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10156,
											"end": 10170,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10149,
											"end": 10154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10146,
											"end": 10171,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10143,
											"end": 10194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10143,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 10143,
											"end": 10194,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10143,
											"end": 10194,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 10143,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10223,
											"end": 10227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10216,
											"end": 10221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10212,
											"end": 10228,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 10234,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10279,
											"end": 10286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 10319,
											"end": 10320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 10302,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10297,
											"end": 10321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10297,
											"end": 10321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10354,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10468,
											"end": 10534,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10464,
											"end": 10538,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10461,
											"end": 10462,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10539,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10451,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 10442,
											"end": 10443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10439,
											"end": 10440,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10444,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 10431,
											"end": 10456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10427,
											"end": 10540,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10747,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10679,
											"end": 10745,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10674,
											"end": 10749,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 10671,
											"end": 10672,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10667,
											"end": 10750,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10662,
											"end": 10663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10660,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10664,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10644,
											"end": 10653,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 10640,
											"end": 10665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10751,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10774,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 10633,
											"end": 10774,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10774,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 10633,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10958,
											"end": 10959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10956,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10885,
											"end": 10960,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 10883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10878,
											"end": 10961,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10859,
											"end": 10860,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10864,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10851,
											"end": 10876,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10962,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10844,
											"end": 10985,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10844,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 10844,
											"end": 10985,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "tag",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 10965,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10844,
											"end": 10985,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 10844,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11168,
											"end": 11169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11100,
											"end": 11166,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11095,
											"end": 11170,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11088,
											"end": 11171,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11085,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11070,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11074,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11061,
											"end": 11086,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11057,
											"end": 11172,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 11054,
											"end": 11195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11195,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 11054,
											"end": 11195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11223,
											"end": 11224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11205,
											"end": 11225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11205,
											"end": 11225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 11231,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11277,
											"end": 11284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 11318,
											"end": 11319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11300,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 11300,
											"end": 11320,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11300,
											"end": 11320,
											"name": "tag",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 11300,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 11352,
											"end": 11353,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "tag",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11354,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11522,
											"end": 11523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11454,
											"end": 11520,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11450,
											"end": 11524,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11444,
											"end": 11525,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11439,
											"end": 11440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11432,
											"end": 11441,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11425,
											"end": 11442,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11421,
											"end": 11526,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11418,
											"end": 11549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11418,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 11418,
											"end": 11549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "tag",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11418,
											"end": 11549,
											"name": "tag",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 11418,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11577,
											"end": 11578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11574,
											"end": 11575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11570,
											"end": 11579,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11559,
											"end": 11579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11559,
											"end": 11579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11585,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11630,
											"end": 11634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 11667,
											"end": 11668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 11700,
											"end": 11701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 11683,
											"end": 11702,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11683,
											"end": 11702,
											"name": "tag",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 11683,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11678,
											"end": 11702,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11678,
											"end": 11702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11872,
											"end": 11873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11804,
											"end": 11870,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11800,
											"end": 11874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11797,
											"end": 11798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11793,
											"end": 11875,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11781,
											"end": 11790,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11774,
											"end": 11791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11770,
											"end": 11876,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11767,
											"end": 11899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11767,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 11767,
											"end": 11899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "tag",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11767,
											"end": 11899,
											"name": "tag",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 11767,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12058,
											"end": 12059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11990,
											"end": 12056,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11986,
											"end": 12060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11979,
											"end": 12061,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11972,
											"end": 11973,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11977,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11964,
											"end": 12062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12085,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 11961,
											"end": 12085,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "tag",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12085,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 11961,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12110,
											"end": 12111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12103,
											"end": 12112,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12095,
											"end": 12112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12095,
											"end": 12112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11591,
											"end": 12118,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12164,
											"end": 12168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 12202,
											"end": 12203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "tag",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 12184,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12179,
											"end": 12204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12179,
											"end": 12204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 12236,
											"end": 12237,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 12218,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12213,
											"end": 12238,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12213,
											"end": 12238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12254,
											"end": 12255,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12251,
											"end": 12259,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "tag",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12307,
											"end": 12308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12300,
											"end": 12309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12321,
											"end": 12417,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 12321,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12358,
											"end": 12365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12387,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 12405,
											"end": 12410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12387,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 12387,
											"end": 12411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12387,
											"end": 12411,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 12387,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12376,
											"end": 12411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12376,
											"end": 12411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12417,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12423,
											"end": 12513,
											"name": "tag",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 12423,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12457,
											"end": 12464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12493,
											"end": 12506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12486,
											"end": 12507,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12475,
											"end": 12507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12475,
											"end": 12507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12513,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12519,
											"end": 12627,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 12519,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12597,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 12615,
											"end": 12620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 12597,
											"end": 12621,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12597,
											"end": 12621,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 12597,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12586,
											"end": 12621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12586,
											"end": 12621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12519,
											"end": 12627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12519,
											"end": 12627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12519,
											"end": 12627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12519,
											"end": 12627,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12633,
											"end": 12743,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 12633,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12684,
											"end": 12691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 12731,
											"end": 12736,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "tag",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 12713,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12702,
											"end": 12737,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12702,
											"end": 12737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12633,
											"end": 12743,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12633,
											"end": 12743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12633,
											"end": 12743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12633,
											"end": 12743,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12749,
											"end": 12825,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 12749,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12785,
											"end": 12792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12814,
											"end": 12819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12749,
											"end": 12825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12749,
											"end": 12825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12749,
											"end": 12825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12749,
											"end": 12825,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12831,
											"end": 12957,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 12831,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 12875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12950,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12901,
											"end": 12906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12897,
											"end": 12951,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 12951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 12951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12831,
											"end": 12957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12831,
											"end": 12957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12831,
											"end": 12957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12831,
											"end": 12957,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12963,
											"end": 13040,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 12963,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13000,
											"end": 13007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13040,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13046,
											"end": 13184,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 13046,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13108,
											"end": 13117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13141,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 13172,
											"end": 13177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13141,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 13141,
											"end": 13178,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13141,
											"end": 13178,
											"name": "tag",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 13141,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13128,
											"end": 13178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13128,
											"end": 13178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13046,
											"end": 13184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13046,
											"end": 13184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13046,
											"end": 13184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13046,
											"end": 13184,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13190,
											"end": 13330,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 13190,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13254,
											"end": 13263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13287,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 13318,
											"end": 13323,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13287,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 13287,
											"end": 13324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13287,
											"end": 13324,
											"name": "tag",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 13287,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13274,
											"end": 13324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13274,
											"end": 13324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13330,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13330,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13336,
											"end": 13462,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 13336,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13386,
											"end": 13395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13419,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 13419,
											"end": 13456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13419,
											"end": 13456,
											"name": "tag",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 13419,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13406,
											"end": 13456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13406,
											"end": 13456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13336,
											"end": 13462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13336,
											"end": 13462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13336,
											"end": 13462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13336,
											"end": 13462,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13468,
											"end": 13581,
											"name": "tag",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 13468,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "493"
										},
										{
											"begin": 13569,
											"end": 13574,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13551,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 13551,
											"end": 13575,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13551,
											"end": 13575,
											"name": "tag",
											"source": 3,
											"value": "493"
										},
										{
											"begin": 13551,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13538,
											"end": 13575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13538,
											"end": 13575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13468,
											"end": 13581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13468,
											"end": 13581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13468,
											"end": 13581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13468,
											"end": 13581,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13587,
											"end": 13820,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 13587,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13626,
											"end": 13629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 13667,
											"end": 13672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13649,
											"end": 13673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 13649,
											"end": 13673,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13649,
											"end": 13673,
											"name": "tag",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 13649,
											"end": 13673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13640,
											"end": 13673,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13640,
											"end": 13673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13695,
											"end": 13761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13685,
											"end": 13762,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13682,
											"end": 13785,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13682,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 13682,
											"end": 13785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13765,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 13765,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 13765,
											"end": 13783,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13765,
											"end": 13783,
											"name": "tag",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 13765,
											"end": 13783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13682,
											"end": 13785,
											"name": "tag",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 13682,
											"end": 13785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13812,
											"end": 13813,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 13805,
											"end": 13810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13794,
											"end": 13814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13794,
											"end": 13814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13587,
											"end": 13820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13587,
											"end": 13820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13587,
											"end": 13820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13587,
											"end": 13820,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13826,
											"end": 14054,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 13826,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13861,
											"end": 13864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13884,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 13901,
											"end": 13906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 13884,
											"end": 13907,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13884,
											"end": 13907,
											"name": "tag",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 13884,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13875,
											"end": 13907,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13875,
											"end": 13907,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13929,
											"end": 13995,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13922,
											"end": 13927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13919,
											"end": 13996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13916,
											"end": 14019,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13916,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "500"
										},
										{
											"begin": 13916,
											"end": 14019,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "tag",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13916,
											"end": 14019,
											"name": "tag",
											"source": 3,
											"value": "500"
										},
										{
											"begin": 13916,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14042,
											"end": 14047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14035,
											"end": 14048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14028,
											"end": 14048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14028,
											"end": 14048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13826,
											"end": 14054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13826,
											"end": 14054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13826,
											"end": 14054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13826,
											"end": 14054,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14060,
											"end": 14240,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 14060,
											"end": 14240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14108,
											"end": 14185,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14105,
											"end": 14106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14205,
											"end": 14209,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14202,
											"end": 14203,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14195,
											"end": 14210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14229,
											"end": 14233,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14226,
											"end": 14227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14246,
											"end": 14426,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 14246,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14294,
											"end": 14371,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14291,
											"end": 14292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14284,
											"end": 14372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14391,
											"end": 14395,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 14388,
											"end": 14389,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14381,
											"end": 14396,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14415,
											"end": 14419,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14412,
											"end": 14413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14405,
											"end": 14420,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14432,
											"end": 14612,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 14432,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14480,
											"end": 14557,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14477,
											"end": 14478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14470,
											"end": 14558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14577,
											"end": 14581,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 14574,
											"end": 14575,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14567,
											"end": 14582,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14601,
											"end": 14605,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14598,
											"end": 14599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14591,
											"end": 14606,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14618,
											"end": 14798,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 14618,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14666,
											"end": 14743,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14663,
											"end": 14664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14656,
											"end": 14744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14763,
											"end": 14767,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 14760,
											"end": 14761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14753,
											"end": 14768,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14787,
											"end": 14791,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14784,
											"end": 14785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14777,
											"end": 14792,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 15044,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 14927,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15036,
											"end": 15037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15033,
											"end": 15034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15050,
											"end": 15152,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 15050,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15092,
											"end": 15100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15139,
											"end": 15144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15136,
											"end": 15137,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15132,
											"end": 15145,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 15111,
											"end": 15145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15111,
											"end": 15145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15050,
											"end": 15152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15050,
											"end": 15152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15050,
											"end": 15152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15050,
											"end": 15152,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15158,
											"end": 15274,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 15158,
											"end": 15274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15228,
											"end": 15249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 15243,
											"end": 15248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15228,
											"end": 15249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 15228,
											"end": 15249,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15228,
											"end": 15249,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 15228,
											"end": 15249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15221,
											"end": 15226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15218,
											"end": 15250,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15208,
											"end": 15268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 15208,
											"end": 15268,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15264,
											"end": 15265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15254,
											"end": 15266,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15208,
											"end": 15268,
											"name": "tag",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 15208,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15158,
											"end": 15274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15158,
											"end": 15274,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15280,
											"end": 15426,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 15280,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15365,
											"end": 15401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 15395,
											"end": 15400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15365,
											"end": 15401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 15365,
											"end": 15401,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15365,
											"end": 15401,
											"name": "tag",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 15365,
											"end": 15401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15358,
											"end": 15363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15355,
											"end": 15402,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15345,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 15345,
											"end": 15420,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15416,
											"end": 15417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15413,
											"end": 15414,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15406,
											"end": 15418,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15345,
											"end": 15420,
											"name": "tag",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 15345,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15280,
											"end": 15426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15280,
											"end": 15426,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15432,
											"end": 15582,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 15432,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15519,
											"end": 15557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 15551,
											"end": 15556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15519,
											"end": 15557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 15519,
											"end": 15557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15519,
											"end": 15557,
											"name": "tag",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 15519,
											"end": 15557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15512,
											"end": 15517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15509,
											"end": 15558,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15499,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 15499,
											"end": 15576,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15572,
											"end": 15573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15569,
											"end": 15570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15562,
											"end": 15574,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15499,
											"end": 15576,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 15499,
											"end": 15576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15432,
											"end": 15582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15432,
											"end": 15582,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15588,
											"end": 15708,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 15588,
											"end": 15708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 15677,
											"end": 15682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 15660,
											"end": 15683,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15660,
											"end": 15683,
											"name": "tag",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 15660,
											"end": 15683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15650,
											"end": 15684,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15640,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 15640,
											"end": 15702,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15688,
											"end": 15700,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15640,
											"end": 15702,
											"name": "tag",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 15640,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15588,
											"end": 15708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15588,
											"end": 15708,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15714,
											"end": 15836,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 15714,
											"end": 15836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15787,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 15805,
											"end": 15810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15787,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 15787,
											"end": 15811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15787,
											"end": 15811,
											"name": "tag",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 15787,
											"end": 15811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15780,
											"end": 15785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15777,
											"end": 15812,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15767,
											"end": 15830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 15767,
											"end": 15830,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15826,
											"end": 15827,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15823,
											"end": 15824,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15816,
											"end": 15828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15767,
											"end": 15830,
											"name": "tag",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 15767,
											"end": 15830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15714,
											"end": 15836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15714,
											"end": 15836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"cmmd()": "4dafa35e",
							"computeRebasePercentage(int256,int256,int256,int256)": "3a785af1",
							"cpiOracle()": "ab33c5ca",
							"deviationThreshold()": "d94ad837",
							"epoch()": "900cf0cf",
							"initialize(address,uint256)": "cd6dc687",
							"marketOracle()": "60961528",
							"rebase()": "af14052c",
							"rebaseFunctionGrowth()": "7486cdea",
							"rebaseFunctionLowerPercentage()": "5ee01540",
							"rebaseFunctionUpperPercentage()": "9db59b2f",
							"setCpiOracle(address)": "3d6a46e5",
							"setDeviationThreshold(uint256)": "53a15edc",
							"setMarketOracle(address)": "9e30bac5",
							"setRebaseFunctionGrowth(int256)": "8001066d",
							"setRebaseFunctionLowerPercentage(int256)": "e9fa88a4",
							"setRebaseFunctionUpperPercentage(int256)": "f4fefa49"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cpi\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"requestedSupplyAdjustment\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampSec\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cmmd\",\"outputs\":[{\"internalType\":\"contract ICMMD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"normalizedRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lower\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"upper\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"growth\",\"type\":\"int256\"}],\"name\":\"computeRebasePercentage\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cpiOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deviationThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICMMD\",\"name\":\"cmmd_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCpi_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFunctionGrowth\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFunctionLowerPercentage\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFunctionUpperPercentage\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"cpiOracle_\",\"type\":\"address\"}],\"name\":\"setCpiOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deviationThreshold_\",\"type\":\"uint256\"}],\"name\":\"setDeviationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"marketOracle_\",\"type\":\"address\"}],\"name\":\"setMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"rebaseFunctionGrowth_\",\"type\":\"int256\"}],\"name\":\"setRebaseFunctionGrowth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"rebaseFunctionLowerPercentage_\",\"type\":\"int256\"}],\"name\":\"setRebaseFunctionLowerPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"rebaseFunctionUpperPercentage_\",\"type\":\"int256\"}],\"name\":\"setRebaseFunctionUpperPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an implementation of the CMMD Ideal Money protocol.      This component regulates the token supply of the CMMD ERC20 token in response to      market oracles.\",\"kind\":\"dev\",\"methods\":{\"computeRebasePercentage(int256,int256,int256,int256)\":{\"params\":{\"normalizedRate\":\"value of rate/targetRate in DECIMALS decimal fixed point number\"},\"returns\":{\"_0\":\"The percentage of supply to be added or removed.\"}},\"initialize(address,uint256)\":{\"details\":\"ZOS upgradable contract initialization method.      It is called at the time of contract creation to invoke parent class initializers and      initialize the contract's state variables.\"},\"rebase()\":{\"details\":\"Changes supply with percentage of:  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower\"},\"setCpiOracle(address)\":{\"params\":{\"cpiOracle_\":\"The address of the cpi oracle contract.\"}},\"setDeviationThreshold(uint256)\":{\"params\":{\"deviationThreshold_\":\"The new exchange rate threshold fraction.\"}},\"setMarketOracle(address)\":{\"params\":{\"marketOracle_\":\"The address of the market oracle contract.\"}}},\"title\":\"CMMD Monetary Supply Policy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeRebasePercentage(int256,int256,int256,int256)\":{\"notice\":\"Computes the percentage of supply to be added or removed: Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md\"},\"rebase()\":{\"notice\":\"Initiates a new rebase operation, provided the minimum time period has elapsed.\"},\"setCpiOracle(address)\":{\"notice\":\"Sets the reference to the CPI oracle.\"},\"setDeviationThreshold(uint256)\":{\"notice\":\"Sets the deviation threshold fraction. If the exchange rate given by the market         oracle is within this fractional distance from the targetRate, then no supply         modifications are made. DECIMALS fixed point number.\"},\"setMarketOracle(address)\":{\"notice\":\"Sets the reference to the Market oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMMDPolicy.sol\":\"CMMDPolicy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CMMDPolicy.sol\":{\"keccak256\":\"0x1114493c2e29f283c02c08eaab3b20ac794a858650dcb0f79814357e4d2bf27e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d390bb5295c98b99389667abc459ae5800dcd558b8f62b1f9f8fa8e8138f36c1\",\"dweb:/ipfs/QmVyKRn5LKwemrvN2SmPpPnaWCd8T36Mk2S4XtuCTXpJtM\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]},\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 42,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "cmmd",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ICMMD)18"
							},
							{
								"astId": 45,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "cpiOracle",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IOracle)26"
							},
							{
								"astId": 48,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "marketOracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IOracle)26"
							},
							{
								"astId": 50,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "baseCpi",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "deviationThreshold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "epoch",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 80,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "rebaseFunctionLowerPercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_int256"
							},
							{
								"astId": 82,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "rebaseFunctionUpperPercentage",
								"offset": 0,
								"slot": "7",
								"type": "t_int256"
							},
							{
								"astId": 84,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "rebaseFunctionGrowth",
								"offset": 0,
								"slot": "8",
								"type": "t_int256"
							}
						],
						"types": {
							"t_contract(ICMMD)18": {
								"encoding": "inplace",
								"label": "contract ICMMD",
								"numberOfBytes": "20"
							},
							"t_contract(IOracle)26": {
								"encoding": "inplace",
								"label": "contract IOracle",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"computeRebasePercentage(int256,int256,int256,int256)": {
								"notice": "Computes the percentage of supply to be added or removed: Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md"
							},
							"rebase()": {
								"notice": "Initiates a new rebase operation, provided the minimum time period has elapsed."
							},
							"setCpiOracle(address)": {
								"notice": "Sets the reference to the CPI oracle."
							},
							"setDeviationThreshold(uint256)": {
								"notice": "Sets the deviation threshold fraction. If the exchange rate given by the market         oracle is within this fractional distance from the targetRate, then no supply         modifications are made. DECIMALS fixed point number."
							},
							"setMarketOracle(address)": {
								"notice": "Sets the reference to the Market oracle."
							}
						},
						"version": 1
					}
				},
				"ICMMD": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "supplyDelta",
									"type": "int256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rebase(uint256,int256)": "7a43e23f",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"supplyDelta\",\"type\":\"int256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMMDPolicy.sol\":\"ICMMD\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CMMDPolicy.sol\":{\"keccak256\":\"0x1114493c2e29f283c02c08eaab3b20ac794a858650dcb0f79814357e4d2bf27e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d390bb5295c98b99389667abc459ae5800dcd558b8f62b1f9f8fa8e8138f36c1\",\"dweb:/ipfs/QmVyKRn5LKwemrvN2SmPpPnaWCd8T36Mk2S4XtuCTXpJtM\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]},\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getData()": "3bc5de30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMMDPolicy.sol\":\"IOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CMMDPolicy.sol\":{\"keccak256\":\"0x1114493c2e29f283c02c08eaab3b20ac794a858650dcb0f79814357e4d2bf27e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d390bb5295c98b99389667abc459ae5800dcd558b8f62b1f9f8fa8e8138f36c1\",\"dweb:/ipfs/QmVyKRn5LKwemrvN2SmPpPnaWCd8T36Mk2S4XtuCTXpJtM\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]},\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":115:1794  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":115:1794  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI GAS 0x2B STATICCALL PUSH18 0x4B6F7EE3483AD69CD39A56E96415BBF15B06 NUMBER EXTCODEHASH DIFFICULTY 0xEE SLT RETURNDATASIZE STOP 0x4D RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:1679:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI GAS 0x2B STATICCALL PUSH18 0x4B6F7EE3483AD69CD39A56E96415BBF15B06 NUMBER EXTCODEHASH DIFFICULTY 0xEE SLT RETURNDATASIZE STOP 0x4D RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:1679:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033",
									".code": [
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMathInt.sol": {
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"details": "Math operations for int256 with overflow safety checks.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathInt",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMathInt.sol\":1272:4341  library SafeMathInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMathInt.sol\":1272:4341  library SafeMathInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B CALLDATASIZE 0xD5 0xC4 0xBA CALLDATASIZE SWAP15 NOT 0x5E 0xBD PUSH20 0x53761DFDA9386D38D2600DC2BF982FF15A1E29EC SAR PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1272:3069:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B CALLDATASIZE 0xD5 0xC4 0xBA CALLDATASIZE SWAP15 NOT 0x5E 0xBD PUSH20 0x53761DFDA9386D38D2600DC2BF982FF15A1E29EC SAR PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1272:3069:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite",
								"twoPower(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033",
									".code": [
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations for int256 with overflow safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathInt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMathInt.sol\":\"SafeMathInt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SafeMath.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/CMMDPolicy.sol": {
				"ast": {
					"absolutePath": "contracts/CMMDPolicy.sol",
					"exportedSymbols": {
						"CMMDPolicy": [
							648
						],
						"ICMMD": [
							18
						],
						"IOracle": [
							26
						],
						"SafeMath": [
							782
						],
						"SafeMathInt": [
							1134
						]
					},
					"id": 649,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "90:22:0"
						},
						{
							"absolutePath": "contracts/SafeMathInt.sol",
							"file": "./SafeMathInt.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 649,
							"sourceUnit": 1135,
							"src": "114:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 649,
							"sourceUnit": 783,
							"src": "142:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "ICMMD",
							"nameLocation": "178:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "236:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:9:0"
									},
									"scope": 18,
									"src": "190:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a43e23f",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nameLocation": "260:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "275:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "supplyDelta",
												"nameLocation": "289:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "282:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 11,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:35:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 18,
									"src": "251:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "168:163:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "IOracle",
							"nameLocation": "343:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3bc5de30",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "366:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "403:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:15:0"
									},
									"scope": 26,
									"src": "357:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "333:78:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "413:229:0",
								"text": " @title CMMD Monetary Supply Policy\n @dev This is an implementation of the CMMD Ideal Money protocol.\n      This component regulates the token supply of the CMMD ERC20 token in response to\n      market oracles."
							},
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "CMMDPolicy",
							"nameLocation": "652:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 39,
									"name": "LogRebase",
									"nameLocation": "675:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "exchangeRate",
												"nameLocation": "733:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "725:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "cpi",
												"nameLocation": "763:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "755:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestedSupplyAdjustment",
												"nameLocation": "783:25:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "776:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 34,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestampSec",
												"nameLocation": "826:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "818:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:160:0"
									},
									"src": "669:176:0"
								},
								{
									"constant": false,
									"functionSelector": "4dafa35e",
									"id": 42,
									"mutability": "mutable",
									"name": "cmmd",
									"nameLocation": "864:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "851:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICMMD_$18",
										"typeString": "contract ICMMD"
									},
									"typeName": {
										"id": 41,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 40,
											"name": "ICMMD",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 18,
											"src": "851:5:0"
										},
										"referencedDeclaration": 18,
										"src": "851:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICMMD_$18",
											"typeString": "contract ICMMD"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab33c5ca",
									"id": 45,
									"mutability": "mutable",
									"name": "cpiOracle",
									"nameLocation": "960:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "945:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOracle_$26",
										"typeString": "contract IOracle"
									},
									"typeName": {
										"id": 44,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 43,
											"name": "IOracle",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 26,
											"src": "945:7:0"
										},
										"referencedDeclaration": 26,
										"src": "945:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOracle_$26",
											"typeString": "contract IOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60961528",
									"id": 48,
									"mutability": "mutable",
									"name": "marketOracle",
									"nameLocation": "1068:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1053:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOracle_$26",
										"typeString": "contract IOracle"
									},
									"typeName": {
										"id": 47,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 46,
											"name": "IOracle",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 26,
											"src": "1053:7:0"
										},
										"referencedDeclaration": 26,
										"src": "1053:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOracle_$26",
											"typeString": "contract IOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "baseCpi",
									"nameLocation": "1180:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1164:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1164:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d94ad837",
									"id": 52,
									"mutability": "mutable",
									"name": "deviationThreshold",
									"nameLocation": "1509:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1494:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "900cf0cf",
									"id": 54,
									"mutability": "mutable",
									"name": "epoch",
									"nameLocation": "1600:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1585:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 57,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "1637:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1612:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1612:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1648:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 66,
									"mutability": "constant",
									"name": "MAX_RATE",
									"nameLocation": "1832:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1807:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1807:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 65,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 59,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1843:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "36",
												"id": 60,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1847:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "1843:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 64,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 62,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1851:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"id": 63,
												"name": "DECIMALS",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 57,
												"src": "1855:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1851:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1843:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 78,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "1936:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "1911:74:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 67,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1911:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 77,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"expression": {
														"arguments": [
															{
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1962:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 71,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1962:6:0",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																}
															],
															"id": 70,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "1957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1957:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_int256",
															"typeString": "type(int256)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "1957:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												],
												"id": 69,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1949:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 75,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1949:25:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"id": 76,
											"name": "MAX_RATE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 66,
											"src": "1977:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1949:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5ee01540",
									"id": 80,
									"mutability": "mutable",
									"name": "rebaseFunctionLowerPercentage",
									"nameLocation": "2140:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "2126:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 79,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2126:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9db59b2f",
									"id": 82,
									"mutability": "mutable",
									"name": "rebaseFunctionUpperPercentage",
									"nameLocation": "2189:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "2175:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 81,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2175:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7486cdea",
									"id": 84,
									"mutability": "mutable",
									"name": "rebaseFunctionGrowth",
									"nameLocation": "2238:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "2224:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 83,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2224:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 92,
									"mutability": "constant",
									"name": "ONE",
									"nameLocation": "2289:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 648,
									"src": "2265:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 85,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2265:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 90,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2302:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"id": 89,
													"name": "DECIMALS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "2306:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2302:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 87,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2295:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_int256_$",
												"typeString": "type(int256)"
											},
											"typeName": {
												"id": 86,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "2295:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2295:20:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2586:915:0",
										"statements": [
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "epoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2596:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 97,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2612:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2604:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2596:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2596:17:0"
											},
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "cpi",
														"nameLocation": "2632:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "2624:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 104,
												"nodeType": "VariableDeclarationStatement",
												"src": "2624:11:0"
											},
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "cpiValid",
														"nameLocation": "2650:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "2645:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 105,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2645:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"nodeType": "VariableDeclarationStatement",
												"src": "2645:13:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 108,
																"name": "cpi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "2669:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 109,
																"name": "cpiValid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2674:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 110,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2668:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 111,
																"name": "cpiOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2686:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOracle_$26",
																	"typeString": "contract IOracle"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "2686:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$_t_bool_$",
																"typeString": "function () external returns (uint256,bool)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2686:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "2668:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2668:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 117,
															"name": "cpiValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2723:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2715:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2715:17:0"
											},
											{
												"assignments": [
													121
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"mutability": "mutable",
														"name": "targetRate",
														"nameLocation": "2751:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "2743:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 126,
																	"name": "cpi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2790:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2794:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 128,
																		"name": "DECIMALS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "2798:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2794:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 124,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "2777:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$782_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 685,
																"src": "2777:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"id": 131,
																	"name": "baseCpi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "2809:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 132,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2808:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 122,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "2764:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$782_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "2764:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2743:75:0"
											},
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "exchangeRate",
														"nameLocation": "2837:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "2829:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"nodeType": "VariableDeclarationStatement",
												"src": "2829:20:0"
											},
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"mutability": "mutable",
														"name": "rateValid",
														"nameLocation": "2864:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "2859:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 138,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 140,
												"nodeType": "VariableDeclarationStatement",
												"src": "2859:14:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 141,
																"name": "exchangeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "2884:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 142,
																"name": "rateValid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "2898:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 143,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2883:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 144,
																"name": "marketOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "2911:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOracle_$26",
																	"typeString": "contract IOracle"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "2911:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$_t_bool_$",
																"typeString": "function () external returns (uint256,bool)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2911:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "2883:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2883:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"name": "rateValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2951:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2943:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2943:18:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 153,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "2976:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 154,
														"name": "MAX_RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "2991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2976:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "2972:77:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "3001:48:0",
													"statements": [
														{
															"expression": {
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 156,
																	"name": "exchangeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "3015:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 157,
																	"name": "MAX_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "3030:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3015:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "3015:23:0"
														}
													]
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "supplyDelta",
														"nameLocation": "3066:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "3059:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 162,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": {
													"arguments": [
														{
															"id": 165,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3099:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 166,
															"name": "targetRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "3113:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 164,
														"name": "computeSupplyDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "3080:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int256_$",
															"typeString": "function (uint256,uint256) view returns (int256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3080:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3059:65:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 169,
															"name": "supplyDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3139:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3153:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3139:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 172,
																		"name": "cmmd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "3158:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICMMD_$18",
																			"typeString": "contract ICMMD"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "3158:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3158:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 177,
																				"name": "supplyDelta",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "3188:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3180:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 175,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3180:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3180:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3179:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3158:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 181,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "3204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3158:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3139:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 197,
												"nodeType": "IfStatement",
												"src": "3135:161:0",
												"trueBody": {
													"id": 196,
													"nodeType": "Block",
													"src": "3216:80:0",
													"statements": [
														{
															"expression": {
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 184,
																	"name": "supplyDelta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "3230:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 187,
																				"name": "MAX_SUPPLY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "3251:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"components": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 188,
																								"name": "cmmd",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 42,
																								"src": "3265:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ICMMD_$18",
																									"typeString": "contract ICMMD"
																								}
																							},
																							"id": 189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "totalSupply",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "3265:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																								"typeString": "function () view external returns (uint256)"
																							}
																						},
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3265:18:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 191,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3264:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3251:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3244:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 185,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3244:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3244:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3230:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 195,
															"nodeType": "ExpressionStatement",
															"src": "3230:55:0"
														}
													]
												}
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "supplyAfterRebase",
														"nameLocation": "3314:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "3306:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3346:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 203,
															"name": "supplyDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3353:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 200,
															"name": "cmmd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "3334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICMMD_$18",
																"typeString": "contract ICMMD"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rebase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "3334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int256_$returns$_t_uint256_$",
															"typeString": "function (uint256,int256) external returns (uint256)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3334:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3306:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "supplyAfterRebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "3382:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 208,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "3403:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3382:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 206,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3375:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "3375:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 213,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3439:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 214,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3446:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 215,
															"name": "cpi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3460:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 216,
															"name": "supplyDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3465:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"expression": {
																"id": 217,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3478:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3478:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "3429:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,int256,uint256)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "EmitStatement",
												"src": "3424:70:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2322:234:0",
										"text": " @notice Initiates a new rebase operation, provided the minimum time period has elapsed.\n @dev Changes supply with percentage of:\n  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower"
									},
									"functionSelector": "af14052c",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nameLocation": "2570:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:2:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:0"
									},
									"scope": 648,
									"src": "2561:940:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3690:39:0",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "cpiOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3700:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "cpiOracle_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "3712:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"src": "3700:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3700:22:0"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "3507:129:0",
										"text": " @notice Sets the reference to the CPI oracle.\n @param cpiOracle_ The address of the cpi oracle contract."
									},
									"functionSelector": "3d6a46e5",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCpiOracle",
									"nameLocation": "3650:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "cpiOracle_",
												"nameLocation": "3671:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3663:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOracle_$26",
													"typeString": "contract IOracle"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "IOracle",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 26,
														"src": "3663:7:0"
													},
													"referencedDeclaration": 26,
													"src": "3663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3662:20:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3690:0:0"
									},
									"scope": 648,
									"src": "3641:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "3934:45:0",
										"statements": [
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 241,
														"name": "marketOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "3944:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 242,
														"name": "marketOracle_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "3959:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"src": "3944:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "3944:28:0"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3736:138:0",
										"text": " @notice Sets the reference to the Market oracle.\n @param marketOracle_ The address of the market oracle contract."
									},
									"functionSelector": "9e30bac5",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketOracle",
									"nameLocation": "3888:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "marketOracle_",
												"nameLocation": "3912:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3904:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOracle_$26",
													"typeString": "contract IOracle"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IOracle",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 26,
														"src": "3904:7:0"
													},
													"referencedDeclaration": 26,
													"src": "3904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:23:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3934:0:0"
									},
									"scope": 648,
									"src": "3879:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "4056:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "rebaseFunctionGrowth_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "4074:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4099:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4074:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4066:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "4066:35:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "rebaseFunctionGrowth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "4111:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "rebaseFunctionGrowth_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "4134:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4111:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "4111:44:0"
											}
										]
									},
									"functionSelector": "8001066d",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRebaseFunctionGrowth",
									"nameLocation": "3995:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "rebaseFunctionGrowth_",
												"nameLocation": "4026:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4019:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 247,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:30:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4056:0:0"
									},
									"scope": 648,
									"src": "3986:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4268:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "rebaseFunctionLowerPercentage_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4286:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "30",
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4320:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4286:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4278:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "4278:44:0"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 273,
														"name": "rebaseFunctionLowerPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "4332:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 274,
														"name": "rebaseFunctionLowerPercentage_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4364:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4332:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4332:62:0"
											}
										]
									},
									"functionSelector": "e9fa88a4",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRebaseFunctionLowerPercentage",
									"nameLocation": "4177:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "rebaseFunctionLowerPercentage_",
												"nameLocation": "4217:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4210:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 263,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4209:39:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:0"
									},
									"scope": 648,
									"src": "4168:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "4507:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "rebaseFunctionUpperPercentage_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "4525:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4525:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4517:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "4517:44:0"
											},
											{
												"expression": {
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 289,
														"name": "rebaseFunctionUpperPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "4571:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 290,
														"name": "rebaseFunctionUpperPercentage_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "4603:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4571:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "4571:62:0"
											}
										]
									},
									"functionSelector": "f4fefa49",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRebaseFunctionUpperPercentage",
									"nameLocation": "4416:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "rebaseFunctionUpperPercentage_",
												"nameLocation": "4456:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4449:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 279,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4448:39:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:0:0"
									},
									"scope": 648,
									"src": "4407:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5061:57:0",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "deviationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "5071:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "deviationThreshold_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "5092:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5071:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "5071:40:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4646:343:0",
										"text": " @notice Sets the deviation threshold fraction. If the exchange rate given by the market\n         oracle is within this fractional distance from the targetRate, then no supply\n         modifications are made. DECIMALS fixed point number.\n @param deviationThreshold_ The new exchange rate threshold fraction."
									},
									"functionSelector": "53a15edc",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDeviationThreshold",
									"nameLocation": "5003:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "deviationThreshold_",
												"nameLocation": "5033:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5025:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5024:29:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5061:0:0"
									},
									"scope": 648,
									"src": "4994:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "5432:413:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "deviationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "5490:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5511:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5515:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "DECIMALS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "5520:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5531:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "5520:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5519:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5515:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5511:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5490:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5490:43:0"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 325,
														"name": "rebaseFunctionGrowth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "5544:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5574:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5579:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 330,
																				"name": "DECIMALS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "5583:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5579:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 332,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5578:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5574:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 326,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "5567:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5567:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5544:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5544:49:0"
											},
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 337,
														"name": "rebaseFunctionUpperPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "5603:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5642:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5648:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 344,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 342,
																							"name": "DECIMALS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 57,
																							"src": "5653:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 343,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5664:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5653:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 345,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5652:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5648:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 347,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5647:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5642:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5635:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 338,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "5635:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5635:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5603:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "5603:65:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "rebaseFunctionLowerPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "5685:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "5725:3:0",
																			"subExpression": {
																				"hexValue": "3130",
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5726:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_10_by_1",
																				"typeString": "int_const -10"
																			}
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5724:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_10_by_1",
																		"typeString": "int_const -10"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5739:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 361,
																							"name": "DECIMALS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 57,
																							"src": "5744:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 362,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5755:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5744:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 364,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5743:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5739:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5732:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 358,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5732:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5732:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "5724:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 353,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "5717:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5717:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5685:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "5685:74:0"
											},
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "epoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "5778:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5778:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "5778:9:0"
											},
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 375,
														"name": "cmmd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "5798:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICMMD_$18",
															"typeString": "contract ICMMD"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 376,
														"name": "cmmd_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "5805:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICMMD_$18",
															"typeString": "contract ICMMD"
														}
													},
													"src": "5798:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICMMD_$18",
														"typeString": "contract ICMMD"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "5798:12:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 379,
														"name": "baseCpi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "5820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 380,
														"name": "baseCpi_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "5830:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5820:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "5820:18:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5124:223:0",
										"text": " @dev ZOS upgradable contract initialization method.\n      It is called at the time of contract creation to invoke parent class initializers and\n      initialize the contract's state variables."
									},
									"functionSelector": "cd6dc687",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "5361:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "cmmd_",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "5381:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ICMMD_$18",
													"typeString": "contract ICMMD"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "ICMMD",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 18,
														"src": "5381:5:0"
													},
													"referencedDeclaration": 18,
													"src": "5381:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICMMD_$18",
														"typeString": "contract ICMMD"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "baseCpi_",
												"nameLocation": "5410:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "5402:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5371:53:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5432:0:0"
									},
									"scope": 648,
									"src": "5352:493:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "6345:1145:0",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "delta",
														"nameLocation": "6362:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "6355:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 398,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6355:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 400,
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:12:0"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "6378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 404,
																"name": "normalizedRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "6402:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 405,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "6417:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"id": 402,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "6386:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 917,
															"src": "6386:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6386:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6378:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "6378:43:0"
											},
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "exponent",
														"nameLocation": "6518:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "6511:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 409,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 415,
																	"name": "growth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "6561:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 416,
																	"name": "delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "6568:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 413,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "6545:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "6545:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6545:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 418,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "6575:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 411,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "6529:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 878,
														"src": "6529:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6529:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6511:68:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 421,
														"name": "exponent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "6661:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"id": 424,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "6688:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"hexValue": "313030",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6692:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"expression": {
																"id": 422,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "6672:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "6672:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6672:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6661:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "6657:101:0",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "6698:60:0",
													"statements": [
														{
															"expression": {
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 428,
																	"name": "exponent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "6712:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 431,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 92,
																			"src": "6739:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"hexValue": "313030",
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6743:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"id": 429,
																			"name": "SafeMathInt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "6723:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																				"typeString": "type(library SafeMathInt)"
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 852,
																		"src": "6723:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6723:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "6712:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 435,
															"nodeType": "ExpressionStatement",
															"src": "6712:35:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "exponent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "6771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"id": 441,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "6798:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "6802:4:0",
																"subExpression": {
																	"hexValue": "313030",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6803:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_100_by_1",
																	"typeString": "int_const -100"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_rational_minus_100_by_1",
																	"typeString": "int_const -100"
																}
															],
															"expression": {
																"id": 439,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "6782:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "6782:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6782:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6771:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "6767:103:0",
												"trueBody": {
													"id": 455,
													"nodeType": "Block",
													"src": "6809:61:0",
													"statements": [
														{
															"expression": {
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 446,
																	"name": "exponent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "6823:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 449,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 92,
																			"src": "6850:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "6854:4:0",
																			"subExpression": {
																				"hexValue": "313030",
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6855:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_100_by_1",
																				"typeString": "int_const -100"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_rational_minus_100_by_1",
																				"typeString": "int_const -100"
																			}
																		],
																		"expression": {
																			"id": 447,
																			"name": "SafeMathInt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "6834:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																				"typeString": "type(library SafeMathInt)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 852,
																		"src": "6834:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6834:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "6823:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 454,
															"nodeType": "ExpressionStatement",
															"src": "6823:36:0"
														}
													]
												}
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "pow",
														"nameLocation": "6887:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "6880:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 457,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [
														{
															"id": 461,
															"name": "exponent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "6914:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 462,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "6924:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 459,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "6893:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "twoPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1133,
														"src": "6893:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6893:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6880:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 465,
														"name": "pow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "6962:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6962:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "6958:51:0",
												"trueBody": {
													"id": 470,
													"nodeType": "Block",
													"src": "6972:37:0",
													"statements": [
														{
															"expression": {
																"id": 468,
																"name": "lower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "6993:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 397,
															"id": 469,
															"nodeType": "Return",
															"src": "6986:12:0"
														}
													]
												}
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7025:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "7018:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 472,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7018:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [
														{
															"id": 476,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7053:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 477,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7059:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 474,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7037:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 917,
														"src": "7037:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7037:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:47:0"
											},
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "intermediate",
														"nameLocation": "7098:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "7091:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 480,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7091:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 486,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7145:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 487,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "7151:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 484,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "7129:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "7129:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7129:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 489,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7156:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 482,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7113:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 878,
														"src": "7113:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7113:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7091:71:0"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 492,
														"name": "intermediate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "7172:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 497,
																		"name": "intermediate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "7219:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 498,
																		"name": "ONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "7232:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "SafeMathInt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "7203:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																			"typeString": "type(library SafeMathInt)"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 852,
																	"src": "7203:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7203:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 500,
																"name": "pow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "7237:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"id": 493,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "7187:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 878,
															"src": "7187:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7187:54:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7172:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "7172:69:0"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7258:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "7251:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 504,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 508,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "7288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 509,
															"name": "intermediate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "7292:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 506,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7272:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 917,
														"src": "7272:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7272:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7251:54:0"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "rebasePercentage",
														"nameLocation": "7362:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "7355:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 512,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7355:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 518,
																				"name": "numerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 473,
																				"src": "7414:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			{
																				"id": 519,
																				"name": "ONE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "7424:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"expression": {
																				"id": 516,
																				"name": "SafeMathInt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "7398:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																					"typeString": "type(library SafeMathInt)"
																				}
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 852,
																			"src": "7398:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																				"typeString": "function (int256,int256) pure returns (int256)"
																			}
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7398:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 521,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "7429:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"id": 514,
																		"name": "SafeMathInt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "7382:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																			"typeString": "type(library SafeMathInt)"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 878,
																	"src": "7382:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7382:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 523,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7381:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 524,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "7445:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7381:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7355:95:0"
											},
											{
												"expression": {
													"id": 527,
													"name": "rebasePercentage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 513,
													"src": "7467:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 397,
												"id": 528,
												"nodeType": "Return",
												"src": "7460:23:0"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "5851:323:0",
										"text": " Computes the percentage of supply to be added or removed:\n Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md\n @param normalizedRate value of rate/targetRate in DECIMALS decimal fixed point number\n @return The percentage of supply to be added or removed."
									},
									"functionSelector": "3a785af1",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeRebasePercentage",
									"nameLocation": "6188:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "normalizedRate",
												"nameLocation": "6228:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6221:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 386,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "lower",
												"nameLocation": "6259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 388,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "upper",
												"nameLocation": "6281:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 390,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "growth",
												"nameLocation": "6303:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 392,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6211:104:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6337:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 395,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:8:0"
									},
									"scope": 648,
									"src": "6179:1311:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7725:570:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 541,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "7764:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 542,
															"name": "targetRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "withinDeviationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "7739:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256) view returns (bool)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7739:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 547,
												"nodeType": "IfStatement",
												"src": "7735:81:0",
												"trueBody": {
													"id": 546,
													"nodeType": "Block",
													"src": "7783:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7804:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 539,
															"id": 545,
															"nodeType": "Return",
															"src": "7797:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "targetRateSigned",
														"nameLocation": "7832:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "7825:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 548,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7825:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"arguments": [
														{
															"id": 552,
															"name": "targetRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7858:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7851:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 550,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7851:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7825:44:0"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "normalizedRate",
														"nameLocation": "7886:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "7879:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 555,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 563,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "7942:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7935:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 561,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7935:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7935:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 565,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "7948:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 559,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "7919:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "7919:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7919:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 567,
															"name": "targetRateSigned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7953:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 557,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7903:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 878,
														"src": "7903:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7903:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7879:91:0"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "rebasePercentage",
														"nameLocation": "7987:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "7980:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 570,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"arguments": [
														{
															"id": 573,
															"name": "normalizedRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "8043:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 574,
															"name": "rebaseFunctionLowerPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "8071:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 575,
															"name": "rebaseFunctionUpperPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "8114:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 576,
															"name": "rebaseFunctionGrowth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "8157:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 572,
														"name": "computeRebasePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "8006:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256,int256,int256) pure returns (int256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8006:181:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7980:207:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 585,
																					"name": "cmmd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 42,
																					"src": "8244:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ICMMD_$18",
																						"typeString": "contract ICMMD"
																					}
																				},
																				"id": 586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalSupply",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 8,
																				"src": "8244:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8244:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8237:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 583,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8237:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8237:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 589,
																	"name": "rebasePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "8264:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "8221:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "8221:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8221:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"components": [
																{
																	"id": 591,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "8283:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 592,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 579,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "8205:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1134_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 878,
														"src": "8205:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8205:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 539,
												"id": 594,
												"nodeType": "Return",
												"src": "8198:90:0"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "7496:131:0",
										"text": " @return Computes the total supply adjustment in response to the exchange rate\n         and the targetRate."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeSupplyDelta",
									"nameLocation": "7641:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "7668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "targetRate",
												"nameLocation": "7682:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7674:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7659:34:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7717:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 537,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7716:8:0"
									},
									"scope": 648,
									"src": "7632:663:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "8745:335:0",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "absoluteDeviationThreshold",
														"nameLocation": "8763:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 646,
														"src": "8755:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 612,
																	"name": "targetRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "8818:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 613,
																	"name": "deviationThreshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "8829:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 610,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "8805:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$782_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 685,
																"src": "8805:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8805:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8849:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 616,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "8853:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8849:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 608,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8792:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$782_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "8792:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8792:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8755:107:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 620,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "8895:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 621,
																		"name": "targetRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "8903:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8895:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 625,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "8930:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 626,
																				"name": "targetRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "8935:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 623,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "8917:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$782_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 735,
																			"src": "8917:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8917:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 628,
																		"name": "absoluteDeviationThreshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "8949:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8917:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8895:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 631,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8894:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 632,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "8993:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 633,
																		"name": "targetRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "9000:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8993:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 637,
																				"name": "targetRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "9027:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 638,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "9038:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 635,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "9014:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$782_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 735,
																			"src": "9014:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9014:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 640,
																		"name": "absoluteDeviationThreshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "9046:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9014:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8993:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 643,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8992:81:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8894:179:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 605,
												"id": 645,
												"nodeType": "Return",
												"src": "8875:198:0"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "8301:314:0",
										"text": " @param rate The current exchange rate, an 18 decimal fixed point number.\n @param targetRate The target exchange rate, an 18 decimal fixed point number.\n @return If the rate is within the deviation threshold from the target rate, returns true.\n         Otherwise, returns false."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withinDeviationThreshold",
									"nameLocation": "8629:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "8662:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "8654:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "targetRate",
												"nameLocation": "8676:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "8668:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:34:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "8735:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8735:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8734:6:0"
									},
									"scope": 648,
									"src": "8620:460:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 649,
							"src": "643:8440:0",
							"usedErrors": []
						}
					],
					"src": "90:8994:0"
				},
				"id": 0
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							782
						]
					},
					"id": 783,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 651,
								"nodeType": "StructuredDocumentation",
								"src": "24:90:1",
								"text": " @title SafeMath\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 782,
							"linearizedBaseContracts": [
								782
							],
							"name": "SafeMath",
							"nameLocation": "123:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "278:354:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "509:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "514:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "509:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "505:45:1",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "517:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "538:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 660,
															"id": 665,
															"nodeType": "Return",
															"src": "531:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "568:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "560:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "560:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "572:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "576:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "572:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "560:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 675,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "595:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 676,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "599:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 678,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "604:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "587:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "587:19:1"
											},
											{
												"expression": {
													"id": 682,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "624:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 683,
												"nodeType": "Return",
												"src": "617:8:1"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "138:68:1",
										"text": " @dev Multiplies two numbers, reverts on overflow."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "220:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "232:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "224:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "243:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "235:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:22:1"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 782,
									"src": "211:421:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "819:221:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "837:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "841:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "837:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "829:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "829:14:1"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "919:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 703,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 704,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"id": 707,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "1032:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 694,
												"id": 708,
												"nodeType": "Return",
												"src": "1025:8:1"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "638:109:1",
										"text": " @dev Integer division of two numbers truncating the quotient, reverts on division by zero."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "761:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "773:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "765:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "784:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "776:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:22:1"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "810:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:9:1"
									},
									"scope": 782,
									"src": "752:288:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "1230:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 721,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "1248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 722,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1253:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1248:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "1240:15:1"
											},
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1273:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "1265:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1265:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 728,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1277:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 729,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "1281:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1277:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1265:17:1"
											},
											{
												"expression": {
													"id": 732,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 727,
													"src": "1300:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 719,
												"id": 733,
												"nodeType": "Return",
												"src": "1293:8:1"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "1046:112:1",
										"text": " @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1172:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1184:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1176:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1195:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1187:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:22:1"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1221:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:9:1"
									},
									"scope": 782,
									"src": "1163:145:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "1448:78:1",
										"statements": [
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1466:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "1458:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 747,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1470:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 748,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "1474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1470:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1458:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "1493:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 753,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "1498:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1493:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1485:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "1485:15:1"
											},
											{
												"expression": {
													"id": 757,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 746,
													"src": "1518:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 744,
												"id": 758,
												"nodeType": "Return",
												"src": "1511:8:1"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1314:62:1",
										"text": " @dev Adds two numbers, reverts on overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1390:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1402:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1394:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1413:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1405:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:22:1"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1439:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:9:1"
									},
									"scope": 782,
									"src": "1381:145:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "1738:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "1756:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1761:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1756:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1748:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "1748:15:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 776,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1780:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 777,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1784:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1780:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 769,
												"id": 779,
												"nodeType": "Return",
												"src": "1773:12:1"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "1532:134:1",
										"text": " @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n reverts when dividing by zero."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1680:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1692:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1684:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1703:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1695:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:22:1"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1729:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:9:1"
									},
									"scope": 782,
									"src": "1671:121:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 783,
							"src": "115:1679:1",
							"usedErrors": []
						}
					],
					"src": "0:1794:1"
				},
				"id": 1
			},
			"contracts/SafeMathInt.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMathInt.sol",
					"exportedSymbols": {
						"SafeMathInt": [
							1134
						]
					},
					"id": 1135,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 784,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "1154:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 785,
								"nodeType": "StructuredDocumentation",
								"src": "1178:93:2",
								"text": " @title SafeMathInt\n @dev Math operations for int256 with overflow safety checks."
							},
							"fullyImplemented": true,
							"id": 1134,
							"linearizedBaseContracts": [
								1134
							],
							"name": "SafeMathInt",
							"nameLocation": "1280:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 793,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nameLocation": "1322:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "1298:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 786,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1298:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1342:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 788,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1335:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 787,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:2",
													"typeDescriptions": {}
												}
											},
											"id": 790,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1335:9:2",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323535",
											"id": 791,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1348:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "1335:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 803,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nameLocation": "1381:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "1357:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 794,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1357:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"id": 802,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1394:19:2",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1403:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1396:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 795,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1396:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1396:9:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323535",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1409:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1396:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 801,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1395:18:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "1567:232:2",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1584:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "1577:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 813,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1577:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1588:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 816,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1592:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1577:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 820,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "1675:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 821,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "1680:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1675:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 823,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "1695:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 824,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "1699:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1695:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1694:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 827,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "1715:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 828,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "1719:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1715:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1714:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1694:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1675:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1667:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "1667:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 836,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "1750:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1750:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 839,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 840,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "1762:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 841,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "1766:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1762:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 843,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "1771:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "1762:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 845,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1749:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1741:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1741:33:2"
											},
											{
												"expression": {
													"id": 849,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 814,
													"src": "1791:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 812,
												"id": 850,
												"nodeType": "Return",
												"src": "1784:8:2"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1420:78:2",
										"text": " @dev Multiplies two int256 variables and fails on overflow."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1512:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1523:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1516:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 805,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1533:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1526:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 807,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:20:2"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1559:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 810,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:8:2"
									},
									"scope": 1134,
									"src": "1503:296:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "1953:189:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 863,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "2030:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2035:2:2",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2036:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "2030:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 867,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2041:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 868,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "2046:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2041:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2030:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2022:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "2022:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 873,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2130:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 874,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2134:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2130:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 861,
												"id": 876,
												"nodeType": "Return",
												"src": "2123:12:2"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1805:79:2",
										"text": " @dev Division of two int256 variables and fails on overflow."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1898:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1909:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1902:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 854,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1919:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1912:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:20:2"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1945:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:8:2"
									},
									"scope": 1134,
									"src": "1889:253:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "2294:108:2",
										"statements": [
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2311:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "2304:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 888,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "2315:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 891,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2319:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2315:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2304:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 895,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "2339:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2344:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2339:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 898,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "2349:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 899,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "2354:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2349:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2339:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2338:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 903,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "2361:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2365:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2361:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 906,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "2370:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 907,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "2374:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2370:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2361:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 910,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2360:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2338:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2330:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2330:47:2"
											},
											{
												"expression": {
													"id": 914,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "2394:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 887,
												"id": 915,
												"nodeType": "Return",
												"src": "2387:8:2"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "2148:77:2",
										"text": " @dev Subtracts two int256 variables and fails on overflow."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2239:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2250:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "2243:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 880,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2243:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2260:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "2253:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 882,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:20:2"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "2286:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 885,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2286:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:8:2"
									},
									"scope": 1134,
									"src": "2230:172:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "2549:108:2",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2566:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "2559:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 927,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2559:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "2570:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 930,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "2574:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2570:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2559:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 934,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "2594:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2599:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2594:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 937,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "2604:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 938,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "2609:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2604:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2594:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 941,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 942,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "2616:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2616:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 945,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "2625:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 946,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "2629:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2625:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2616:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2615:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2593:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2585:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "2585:47:2"
											},
											{
												"expression": {
													"id": 953,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "2649:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 926,
												"id": 954,
												"nodeType": "Return",
												"src": "2642:8:2"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "2408:72:2",
										"text": " @dev Adds two int256 variables and fails on overflow."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2494:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2505:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "2498:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 919,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2515:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "2508:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 921,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:20:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "2541:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 924,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2541:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2540:8:2"
									},
									"scope": 1134,
									"src": "2485:172:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "2796:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 965,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2814:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 966,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "2819:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2814:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "2806:24:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 970,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2847:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2851:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2847:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 975,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2860:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2847:14:2",
													"trueExpression": {
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2855:2:2",
														"subExpression": {
															"id": 973,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2856:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 963,
												"id": 977,
												"nodeType": "Return",
												"src": "2840:21:2"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "2663:74:2",
										"text": " @dev Converts to absolute value, and fails on overflow."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "2751:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2755:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 958,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2755:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:10:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2788:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 961,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2788:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:8:2"
									},
									"scope": 1134,
									"src": "2742:126:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "3275:1064:2",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "reciprocal",
														"nameLocation": "3290:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3285:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3303:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3285:23:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "exp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "3322:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3328:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "3318:83:2",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "3331:70:2",
													"statements": [
														{
															"expression": {
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 996,
																	"name": "reciprocal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "3345:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3358:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3345:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 999,
															"nodeType": "ExpressionStatement",
															"src": "3345:17:2"
														},
														{
															"expression": {
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1000,
																	"name": "exp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3376:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1002,
																			"name": "exp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "3386:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1001,
																		"name": "abs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "3382:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256) pure returns (int256)"
																		}
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3382:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3376:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "3376:14:2"
														}
													]
												}
											},
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "ks",
														"nameLocation": "3507:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3490:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
															"typeString": "int256[5]"
														},
														"typeName": {
															"baseType": {
																"id": 1011,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "3490:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1012,
															"length": {
																"hexValue": "35",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3497:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "ArrayTypeName",
															"src": "3490:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
																"typeString": "int256[5]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"hexValue": "31343134323133353632333733303935303439",
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3533:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1414213562373095049_by_1",
																		"typeString": "int_const 1414213562373095049"
																	},
																	"value": "1414213562373095049"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1414213562373095049_by_1",
																		"typeString": "int_const 1414213562373095049"
																	}
																],
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1014,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3526:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3526:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"hexValue": "31313839323037313135303032373231303637",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3567:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1189207115002721067_by_1",
																"typeString": "int_const 1189207115002721067"
															},
															"value": "1189207115002721067"
														},
														{
															"hexValue": "31303930353037373332363635323537363539",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3600:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1090507732665257659_by_1",
																"typeString": "int_const 1090507732665257659"
															},
															"value": "1090507732665257659"
														},
														{
															"hexValue": "31303434323733373832343237343133383430",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3633:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1044273782427413840_by_1",
																"typeString": "int_const 1044273782427413840"
															},
															"value": "1044273782427413840"
														},
														{
															"hexValue": "31303231383937313438363534313136363738",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3666:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1021897148654116678_by_1",
																"typeString": "int_const 1021897148654116678"
															},
															"value": "1021897148654116678"
														}
													],
													"id": 1022,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3512:183:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
														"typeString": "int256[5] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3490:205:2"
											},
											{
												"assignments": [
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "whole",
														"nameLocation": "3712:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3705:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1024,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"arguments": [
														{
															"id": 1027,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3724:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1028,
															"name": "one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "3729:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1026,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3720:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3720:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3705:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "whole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "3751:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3760:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3751:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3743:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3743:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "3743:21:2"
											},
											{
												"assignments": [
													1038
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3781:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3774:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1037,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3774:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "31",
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3809:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				}
																			],
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3801:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1042,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3801:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3801:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1048,
																				"name": "whole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1025,
																				"src": "3823:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3815:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1046,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3815:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3815:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3801:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3794:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3794:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3794:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1052,
															"name": "one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "3832:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1039,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "3790:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3774:62:2"
											},
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "3853:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3846:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1055,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3846:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1058,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3869:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1060,
																	"name": "whole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "3878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 1061,
																	"name": "one",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "3885:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1059,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "3874:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3874:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1057,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "3865:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3865:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3846:44:2"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "3908:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3901:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1065,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3901:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1071,
												"initialValue": {
													"arguments": [
														{
															"id": 1068,
															"name": "one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "3922:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"hexValue": "32",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3927:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1067,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3918:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3901:28:2"
											},
											{
												"body": {
													"id": 1115,
													"nodeType": "Block",
													"src": "3971:254:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1082,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "3989:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1083,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "4002:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3989:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1107,
															"nodeType": "IfStatement",
															"src": "3985:191:2",
															"trueBody": {
																"id": 1106,
																"nodeType": "Block",
																"src": "4011:165:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1085,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1056,
																				"src": "4029:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1087,
																						"name": "remaining",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1056,
																						"src": "4045:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"id": 1088,
																						"name": "current",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1066,
																						"src": "4056:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1086,
																					"name": "sub",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 917,
																					"src": "4041:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4041:23:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4029:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 1091,
																		"nodeType": "ExpressionStatement",
																		"src": "4029:35:2"
																	},
																	{
																		"expression": {
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1092,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "4082:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1095,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1038,
																								"src": "4099:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1096,
																									"name": "ks",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1013,
																									"src": "4107:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
																										"typeString": "int256[5] memory"
																									}
																								},
																								"id": 1098,
																								"indexExpression": {
																									"id": 1097,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1073,
																									"src": "4110:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4107:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								},
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 1094,
																							"name": "mul",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 852,
																							"src": "4095:3:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																								"typeString": "function (int256,int256) pure returns (int256)"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4095:18:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1102,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1100,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4115:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4119:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "4115:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"id": 1093,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "4091:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4091:31:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4082:40:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 1105,
																		"nodeType": "ExpressionStatement",
																		"src": "4082:40:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1108,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "4189:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1110,
																			"name": "current",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "4203:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"hexValue": "32",
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4212:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			}
																		],
																		"id": 1109,
																		"name": "div",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4199:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4199:15:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4189:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1114,
															"nodeType": "ExpressionStatement",
															"src": "4189:25:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "3959:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3963:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "3959:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"initializationExpression": {
													"assignments": [
														1073
													],
													"declarations": [
														{
															"constant": false,
															"id": 1073,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3952:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1116,
															"src": "3944:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1072,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3944:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1075,
													"initialValue": {
														"hexValue": "30",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3944:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3966:3:2",
														"subExpression": {
															"id": 1079,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3966:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1081,
													"nodeType": "ExpressionStatement",
													"src": "3966:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3939:286:2"
											},
											{
												"condition": {
													"id": 1117,
													"name": "reciprocal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 990,
													"src": "4238:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "4234:76:2",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "4250:60:2",
													"statements": [
														{
															"expression": {
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1118,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "4264:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1121,
																					"name": "one",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "4281:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1122,
																					"name": "one",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "4286:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1120,
																				"name": "mul",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "4277:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																					"typeString": "function (int256,int256) pure returns (int256)"
																				}
																			},
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4277:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"id": 1124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "4292:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1119,
																		"name": "div",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4273:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4273:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4264:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "4264:35:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1130,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "4326:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 988,
												"id": 1131,
												"nodeType": "Return",
												"src": "4319:13:2"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "2874:323:2",
										"text": " @dev Computes 2^exp with limited precision where -100 <= exp <= 100 * one\n @param one 1.0 represented in the same fixed point number format as exp\n @param exp The power to raise 2 to -100 <= exp <= 100 * one\n @return 2^exp represented with same number of decimals after the point as one"
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "twoPower",
									"nameLocation": "3211:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "exp",
												"nameLocation": "3227:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3220:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 981,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3220:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "one",
												"nameLocation": "3239:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 983,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:24:2"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3267:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 986,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:8:2"
									},
									"scope": 1134,
									"src": "3202:1137:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1135,
							"src": "1272:3069:2",
							"usedErrors": []
						}
					],
					"src": "1154:3187:2"
				},
				"id": 2
			}
		}
	}
}