{
	"id": "25a06608bd182bfd2e20f76eefda5d51",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CMMDPolicy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n//0xE42d0b39B4862462ECA4cC7f30da6680b9b86d32\npragma solidity 0.8.7;\n\nimport \"./SafeMathInt.sol\";\nimport \"./SafeMath.sol\";\n\ninterface ICMMD {\n    function totalSupply() external view returns (uint256);\n\n    function rebase(uint256 epoch, int256 supplyDelta) external returns (uint256);\n}\n\ninterface IOracle {\n    function getData() external returns (uint256, bool);\n}\n\n/**\n * @title CMMD Monetary Supply Policy\n * @dev This is an implementation of the CMMD Ideal Money protocol.\n *\n *      This component regulates the token supply of the CMMD ERC20 token in response to\n *      market oracles.\n */\ncontract CMMDPolicy {\n    event LogRebase(\n        uint256 indexed epoch,\n        uint256 exchangeRate,\n        uint256 cpi,\n        int256 requestedSupplyAdjustment,\n        uint256 timestampSec\n    );\n\n    event Transfer(address from, address receiver, uint amount, uint256 timestamp);\n    \n    uint256 faucetCount;\n\n    struct TransferStruct {\n        address sender;\n        address receiver;\n        uint amount;\n        uint256 timestamp;\n    }\n\n    TransferStruct[] transactions;\n\n    ICMMD public cmmd;\n\n    // Provides the current CPI, as an 18 decimal fixed point number.\n    IOracle public cpiOracle;\n       \n    // Provides the current CPI, as an 18 decimal fixed point number.\n    IOracle public marketOracle;\n\n    // CPI value at the time of launch, as an 18 decimal fixed point number.\n    uint256 public baseCpi;\n\n    // If the current exchange rate is within this fractional distance from the target, no supply\n    // update is performed. Fixed point number--same format as the rate.\n    // (ie) abs(rate - targetRate) / targetRate < deviationThreshold, then no supply change.\n    // DECIMALS Fixed point number.\n    uint256 public deviationThreshold;\n\n    // The number of rebase cycles since inception\n    uint256 public epoch;\n\n    uint256 private constant DECIMALS = 18;\n\n    // Due to the expression in computeSupplyDelta(), MAX_RATE * MAX_SUPPLY must fit into an int256.\n    // Both are 18 decimals fixed point numbers.\n    uint256 private constant MAX_RATE = 10**6 * 10**DECIMALS;\n    // MAX_SUPPLY = MAX_INT256 / MAX_RATE\n    uint256 private constant MAX_SUPPLY = uint256(type(int256).max) / MAX_RATE;\n\n    // DECIMALS decimal fixed point numbers.\n    // Used in computation of  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*delta))) + Lower\n    int256 public rebaseFunctionLowerPercentage;\n    int256 public rebaseFunctionUpperPercentage;\n    int256 public rebaseFunctionGrowth;\n\n    int256 private constant ONE = int256(10**DECIMALS);\n\n    /**\n     * @notice Initiates a new rebase operation, provided the minimum time period has elapsed.\n     * @dev Changes supply with percentage of:\n     *  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower\n     */\n    function rebase() public {\n        epoch = epoch + 1;\n\n        uint256 cpi;\n        bool cpiValid;\n        (cpi, cpiValid) = cpiOracle.getData();\n        require(cpiValid);\n\n        uint256 targetRate = SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi));\n\n        uint256 exchangeRate;\n        bool rateValid;\n        (exchangeRate, rateValid) = marketOracle.getData();\n        require(rateValid);\n\n        if (exchangeRate > MAX_RATE) {\n            exchangeRate = MAX_RATE;\n        }\n\n        int256 supplyDelta = computeSupplyDelta(exchangeRate, targetRate);\n\n        if (supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY) {\n            supplyDelta = int256(MAX_SUPPLY - (cmmd.totalSupply()));\n        }\n\n        uint256 supplyAfterRebase = cmmd.rebase(epoch, supplyDelta);\n        assert(supplyAfterRebase <= MAX_SUPPLY);\n        emit LogRebase(epoch, exchangeRate, cpi, supplyDelta, block.timestamp);\n    }\n\n    /**\n     * @notice Sets the reference to the CPI oracle.\n     * @param cpiOracle_ The address of the cpi oracle contract.\n     */\n    function setCpiOracle(IOracle cpiOracle_) public {\n        cpiOracle = cpiOracle_;\n    }\n\n     /**\n     * @notice Sets the reference to the Market oracle.\n     * @param marketOracle_ The address of the market oracle contract.\n     */\n    function setMarketOracle(IOracle marketOracle_) public {\n        marketOracle = marketOracle_;\n    }\n\n\n    function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {\n        require(rebaseFunctionGrowth_ >= 0);\n        rebaseFunctionGrowth = rebaseFunctionGrowth_;\n    }\n\n    function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)\n        public\n    {\n        require(rebaseFunctionLowerPercentage_ <= 0);\n        rebaseFunctionLowerPercentage = rebaseFunctionLowerPercentage_;\n    }\n\n    function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)\n        public\n    {\n        require(rebaseFunctionUpperPercentage_ >= 0);\n        rebaseFunctionUpperPercentage = rebaseFunctionUpperPercentage_;\n    }\n\n    /**\n     * @notice Sets the deviation threshold fraction. If the exchange rate given by the market\n     *         oracle is within this fractional distance from the targetRate, then no supply\n     *         modifications are made. DECIMALS fixed point number.\n     * @param deviationThreshold_ The new exchange rate threshold fraction.\n     */\n    function setDeviationThreshold(uint256 deviationThreshold_) public {\n        deviationThreshold = deviationThreshold_;\n    }\n  \n    /**\n     * @notice Sets the Base CPI - for ease of demo and testing \n     * @param baseCpi_ The new exchange rate threshold fraction.\n     */\n    function setBaseCpi(uint256 baseCpi_) public {\n        baseCpi = baseCpi_;\n    }\n\n    /**\n     * @dev ZOS upgradable contract initialization method.\n     *      It is called at the time of contract creation to invoke parent class initializers and\n     *      initialize the contract's state variables.\n     */\n    function initialize(\n        ICMMD cmmd_,\n        uint256 baseCpi_\n    ) public {\n\n        // deviationThreshold = 0.05e18 = 5e16\n        deviationThreshold = 5 * 10**(DECIMALS - 2);\n\n        rebaseFunctionGrowth = int256(3 * (10**DECIMALS));\n        rebaseFunctionUpperPercentage = int256(10 * (10**(DECIMALS - 2))); // 0.1\n        rebaseFunctionLowerPercentage = int256((-10) * int256(10**(DECIMALS - 2))); // -0.1\n\n        epoch = 0;\n\n        cmmd = cmmd_;\n        baseCpi = baseCpi_;\n    }\n\n    /**\n     * Computes the percentage of supply to be added or removed:\n     * Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md\n     * @param normalizedRate value of rate/targetRate in DECIMALS decimal fixed point number\n     * @return The percentage of supply to be added or removed.\n     */\n    function computeRebasePercentage(\n        int256 normalizedRate,\n        int256 lower,\n        int256 upper,\n        int256 growth\n    ) public pure returns (int256) {\n        int256 delta;\n\n        delta = SafeMathInt.sub(normalizedRate,ONE);\n\n        // Compute: (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*delta))) + Lower\n\n        int256 exponent = SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE);\n        // Cap exponent to guarantee it is not too big for twoPower\n        if (exponent > SafeMathInt.mul(ONE,100)) {\n            exponent = SafeMathInt.mul(ONE,100);\n        }\n        if (exponent < SafeMathInt.mul(ONE,-100)) {\n            exponent = SafeMathInt.mul(ONE,-100);\n        }\n\n        int256 pow = SafeMathInt.twoPower(exponent, ONE); // 2^(Growth*Delta)\n        if (pow == 0) {\n            return lower;\n        }\n        int256 numerator = SafeMathInt.sub(upper,lower); //(Upper-Lower)\n        int256 intermediate = SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower);\n        intermediate = SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow);\n        int256 denominator = SafeMathInt.sub(ONE,intermediate); // (1-(Upper/Lower)/2^(Growth*delta)))\n\n        int256 rebasePercentage = (SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator)) + lower;\n        return rebasePercentage;\n    }\n\n    /**\n     * @return Computes the total supply adjustment in response to the exchange rate\n     *         and the targetRate.\n     */\n    function computeSupplyDelta(uint256 rate, uint256 targetRate) internal view returns (int256) {\n        if (withinDeviationThreshold(rate, targetRate)) {\n            return 0;\n        }\n        int256 targetRateSigned = int256(targetRate);\n        int256 normalizedRate = SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned);\n        int256 rebasePercentage = computeRebasePercentage(\n            normalizedRate,\n            rebaseFunctionLowerPercentage,\n            rebaseFunctionUpperPercentage,\n            rebaseFunctionGrowth\n        );\n\n        return SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE));\n    }\n\n    /**\n     * @param rate The current exchange rate, an 18 decimal fixed point number.\n     * @param targetRate The target exchange rate, an 18 decimal fixed point number.\n     * @return If the rate is within the deviation threshold from the target rate, returns true.\n     *         Otherwise, returns false.\n     */\n    function withinDeviationThreshold(uint256 rate, uint256 targetRate)\n        internal\n        view\n        returns (bool)\n    {\n        uint256 absoluteDeviationThreshold = SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS);  \n\n        return\n            (rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold) ||\n            (rate < targetRate && SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold);\n    }\n\n    function faucet(address payable receiver, uint amount) public {\n        faucetCount += 1;\n        transactions.push(TransferStruct(msg.sender, receiver, amount, block.timestamp));\n        emit Transfer(msg.sender, receiver, amount, block.timestamp);\n    }\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "pragma solidity 0.8.7;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two numbers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0); // Solidity only automatically asserts when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two numbers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}"
			},
			"contracts/SafeMathInt.sol": {
				"content": "/*\nMIT License\nCopyright (c) 2018 requestnetwork\nCopyright (c) 2018 Fragments, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.7;\n\n/**\n * @title SafeMathInt\n * @dev Math operations for int256 with overflow safety checks.\n */\nlibrary SafeMathInt {\n    int256 private constant MIN_INT256 = int256(1) << 255;\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\n\n    /**\n     * @dev Multiplies two int256 variables and fails on overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a * b;\n\n        // Detect overflow when multiplying MIN_INT256 with -1\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\n        require((b == 0) || (c / b == a));\n        return c;\n    }\n\n    /**\n     * @dev Division of two int256 variables and fails on overflow.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        // Prevent overflow when dividing MIN_INT256 by -1\n        require(b != -1 || a != MIN_INT256);\n\n        // Solidity already throws when dividing by 0.\n        return a / b;\n    }\n\n    /**\n     * @dev Subtracts two int256 variables and fails on overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a - b;\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\n        return c;\n    }\n\n    /**\n     * @dev Adds two int256 variables and fails on overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a + b;\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\n        return c;\n    }\n\n    /**\n     * @dev Converts to absolute value, and fails on overflow.\n     */\n    function abs(int256 a) internal pure returns (int256) {\n        require(a != MIN_INT256);\n        return a < 0 ? -a : a;\n    }\n\n    /**\n     * @dev Computes 2^exp with limited precision where -100 <= exp <= 100 * one\n     * @param one 1.0 represented in the same fixed point number format as exp\n     * @param exp The power to raise 2 to -100 <= exp <= 100 * one\n     * @return 2^exp represented with same number of decimals after the point as one\n     */\n    function twoPower(int256 exp, int256 one) internal pure returns (int256) {\n        bool reciprocal = false;\n        if (exp < 0) {\n            reciprocal = true;\n            exp = abs(exp);\n        }\n\n        // Precomputed values for 2^(1/2^i) in 18 decimals fixed point numbers\n        int256[5] memory ks = [\n            int256(1414213562373095049),\n            1189207115002721067,\n            1090507732665257659,\n            1044273782427413840,\n            1021897148654116678\n        ];\n        int256 whole = div(exp, one);\n        require(whole <= 100);\n        int256 result = mul(int256(uint256(1) << uint256(whole)), one);\n        int256 remaining = sub(exp, mul(whole, one));\n\n        int256 current = div(one, 2);\n        for (uint256 i = 0; i < 5; i++) {\n            if (remaining >= current) {\n                remaining = sub(remaining, current);\n                result = div(mul(result, ks[i]), 10**18); // 10**18 to match hardcoded ks values\n            }\n            current = div(current, 2);\n        }\n        if (reciprocal) {\n            result = div(mul(one, one), result);\n        }\n        return result;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CMMDPolicy.sol": {
				"CMMDPolicy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "exchangeRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cpi",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "requestedSupplyAdjustment",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestampSec",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baseCpi",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cmmd",
							"outputs": [
								{
									"internalType": "contract ICMMD",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "normalizedRate",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "lower",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "upper",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "growth",
									"type": "int256"
								}
							],
							"name": "computeRebasePercentage",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cpiOracle",
							"outputs": [
								{
									"internalType": "contract IOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deviationThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "faucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ICMMD",
									"name": "cmmd_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "baseCpi_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketOracle",
							"outputs": [
								{
									"internalType": "contract IOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFunctionGrowth",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFunctionLowerPercentage",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseFunctionUpperPercentage",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "baseCpi_",
									"type": "uint256"
								}
							],
							"name": "setBaseCpi",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IOracle",
									"name": "cpiOracle_",
									"type": "address"
								}
							],
							"name": "setCpiOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deviationThreshold_",
									"type": "uint256"
								}
							],
							"name": "setDeviationThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IOracle",
									"name": "marketOracle_",
									"type": "address"
								}
							],
							"name": "setMarketOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "rebaseFunctionGrowth_",
									"type": "int256"
								}
							],
							"name": "setRebaseFunctionGrowth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "rebaseFunctionLowerPercentage_",
									"type": "int256"
								}
							],
							"name": "setRebaseFunctionLowerPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "rebaseFunctionUpperPercentage_",
									"type": "int256"
								}
							],
							"name": "setRebaseFunctionUpperPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is an implementation of the CMMD Ideal Money protocol.      This component regulates the token supply of the CMMD ERC20 token in response to      market oracles.",
						"kind": "dev",
						"methods": {
							"computeRebasePercentage(int256,int256,int256,int256)": {
								"params": {
									"normalizedRate": "value of rate/targetRate in DECIMALS decimal fixed point number"
								},
								"returns": {
									"_0": "The percentage of supply to be added or removed."
								}
							},
							"initialize(address,uint256)": {
								"details": "ZOS upgradable contract initialization method.      It is called at the time of contract creation to invoke parent class initializers and      initialize the contract's state variables."
							},
							"rebase()": {
								"details": "Changes supply with percentage of:  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower"
							},
							"setBaseCpi(uint256)": {
								"params": {
									"baseCpi_": "The new exchange rate threshold fraction."
								}
							},
							"setCpiOracle(address)": {
								"params": {
									"cpiOracle_": "The address of the cpi oracle contract."
								}
							},
							"setDeviationThreshold(uint256)": {
								"params": {
									"deviationThreshold_": "The new exchange rate threshold fraction."
								}
							},
							"setMarketOracle(address)": {
								"params": {
									"marketOracle_": "The address of the market oracle contract."
								}
							}
						},
						"title": "CMMD Monetary Supply Policy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CMMDPolicy.sol\":643:9860  contract CMMDPolicy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CMMDPolicy.sol\":643:9860  contract CMMDPolicy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x900cf0cf\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xaf14052c\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xaf14052c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd94ad837\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe9fa88a4\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf4fefa49\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x900cf0cf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9db59b2f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9e30bac5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa37069ee\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xab33c5ca\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x60961528\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x60961528\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6de729db\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7486cdea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7b56c2b2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8001066d\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x3a785af1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3d6a46e5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4dafa35e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x53a15edc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5ee01540\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CMMDPolicy.sol\":6696:8007  function computeRebasePercentage(... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":3924:4012  function setCpiOracle(IOracle cpiOracle_) public {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":1135:1152  ICMMD public cmmd */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":5277:5401  function setDeviationThreshold(uint256 deviationThreshold_) public {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":2409:2452  int256 public rebaseFunctionLowerPercentage */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":1337:1364  IOracle public marketOracle */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":5555:5635  function setBaseCpi(uint256 baseCpi_) public {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":2507:2541  int256 public rebaseFunctionGrowth */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":9603:9858  function faucet(address payable receiver, uint amount) public {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":4269:4445  function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":1868:1888  uint256 public epoch */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":2458:2501  int256 public rebaseFunctionUpperPercentage */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":4162:4262  function setMarketOracle(IOracle marketOracle_) public {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":1448:1470  uint256 public baseCpi */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":1229:1253  IOracle public cpiOracle */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":2844:3784  function rebase() public {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":5869:6362  function initialize(... */\n    tag_19:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":1777:1810  uint256 public deviationThreshold */\n    tag_20:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CMMDPolicy.sol\":4451:4684  function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)... */\n    tag_21:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":4690:4923  function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)... */\n    tag_22:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/CMMDPolicy.sol\":6696:8007  function computeRebasePercentage(... */\n    tag_29:\n        /* \"contracts/CMMDPolicy.sol\":6854:6860  int256 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6872:6884  int256 delta */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":6903:6938  SafeMathInt.sub(normalizedRate,ONE) */\n      tag_97\n        /* \"contracts/CMMDPolicy.sol\":6919:6933  normalizedRate */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/CMMDPolicy.sol\":6903:6918  SafeMathInt.sub */\n      tag_100\n        /* \"contracts/CMMDPolicy.sol\":6903:6938  SafeMathInt.sub(normalizedRate,ONE) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/CMMDPolicy.sol\":6895:6938  delta = SafeMathInt.sub(normalizedRate,ONE) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7028:7043  int256 exponent */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7046:7096  SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE) */\n      tag_101\n        /* \"contracts/CMMDPolicy.sol\":7062:7091  SafeMathInt.mul(growth,delta) */\n      tag_102\n        /* \"contracts/CMMDPolicy.sol\":7078:7084  growth */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":7085:7090  delta */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":7062:7077  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7062:7091  SafeMathInt.mul(growth,delta) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_104\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_104:\n        /* \"contracts/CMMDPolicy.sol\":7046:7061  SafeMathInt.div */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":7046:7096  SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/CMMDPolicy.sol\":7028:7096  int256 exponent = SafeMathInt.div(SafeMathInt.mul(growth,delta),ONE) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7189:7213  SafeMathInt.mul(ONE,100) */\n      tag_106\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_107\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_107:\n        /* \"contracts/CMMDPolicy.sol\":7209:7212  100 */\n      0x64\n        /* \"contracts/CMMDPolicy.sol\":7189:7204  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7189:7213  SafeMathInt.mul(ONE,100) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/CMMDPolicy.sol\":7178:7186  exponent */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":7178:7213  exponent > SafeMathInt.mul(ONE,100) */\n      sgt\n        /* \"contracts/CMMDPolicy.sol\":7174:7275  if (exponent > SafeMathInt.mul(ONE,100)) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":7240:7264  SafeMathInt.mul(ONE,100) */\n      tag_109\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_110\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_110:\n        /* \"contracts/CMMDPolicy.sol\":7260:7263  100 */\n      0x64\n        /* \"contracts/CMMDPolicy.sol\":7240:7255  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7240:7264  SafeMathInt.mul(ONE,100) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/CMMDPolicy.sol\":7229:7264  exponent = SafeMathInt.mul(ONE,100) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7174:7275  if (exponent > SafeMathInt.mul(ONE,100)) {... */\n    tag_108:\n        /* \"contracts/CMMDPolicy.sol\":7299:7324  SafeMathInt.mul(ONE,-100) */\n      tag_111\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_112\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_112:\n        /* \"contracts/CMMDPolicy.sol\":7319:7323  -100 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\n        /* \"contracts/CMMDPolicy.sol\":7299:7314  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7299:7324  SafeMathInt.mul(ONE,-100) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/CMMDPolicy.sol\":7288:7296  exponent */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":7288:7324  exponent < SafeMathInt.mul(ONE,-100) */\n      slt\n        /* \"contracts/CMMDPolicy.sol\":7284:7387  if (exponent < SafeMathInt.mul(ONE,-100)) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":7351:7376  SafeMathInt.mul(ONE,-100) */\n      tag_114\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_115\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_115:\n        /* \"contracts/CMMDPolicy.sol\":7371:7375  -100 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\n        /* \"contracts/CMMDPolicy.sol\":7351:7366  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7351:7376  SafeMathInt.mul(ONE,-100) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/CMMDPolicy.sol\":7340:7376  exponent = SafeMathInt.mul(ONE,-100) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7284:7387  if (exponent < SafeMathInt.mul(ONE,-100)) {... */\n    tag_113:\n        /* \"contracts/CMMDPolicy.sol\":7397:7407  int256 pow */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7410:7445  SafeMathInt.twoPower(exponent, ONE) */\n      tag_116\n        /* \"contracts/CMMDPolicy.sol\":7431:7439  exponent */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_117\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_117:\n        /* \"contracts/CMMDPolicy.sol\":7410:7430  SafeMathInt.twoPower */\n      tag_118\n        /* \"contracts/CMMDPolicy.sol\":7410:7445  SafeMathInt.twoPower(exponent, ONE) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/CMMDPolicy.sol\":7397:7445  int256 pow = SafeMathInt.twoPower(exponent, ONE) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7486:7487  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7479:7482  pow */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":7479:7487  pow == 0 */\n      eq\n        /* \"contracts/CMMDPolicy.sol\":7475:7526  if (pow == 0) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":7510:7515  lower */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":7503:7515  return lower */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"contracts/CMMDPolicy.sol\":7475:7526  if (pow == 0) {... */\n    tag_119:\n        /* \"contracts/CMMDPolicy.sol\":7535:7551  int256 numerator */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7554:7582  SafeMathInt.sub(upper,lower) */\n      tag_120\n        /* \"contracts/CMMDPolicy.sol\":7570:7575  upper */\n      dup8\n        /* \"contracts/CMMDPolicy.sol\":7576:7581  lower */\n      dup10\n        /* \"contracts/CMMDPolicy.sol\":7554:7569  SafeMathInt.sub */\n      tag_100\n        /* \"contracts/CMMDPolicy.sol\":7554:7582  SafeMathInt.sub(upper,lower) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/CMMDPolicy.sol\":7535:7582  int256 numerator = SafeMathInt.sub(upper,lower) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7608:7627  int256 intermediate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7630:7679  SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower) */\n      tag_121\n        /* \"contracts/CMMDPolicy.sol\":7646:7672  SafeMathInt.mul(upper,ONE) */\n      tag_122\n        /* \"contracts/CMMDPolicy.sol\":7662:7667  upper */\n      dup10\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_123\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_123:\n        /* \"contracts/CMMDPolicy.sol\":7646:7661  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7646:7672  SafeMathInt.mul(upper,ONE) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/CMMDPolicy.sol\":7673:7678  lower */\n      dup11\n        /* \"contracts/CMMDPolicy.sol\":7630:7645  SafeMathInt.div */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":7630:7679  SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/CMMDPolicy.sol\":7608:7679  int256 intermediate = SafeMathInt.div(SafeMathInt.mul(upper,ONE),lower) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7704:7758  SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow) */\n      tag_124\n        /* \"contracts/CMMDPolicy.sol\":7720:7753  SafeMathInt.mul(intermediate,ONE) */\n      tag_125\n        /* \"contracts/CMMDPolicy.sol\":7736:7748  intermediate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_126\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_126:\n        /* \"contracts/CMMDPolicy.sol\":7720:7735  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7720:7753  SafeMathInt.mul(intermediate,ONE) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/CMMDPolicy.sol\":7754:7757  pow */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":7704:7719  SafeMathInt.div */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":7704:7758  SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/CMMDPolicy.sol\":7689:7758  intermediate = SafeMathInt.div(SafeMathInt.mul(intermediate,ONE),pow) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7768:7786  int256 denominator */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7789:7822  SafeMathInt.sub(ONE,intermediate) */\n      tag_127\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_128\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_128:\n        /* \"contracts/CMMDPolicy.sol\":7809:7821  intermediate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":7789:7804  SafeMathInt.sub */\n      tag_100\n        /* \"contracts/CMMDPolicy.sol\":7789:7822  SafeMathInt.sub(ONE,intermediate) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/CMMDPolicy.sol\":7768:7822  int256 denominator = SafeMathInt.sub(ONE,intermediate) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7872:7895  int256 rebasePercentage */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":7962:7967  lower */\n      dup11\n        /* \"contracts/CMMDPolicy.sol\":7899:7958  SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator) */\n      tag_129\n        /* \"contracts/CMMDPolicy.sol\":7915:7945  SafeMathInt.mul(numerator,ONE) */\n      tag_130\n        /* \"contracts/CMMDPolicy.sol\":7931:7940  numerator */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_131\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_131:\n        /* \"contracts/CMMDPolicy.sol\":7915:7930  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":7915:7945  SafeMathInt.mul(numerator,ONE) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/CMMDPolicy.sol\":7946:7957  denominator */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":7899:7914  SafeMathInt.div */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":7899:7958  SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/CMMDPolicy.sol\":7898:7967  (SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator)) + lower */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/CMMDPolicy.sol\":7872:7967  int256 rebasePercentage = (SafeMathInt.div(SafeMathInt.mul(numerator,ONE),denominator)) + lower */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":7984:8000  rebasePercentage */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":7977:8000  return rebasePercentage */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6696:8007  function computeRebasePercentage(... */\n    tag_96:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":3924:4012  function setCpiOracle(IOracle cpiOracle_) public {... */\n    tag_35:\n        /* \"contracts/CMMDPolicy.sol\":3995:4005  cpiOracle_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":3983:3992  cpiOracle */\n      0x03\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3983:4005  cpiOracle = cpiOracle_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3924:4012  function setCpiOracle(IOracle cpiOracle_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1135:1152  ICMMD public cmmd */\n    tag_37:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":5277:5401  function setDeviationThreshold(uint256 deviationThreshold_) public {... */\n    tag_43:\n        /* \"contracts/CMMDPolicy.sol\":5375:5394  deviationThreshold_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":5354:5372  deviationThreshold */\n      0x06\n        /* \"contracts/CMMDPolicy.sol\":5354:5394  deviationThreshold = deviationThreshold_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5277:5401  function setDeviationThreshold(uint256 deviationThreshold_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2409:2452  int256 public rebaseFunctionLowerPercentage */\n    tag_45:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1337:1364  IOracle public marketOracle */\n    tag_48:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":5555:5635  function setBaseCpi(uint256 baseCpi_) public {... */\n    tag_53:\n        /* \"contracts/CMMDPolicy.sol\":5620:5628  baseCpi_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":5610:5617  baseCpi */\n      0x05\n        /* \"contracts/CMMDPolicy.sol\":5610:5628  baseCpi = baseCpi_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5555:5635  function setBaseCpi(uint256 baseCpi_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2507:2541  int256 public rebaseFunctionGrowth */\n    tag_55:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":9603:9858  function faucet(address payable receiver, uint amount) public {... */\n    tag_60:\n        /* \"contracts/CMMDPolicy.sol\":9690:9691  1 */\n      0x01\n        /* \"contracts/CMMDPolicy.sol\":9675:9686  faucetCount */\n      0x00\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":9675:9691  faucetCount += 1 */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9701:9713  transactions */\n      0x01\n        /* \"contracts/CMMDPolicy.sol\":9719:9780  TransferStruct(msg.sender, receiver, amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":9734:9744  msg.sender */\n      caller\n        /* \"contracts/CMMDPolicy.sol\":9719:9780  TransferStruct(msg.sender, receiver, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CMMDPolicy.sol\":9746:9754  receiver */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":9719:9780  TransferStruct(msg.sender, receiver, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CMMDPolicy.sol\":9756:9762  amount */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":9719:9780  TransferStruct(msg.sender, receiver, amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CMMDPolicy.sol\":9764:9779  block.timestamp */\n      timestamp\n        /* \"contracts/CMMDPolicy.sol\":9719:9780  TransferStruct(msg.sender, receiver, amount, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9701:9781  transactions.push(TransferStruct(msg.sender, receiver, amount, block.timestamp)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9796:9851  Transfer(msg.sender, receiver, amount, block.timestamp) */\n      0x9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44\n        /* \"contracts/CMMDPolicy.sol\":9805:9815  msg.sender */\n      caller\n        /* \"contracts/CMMDPolicy.sol\":9817:9825  receiver */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":9827:9833  amount */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":9835:9850  block.timestamp */\n      timestamp\n        /* \"contracts/CMMDPolicy.sol\":9796:9851  Transfer(msg.sender, receiver, amount, block.timestamp) */\n      mload(0x40)\n      tag_141\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/CMMDPolicy.sol\":9603:9858  function faucet(address payable receiver, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4269:4445  function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {... */\n    tag_64:\n        /* \"contracts/CMMDPolicy.sol\":4382:4383  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4357:4378  rebaseFunctionGrowth_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":4357:4383  rebaseFunctionGrowth_ >= 0 */\n      slt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":4349:4384  require(rebaseFunctionGrowth_ >= 0) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \"contracts/CMMDPolicy.sol\":4417:4438  rebaseFunctionGrowth_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4394:4414  rebaseFunctionGrowth */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":4394:4438  rebaseFunctionGrowth = rebaseFunctionGrowth_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4269:4445  function setRebaseFunctionGrowth(int256 rebaseFunctionGrowth_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1868:1888  uint256 public epoch */\n    tag_66:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2458:2501  int256 public rebaseFunctionUpperPercentage */\n    tag_70:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4162:4262  function setMarketOracle(IOracle marketOracle_) public {... */\n    tag_74:\n        /* \"contracts/CMMDPolicy.sol\":4242:4255  marketOracle_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4227:4239  marketOracle */\n      0x04\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4227:4255  marketOracle = marketOracle_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4162:4262  function setMarketOracle(IOracle marketOracle_) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1448:1470  uint256 public baseCpi */\n    tag_76:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1229:1253  IOracle public cpiOracle */\n    tag_79:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":2844:3784  function rebase() public {... */\n    tag_82:\n        /* \"contracts/CMMDPolicy.sol\":2895:2896  1 */\n      0x01\n        /* \"contracts/CMMDPolicy.sol\":2887:2892  epoch */\n      sload(0x07)\n        /* \"contracts/CMMDPolicy.sol\":2887:2896  epoch + 1 */\n      tag_147\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_147:\n        /* \"contracts/CMMDPolicy.sol\":2879:2884  epoch */\n      0x07\n        /* \"contracts/CMMDPolicy.sol\":2879:2896  epoch = epoch + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2907:2918  uint256 cpi */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":2928:2941  bool cpiValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":2969:2978  cpiOracle */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":2969:2986  cpiOracle.getData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3bc5de30\n        /* \"contracts/CMMDPolicy.sol\":2969:2988  cpiOracle.getData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/CMMDPolicy.sol\":2951:2988  (cpi, cpiValid) = cpiOracle.getData() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3006:3014  cpiValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":2998:3015  require(cpiValid) */\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n        /* \"contracts/CMMDPolicy.sol\":3026:3044  uint256 targetRate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3047:3101  SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi)) */\n      tag_154\n        /* \"contracts/CMMDPolicy.sol\":3060:3090  SafeMath.mul(cpi,10**DECIMALS) */\n      tag_155\n        /* \"contracts/CMMDPolicy.sol\":3073:3076  cpi */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":3077:3079  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":3077:3089  10**DECIMALS */\n      tag_156\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_156:\n        /* \"contracts/CMMDPolicy.sol\":3060:3072  SafeMath.mul */\n      tag_157\n        /* \"contracts/CMMDPolicy.sol\":3060:3090  SafeMath.mul(cpi,10**DECIMALS) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/CMMDPolicy.sol\":3092:3099  baseCpi */\n      sload(0x05)\n        /* \"contracts/CMMDPolicy.sol\":3047:3059  SafeMath.div */\n      tag_158\n        /* \"contracts/CMMDPolicy.sol\":3047:3101  SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi)) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/CMMDPolicy.sol\":3026:3101  uint256 targetRate = SafeMath.div(SafeMath.mul(cpi,10**DECIMALS),(baseCpi)) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3112:3132  uint256 exchangeRate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3142:3156  bool rateValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":3194:3206  marketOracle */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3194:3214  marketOracle.getData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3bc5de30\n        /* \"contracts/CMMDPolicy.sol\":3194:3216  marketOracle.getData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_162:\n        /* \"contracts/CMMDPolicy.sol\":3166:3216  (exchangeRate, rateValid) = marketOracle.getData() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3234:3243  rateValid */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":3226:3244  require(rateValid) */\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2134:2136  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2134:2146  10**DECIMALS */\n      tag_164\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_164:\n        /* \"contracts/CMMDPolicy.sol\":2126:2131  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":2126:2146  10**6 * 10**DECIMALS */\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"contracts/CMMDPolicy.sol\":3259:3271  exchangeRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":3259:3282  exchangeRate > MAX_RATE */\n      gt\n        /* \"contracts/CMMDPolicy.sol\":3255:3332  if (exchangeRate > MAX_RATE) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2134:2136  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2134:2146  10**DECIMALS */\n      tag_168\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_168:\n        /* \"contracts/CMMDPolicy.sol\":2126:2131  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":2126:2146  10**6 * 10**DECIMALS */\n      tag_169\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_169:\n        /* \"contracts/CMMDPolicy.sol\":3298:3321  exchangeRate = MAX_RATE */\n      swap2\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3255:3332  if (exchangeRate > MAX_RATE) {... */\n    tag_167:\n        /* \"contracts/CMMDPolicy.sol\":3342:3360  int256 supplyDelta */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3363:3407  computeSupplyDelta(exchangeRate, targetRate) */\n      tag_170\n        /* \"contracts/CMMDPolicy.sol\":3382:3394  exchangeRate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":3396:3406  targetRate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":3363:3381  computeSupplyDelta */\n      tag_171\n        /* \"contracts/CMMDPolicy.sol\":3363:3407  computeSupplyDelta(exchangeRate, targetRate) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/CMMDPolicy.sol\":3342:3407  int256 supplyDelta = computeSupplyDelta(exchangeRate, targetRate) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3436:3437  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3422:3433  supplyDelta */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":3422:3437  supplyDelta > 0 */\n      sgt\n        /* \"contracts/CMMDPolicy.sol\":3422:3497  supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY */\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2134:2136  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2134:2146  10**DECIMALS */\n      tag_173\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_173:\n        /* \"contracts/CMMDPolicy.sol\":2126:2131  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":2126:2146  10**6 * 10**DECIMALS */\n      tag_174\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_174:\n        /* \"contracts/CMMDPolicy.sol\":2240:2256  type(int256).max */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CMMDPolicy.sol\":2232:2268  uint256(type(int256).max) / MAX_RATE */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/CMMDPolicy.sol\":3471:3482  supplyDelta */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":3441:3445  cmmd */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3441:3457  cmmd.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/CMMDPolicy.sol\":3441:3459  cmmd.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"contracts/CMMDPolicy.sol\":3441:3484  cmmd.totalSupply() + (uint256(supplyDelta)) */\n      tag_182\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_182:\n        /* \"contracts/CMMDPolicy.sol\":3441:3497  cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY */\n      gt\n        /* \"contracts/CMMDPolicy.sol\":3422:3497  supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY */\n    tag_172:\n        /* \"contracts/CMMDPolicy.sol\":3418:3579  if (supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":3548:3552  cmmd */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3548:3564  cmmd.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/CMMDPolicy.sol\":3548:3566  cmmd.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_187:\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2134:2136  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2134:2146  10**DECIMALS */\n      tag_188\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_188:\n        /* \"contracts/CMMDPolicy.sol\":2126:2131  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":2126:2146  10**6 * 10**DECIMALS */\n      tag_189\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_189:\n        /* \"contracts/CMMDPolicy.sol\":2240:2256  type(int256).max */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CMMDPolicy.sol\":2232:2268  uint256(type(int256).max) / MAX_RATE */\n      tag_190\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_190:\n        /* \"contracts/CMMDPolicy.sol\":3534:3567  MAX_SUPPLY - (cmmd.totalSupply()) */\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/CMMDPolicy.sol\":3513:3568  supplyDelta = int256(MAX_SUPPLY - (cmmd.totalSupply())) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":3418:3579  if (supplyDelta > 0 && cmmd.totalSupply() + (uint256(supplyDelta)) > MAX_SUPPLY) {... */\n    tag_183:\n        /* \"contracts/CMMDPolicy.sol\":3589:3614  uint256 supplyAfterRebase */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":3617:3621  cmmd */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":3617:3628  cmmd.rebase */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a43e23f\n        /* \"contracts/CMMDPolicy.sol\":3629:3634  epoch */\n      sload(0x07)\n        /* \"contracts/CMMDPolicy.sol\":3636:3647  supplyDelta */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":3617:3648  cmmd.rebase(epoch, supplyDelta) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_198:\n        /* \"contracts/CMMDPolicy.sol\":3589:3648  uint256 supplyAfterRebase = cmmd.rebase(epoch, supplyDelta) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2134:2136  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2134:2146  10**DECIMALS */\n      tag_199\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_199:\n        /* \"contracts/CMMDPolicy.sol\":2126:2131  10**6 */\n      0x0f4240\n        /* \"contracts/CMMDPolicy.sol\":2126:2146  10**6 * 10**DECIMALS */\n      tag_200\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_200:\n        /* \"contracts/CMMDPolicy.sol\":2240:2256  type(int256).max */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CMMDPolicy.sol\":2232:2268  uint256(type(int256).max) / MAX_RATE */\n      tag_201\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_201:\n        /* \"contracts/CMMDPolicy.sol\":3665:3682  supplyAfterRebase */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":3665:3696  supplyAfterRebase <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":3658:3697  assert(supplyAfterRebase <= MAX_SUPPLY) */\n      tag_202\n      jumpi\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n    tag_202:\n        /* \"contracts/CMMDPolicy.sol\":3722:3727  epoch */\n      sload(0x07)\n        /* \"contracts/CMMDPolicy.sol\":3712:3777  LogRebase(epoch, exchangeRate, cpi, supplyDelta, block.timestamp) */\n      0x41d948a7f29cc695f5d4b3ec147f766bffa165ddd317470fbe05c86d0a9c3e04\n        /* \"contracts/CMMDPolicy.sol\":3729:3741  exchangeRate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":3743:3746  cpi */\n      dup10\n        /* \"contracts/CMMDPolicy.sol\":3748:3759  supplyDelta */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":3761:3776  block.timestamp */\n      timestamp\n        /* \"contracts/CMMDPolicy.sol\":3712:3777  LogRebase(epoch, exchangeRate, cpi, supplyDelta, block.timestamp) */\n      mload(0x40)\n      tag_205\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CMMDPolicy.sol\":2869:3784  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":2844:3784  function rebase() public {... */\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":5869:6362  function initialize(... */\n    tag_86:\n        /* \"contracts/CMMDPolicy.sol\":6048:6049  2 */\n      0x02\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":6037:6049  DECIMALS - 2 */\n      tag_208\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_208:\n        /* \"contracts/CMMDPolicy.sol\":6032:6034  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":6032:6050  10**(DECIMALS - 2) */\n      tag_209\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_209:\n        /* \"contracts/CMMDPolicy.sol\":6028:6029  5 */\n      0x05\n        /* \"contracts/CMMDPolicy.sol\":6028:6050  5 * 10**(DECIMALS - 2) */\n      tag_210\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_210:\n        /* \"contracts/CMMDPolicy.sol\":6007:6025  deviationThreshold */\n      0x06\n        /* \"contracts/CMMDPolicy.sol\":6007:6050  deviationThreshold = 5 * 10**(DECIMALS - 2) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":6096:6098  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":6096:6108  10**DECIMALS */\n      tag_211\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_211:\n        /* \"contracts/CMMDPolicy.sol\":6091:6092  3 */\n      0x03\n        /* \"contracts/CMMDPolicy.sol\":6091:6109  3 * (10**DECIMALS) */\n      tag_212\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_212:\n        /* \"contracts/CMMDPolicy.sol\":6061:6081  rebaseFunctionGrowth */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":6061:6110  rebaseFunctionGrowth = int256(3 * (10**DECIMALS)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6181:6182  2 */\n      0x02\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":6170:6182  DECIMALS - 2 */\n      tag_213\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_213:\n        /* \"contracts/CMMDPolicy.sol\":6165:6167  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":6165:6183  10**(DECIMALS - 2) */\n      tag_214\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_214:\n        /* \"contracts/CMMDPolicy.sol\":6159:6161  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":6159:6184  10 * (10**(DECIMALS - 2)) */\n      tag_215\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_215:\n        /* \"contracts/CMMDPolicy.sol\":6120:6149  rebaseFunctionUpperPercentage */\n      0x09\n        /* \"contracts/CMMDPolicy.sol\":6120:6185  rebaseFunctionUpperPercentage = int256(10 * (10**(DECIMALS - 2))) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6272:6273  2 */\n      0x02\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":6261:6273  DECIMALS - 2 */\n      tag_216\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_216:\n        /* \"contracts/CMMDPolicy.sol\":6256:6258  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":6256:6274  10**(DECIMALS - 2) */\n      tag_217\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_217:\n        /* \"contracts/CMMDPolicy.sol\":6242:6245  -10 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6\n        /* \"contracts/CMMDPolicy.sol\":6241:6275  (-10) * int256(10**(DECIMALS - 2)) */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"contracts/CMMDPolicy.sol\":6202:6231  rebaseFunctionLowerPercentage */\n      0x08\n        /* \"contracts/CMMDPolicy.sol\":6202:6276  rebaseFunctionLowerPercentage = int256((-10) * int256(10**(DECIMALS - 2))) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6303:6304  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6295:6300  epoch */\n      0x07\n        /* \"contracts/CMMDPolicy.sol\":6295:6304  epoch = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6322:6327  cmmd_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":6315:6319  cmmd */\n      0x02\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":6315:6327  cmmd = cmmd_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":6347:6355  baseCpi_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":6337:6344  baseCpi */\n      0x05\n        /* \"contracts/CMMDPolicy.sol\":6337:6355  baseCpi = baseCpi_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":5869:6362  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":1777:1810  uint256 public deviationThreshold */\n    tag_88:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4451:4684  function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)... */\n    tag_92:\n        /* \"contracts/CMMDPolicy.sol\":4603:4604  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4569:4599  rebaseFunctionLowerPercentage_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":4569:4604  rebaseFunctionLowerPercentage_ <= 0 */\n      sgt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":4561:4605  require(rebaseFunctionLowerPercentage_ <= 0) */\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n        /* \"contracts/CMMDPolicy.sol\":4647:4677  rebaseFunctionLowerPercentage_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4615:4644  rebaseFunctionLowerPercentage */\n      0x08\n        /* \"contracts/CMMDPolicy.sol\":4615:4677  rebaseFunctionLowerPercentage = rebaseFunctionLowerPercentage_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4451:4684  function setRebaseFunctionLowerPercentage(int256 rebaseFunctionLowerPercentage_)... */\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":4690:4923  function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)... */\n    tag_95:\n        /* \"contracts/CMMDPolicy.sol\":4842:4843  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":4808:4838  rebaseFunctionUpperPercentage_ */\n      dup2\n        /* \"contracts/CMMDPolicy.sol\":4808:4843  rebaseFunctionUpperPercentage_ >= 0 */\n      slt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":4800:4844  require(rebaseFunctionUpperPercentage_ >= 0) */\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n        /* \"contracts/CMMDPolicy.sol\":4886:4916  rebaseFunctionUpperPercentage_ */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":4854:4883  rebaseFunctionUpperPercentage */\n      0x09\n        /* \"contracts/CMMDPolicy.sol\":4854:4916  rebaseFunctionUpperPercentage = rebaseFunctionUpperPercentage_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMMDPolicy.sol\":4690:4923  function setRebaseFunctionUpperPercentage(int256 rebaseFunctionUpperPercentage_)... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":2230:2402  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_100:\n        /* \"contracts/SafeMathInt.sol\":2286:2292  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2304:2312  int256 c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":2319:2320  b */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2315:2316  a */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":2315:2320  a - b */\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"contracts/SafeMathInt.sol\":2304:2320  int256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":2344:2345  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2339:2340  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2339:2345  b >= 0 */\n      slt\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2339:2355  b >= 0 && c <= a */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":2354:2355  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2349:2350  c */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2349:2355  c <= a */\n      sgt\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2339:2355  b >= 0 && c <= a */\n    tag_227:\n        /* \"contracts/SafeMathInt.sol\":2338:2376  (b >= 0 && c <= a) || (b < 0 && c > a) */\n      dup1\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":2365:2366  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2361:2362  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2361:2366  b < 0 */\n      slt\n        /* \"contracts/SafeMathInt.sol\":2361:2375  b < 0 && c > a */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":2374:2375  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2370:2371  c */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2370:2375  c > a */\n      sgt\n        /* \"contracts/SafeMathInt.sol\":2361:2375  b < 0 && c > a */\n    tag_229:\n        /* \"contracts/SafeMathInt.sol\":2338:2376  (b >= 0 && c <= a) || (b < 0 && c > a) */\n    tag_228:\n        /* \"contracts/SafeMathInt.sol\":2330:2377  require((b >= 0 && c <= a) || (b < 0 && c > a)) */\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n        /* \"contracts/SafeMathInt.sol\":2394:2395  c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":2387:2395  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":2230:2402  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":1503:1799  function mul(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_103:\n        /* \"contracts/SafeMathInt.sol\":1559:1565  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":1577:1585  int256 c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":1592:1593  b */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":1588:1589  a */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":1588:1593  a * b */\n      tag_232\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_232:\n        /* \"contracts/SafeMathInt.sol\":1577:1593  int256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":1675:1676  c */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":1675:1690  c != MIN_INT256 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":1675:1730  c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256) */\n      dup1\n      tag_233\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":1715:1716  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1715:1729  b & MIN_INT256 */\n      and\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":1695:1696  a */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":1695:1709  a & MIN_INT256 */\n      and\n        /* \"contracts/SafeMathInt.sol\":1694:1730  (a & MIN_INT256) != (b & MIN_INT256) */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":1675:1730  c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256) */\n    tag_233:\n        /* \"contracts/SafeMathInt.sol\":1667:1731  require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256)) */\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n        /* \"contracts/SafeMathInt.sol\":1755:1756  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":1750:1751  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1750:1756  b == 0 */\n      eq\n        /* \"contracts/SafeMathInt.sol\":1749:1773  (b == 0) || (c / b == a) */\n      dup1\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":1771:1772  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1766:1767  b */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":1762:1763  c */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":1762:1767  c / b */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/SafeMathInt.sol\":1762:1772  c / b == a */\n      eq\n        /* \"contracts/SafeMathInt.sol\":1749:1773  (b == 0) || (c / b == a) */\n    tag_235:\n        /* \"contracts/SafeMathInt.sol\":1741:1774  require((b == 0) || (c / b == a)) */\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n        /* \"contracts/SafeMathInt.sol\":1791:1792  c */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":1784:1792  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":1503:1799  function mul(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":1889:2142  function div(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_105:\n        /* \"contracts/SafeMathInt.sol\":1945:1951  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2035:2037  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/SafeMathInt.sol\":2030:2031  b */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2030:2037  b != -1 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2030:2056  b != -1 || a != MIN_INT256 */\n      dup1\n      tag_240\n      jumpi\n      pop\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":2041:2042  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2041:2056  a != MIN_INT256 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2030:2056  b != -1 || a != MIN_INT256 */\n    tag_240:\n        /* \"contracts/SafeMathInt.sol\":2022:2057  require(b != -1 || a != MIN_INT256) */\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n        /* \"contracts/SafeMathInt.sol\":2134:2135  b */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2130:2131  a */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":2130:2135  a / b */\n      tag_242\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_242:\n        /* \"contracts/SafeMathInt.sol\":2123:2135  return a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":1889:2142  function div(int256 a, int256 b) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":3202:4339  function twoPower(int256 exp, int256 one) internal pure returns (int256) {... */\n    tag_118:\n        /* \"contracts/SafeMathInt.sol\":3267:3273  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3285:3300  bool reciprocal */\n      dup1\n        /* \"contracts/SafeMathInt.sol\":3303:3308  false */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3285:3308  bool reciprocal = false */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3328:3329  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3322:3325  exp */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":3322:3329  exp < 0 */\n      slt\n        /* \"contracts/SafeMathInt.sol\":3318:3401  if (exp < 0) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":3358:3362  true */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":3345:3362  reciprocal = true */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3382:3390  abs(exp) */\n      tag_245\n        /* \"contracts/SafeMathInt.sol\":3386:3389  exp */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":3382:3385  abs */\n      tag_246\n        /* \"contracts/SafeMathInt.sol\":3382:3390  abs(exp) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/SafeMathInt.sol\":3376:3390  exp = abs(exp) */\n      swap4\n      pop\n        /* \"contracts/SafeMathInt.sol\":3318:3401  if (exp < 0) {... */\n    tag_244:\n        /* \"contracts/SafeMathInt.sol\":3490:3509  int256[5] memory ks */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SafeMathInt.sol\":3533:3552  1414213562373095049 */\n      0x13a04bbdfdc9be89\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3567:3586  1189207115002721067 */\n      0x1080e992061ab32b\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3600:3619  1090507732665257659 */\n      0x0f2243014e544ebb\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3633:3652  1044273782427413840 */\n      0x0e7e0178e9d6ed50\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeMathInt.sol\":3666:3685  1021897148654116678 */\n      0x0e2e820ade835f46\n        /* \"contracts/SafeMathInt.sol\":3490:3695  int256[5] memory ks = [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3705:3717  int256 whole */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3720:3733  div(exp, one) */\n      tag_247\n        /* \"contracts/SafeMathInt.sol\":3724:3727  exp */\n      dup7\n        /* \"contracts/SafeMathInt.sol\":3729:3732  one */\n      dup7\n        /* \"contracts/SafeMathInt.sol\":3720:3723  div */\n      tag_105\n        /* \"contracts/SafeMathInt.sol\":3720:3733  div(exp, one) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/SafeMathInt.sol\":3705:3733  int256 whole = div(exp, one) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3760:3763  100 */\n      0x64\n        /* \"contracts/SafeMathInt.sol\":3751:3756  whole */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":3751:3763  whole <= 100 */\n      sgt\n      iszero\n        /* \"contracts/SafeMathInt.sol\":3743:3764  require(whole <= 100) */\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n        /* \"contracts/SafeMathInt.sol\":3774:3787  int256 result */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3790:3836  mul(int256(uint256(1) << uint256(whole)), one) */\n      tag_249\n        /* \"contracts/SafeMathInt.sol\":3823:3828  whole */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":3809:3810  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":3801:3829  uint256(1) << uint256(whole) */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":3832:3835  one */\n      dup8\n        /* \"contracts/SafeMathInt.sol\":3790:3793  mul */\n      tag_103\n        /* \"contracts/SafeMathInt.sol\":3790:3836  mul(int256(uint256(1) << uint256(whole)), one) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/SafeMathInt.sol\":3774:3836  int256 result = mul(int256(uint256(1) << uint256(whole)), one) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3846:3862  int256 remaining */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3865:3890  sub(exp, mul(whole, one)) */\n      tag_250\n        /* \"contracts/SafeMathInt.sol\":3869:3872  exp */\n      dup9\n        /* \"contracts/SafeMathInt.sol\":3874:3889  mul(whole, one) */\n      tag_251\n        /* \"contracts/SafeMathInt.sol\":3878:3883  whole */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":3885:3888  one */\n      dup11\n        /* \"contracts/SafeMathInt.sol\":3874:3877  mul */\n      tag_103\n        /* \"contracts/SafeMathInt.sol\":3874:3889  mul(whole, one) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/SafeMathInt.sol\":3865:3868  sub */\n      tag_100\n        /* \"contracts/SafeMathInt.sol\":3865:3890  sub(exp, mul(whole, one)) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/SafeMathInt.sol\":3846:3890  int256 remaining = sub(exp, mul(whole, one)) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3901:3915  int256 current */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3918:3929  div(one, 2) */\n      tag_252\n        /* \"contracts/SafeMathInt.sol\":3922:3925  one */\n      dup9\n        /* \"contracts/SafeMathInt.sol\":3927:3928  2 */\n      0x02\n        /* \"contracts/SafeMathInt.sol\":3918:3921  div */\n      tag_105\n        /* \"contracts/SafeMathInt.sol\":3918:3929  div(one, 2) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/SafeMathInt.sol\":3901:3929  int256 current = div(one, 2) */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":3944:3953  uint256 i */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":3939:4225  for (uint256 i = 0; i < 5; i++) {... */\n    tag_253:\n        /* \"contracts/SafeMathInt.sol\":3963:3964  5 */\n      0x05\n        /* \"contracts/SafeMathInt.sol\":3959:3960  i */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":3959:3964  i < 5 */\n      lt\n        /* \"contracts/SafeMathInt.sol\":3939:4225  for (uint256 i = 0; i < 5; i++) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":4002:4009  current */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":3989:3998  remaining */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":3989:4009  remaining >= current */\n      slt\n        /* \"contracts/SafeMathInt.sol\":3985:4176  if (remaining >= current) {... */\n      tag_256\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":4041:4064  sub(remaining, current) */\n      tag_257\n        /* \"contracts/SafeMathInt.sol\":4045:4054  remaining */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":4056:4063  current */\n      dup4\n        /* \"contracts/SafeMathInt.sol\":4041:4044  sub */\n      tag_100\n        /* \"contracts/SafeMathInt.sol\":4041:4064  sub(remaining, current) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/SafeMathInt.sol\":4029:4064  remaining = sub(remaining, current) */\n      swap3\n      pop\n        /* \"contracts/SafeMathInt.sol\":4091:4122  div(mul(result, ks[i]), 10**18) */\n      tag_258\n        /* \"contracts/SafeMathInt.sol\":4095:4113  mul(result, ks[i]) */\n      tag_259\n        /* \"contracts/SafeMathInt.sol\":4099:4105  result */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":4107:4109  ks */\n      dup9\n        /* \"contracts/SafeMathInt.sol\":4110:4111  i */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":4107:4112  ks[i] */\n      0x05\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/SafeMathInt.sol\":4095:4098  mul */\n      tag_103\n        /* \"contracts/SafeMathInt.sol\":4095:4113  mul(result, ks[i]) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/SafeMathInt.sol\":4115:4121  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SafeMathInt.sol\":4091:4094  div */\n      tag_105\n        /* \"contracts/SafeMathInt.sol\":4091:4122  div(mul(result, ks[i]), 10**18) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/SafeMathInt.sol\":4082:4122  result = div(mul(result, ks[i]), 10**18) */\n      swap4\n      pop\n        /* \"contracts/SafeMathInt.sol\":3985:4176  if (remaining >= current) {... */\n    tag_256:\n        /* \"contracts/SafeMathInt.sol\":4199:4214  div(current, 2) */\n      tag_263\n        /* \"contracts/SafeMathInt.sol\":4203:4210  current */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":4212:4213  2 */\n      0x02\n        /* \"contracts/SafeMathInt.sol\":4199:4202  div */\n      tag_105\n        /* \"contracts/SafeMathInt.sol\":4199:4214  div(current, 2) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/SafeMathInt.sol\":4189:4214  current = div(current, 2) */\n      swap2\n      pop\n        /* \"contracts/SafeMathInt.sol\":3966:3969  i++ */\n      dup1\n      dup1\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":3939:4225  for (uint256 i = 0; i < 5; i++) {... */\n      jump(tag_253)\n    tag_254:\n      pop\n        /* \"contracts/SafeMathInt.sol\":4238:4248  reciprocal */\n      dup6\n        /* \"contracts/SafeMathInt.sol\":4234:4310  if (reciprocal) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":4273:4299  div(mul(one, one), result) */\n      tag_267\n        /* \"contracts/SafeMathInt.sol\":4277:4290  mul(one, one) */\n      tag_268\n        /* \"contracts/SafeMathInt.sol\":4281:4284  one */\n      dup10\n        /* \"contracts/SafeMathInt.sol\":4286:4289  one */\n      dup11\n        /* \"contracts/SafeMathInt.sol\":4277:4280  mul */\n      tag_103\n        /* \"contracts/SafeMathInt.sol\":4277:4290  mul(one, one) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/SafeMathInt.sol\":4292:4298  result */\n      dup5\n        /* \"contracts/SafeMathInt.sol\":4273:4276  div */\n      tag_105\n        /* \"contracts/SafeMathInt.sol\":4273:4299  div(mul(one, one), result) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/SafeMathInt.sol\":4264:4299  result = div(mul(one, one), result) */\n      swap3\n      pop\n        /* \"contracts/SafeMathInt.sol\":4234:4310  if (reciprocal) {... */\n    tag_266:\n        /* \"contracts/SafeMathInt.sol\":4326:4332  result */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":4319:4332  return result */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeMathInt.sol\":3202:4339  function twoPower(int256 exp, int256 one) internal pure returns (int256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":211:632  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/SafeMath.sol\":269:276  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":514:515  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":509:510  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":509:515  a == 0 */\n      eq\n        /* \"contracts/SafeMath.sol\":505:550  if (a == 0) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/SafeMath.sol\":538:539  0 */\n      0x00\n        /* \"contracts/SafeMath.sol\":531:539  return 0 */\n      swap1\n      pop\n      jump(tag_269)\n        /* \"contracts/SafeMath.sol\":505:550  if (a == 0) {... */\n    tag_270:\n        /* \"contracts/SafeMath.sol\":560:569  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":576:577  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":572:573  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":572:577  a * b */\n      tag_271\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_271:\n        /* \"contracts/SafeMath.sol\":560:577  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":604:605  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":599:600  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":595:596  c */\n      dup3\n        /* \"contracts/SafeMath.sol\":595:600  c / a */\n      tag_272\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_272:\n        /* \"contracts/SafeMath.sol\":595:605  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":587:606  require(c / a == b) */\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n        /* \"contracts/SafeMath.sol\":624:625  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":617:625  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":211:632  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_269:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":752:1040  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_158:\n        /* \"contracts/SafeMath.sol\":810:817  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":841:842  0 */\n      dup1\n        /* \"contracts/SafeMath.sol\":837:838  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":837:842  b > 0 */\n      gt\n        /* \"contracts/SafeMath.sol\":829:843  require(b > 0) */\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n        /* \"contracts/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":923:928  a / b */\n      tag_276\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_276:\n        /* \"contracts/SafeMath.sol\":911:928  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1032:1033  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1025:1033  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":752:1040  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":8149:8812  function computeSupplyDelta(uint256 rate, uint256 targetRate) internal view returns (int256) {... */\n    tag_171:\n        /* \"contracts/CMMDPolicy.sol\":8234:8240  int256 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8256:8298  withinDeviationThreshold(rate, targetRate) */\n      tag_278\n        /* \"contracts/CMMDPolicy.sol\":8281:8285  rate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":8287:8297  targetRate */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":8256:8280  withinDeviationThreshold */\n      tag_279\n        /* \"contracts/CMMDPolicy.sol\":8256:8298  withinDeviationThreshold(rate, targetRate) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/CMMDPolicy.sol\":8252:8333  if (withinDeviationThreshold(rate, targetRate)) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contracts/CMMDPolicy.sol\":8321:8322  0 */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8314:8322  return 0 */\n      swap1\n      pop\n      jump(tag_277)\n        /* \"contracts/CMMDPolicy.sol\":8252:8333  if (withinDeviationThreshold(rate, targetRate)) {... */\n    tag_280:\n        /* \"contracts/CMMDPolicy.sol\":8342:8365  int256 targetRateSigned */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8375:8385  targetRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":8342:8386  int256 targetRateSigned = int256(targetRate) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8396:8417  int256 normalizedRate */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8420:8487  SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned) */\n      tag_281\n        /* \"contracts/CMMDPolicy.sol\":8436:8469  SafeMathInt.mul(int256(rate),ONE) */\n      tag_282\n        /* \"contracts/CMMDPolicy.sol\":8459:8463  rate */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_283\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_283:\n        /* \"contracts/CMMDPolicy.sol\":8436:8451  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":8436:8469  SafeMathInt.mul(int256(rate),ONE) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/CMMDPolicy.sol\":8470:8486  targetRateSigned */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":8420:8435  SafeMathInt.div */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":8420:8487  SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/CMMDPolicy.sol\":8396:8487  int256 normalizedRate = SafeMathInt.div(SafeMathInt.mul(int256(rate),ONE),targetRateSigned) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8497:8520  int256 rebasePercentage */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":8523:8704  computeRebasePercentage(... */\n      tag_284\n        /* \"contracts/CMMDPolicy.sol\":8560:8574  normalizedRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":8588:8617  rebaseFunctionLowerPercentage */\n      sload(0x08)\n        /* \"contracts/CMMDPolicy.sol\":8631:8660  rebaseFunctionUpperPercentage */\n      sload(0x09)\n        /* \"contracts/CMMDPolicy.sol\":8674:8694  rebaseFunctionGrowth */\n      sload(0x0a)\n        /* \"contracts/CMMDPolicy.sol\":8523:8546  computeRebasePercentage */\n      tag_29\n        /* \"contracts/CMMDPolicy.sol\":8523:8704  computeRebasePercentage(... */\n      jump\t// in\n    tag_284:\n        /* \"contracts/CMMDPolicy.sol\":8497:8704  int256 rebasePercentage = computeRebasePercentage(... */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8722:8805  SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE)) */\n      tag_285\n        /* \"contracts/CMMDPolicy.sol\":8738:8798  SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage) */\n      tag_286\n        /* \"contracts/CMMDPolicy.sol\":8761:8765  cmmd */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CMMDPolicy.sol\":8761:8777  cmmd.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/CMMDPolicy.sol\":8761:8779  cmmd.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_287:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_289\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_289:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_290\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_290:\n        /* \"contracts/CMMDPolicy.sol\":8781:8797  rebasePercentage */\n      dup4\n        /* \"contracts/CMMDPolicy.sol\":8738:8753  SafeMathInt.mul */\n      tag_103\n        /* \"contracts/CMMDPolicy.sol\":8738:8798  SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":2585:2587  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":2585:2597  10**DECIMALS */\n      tag_291\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_291:\n        /* \"contracts/CMMDPolicy.sol\":8722:8737  SafeMathInt.div */\n      tag_105\n        /* \"contracts/CMMDPolicy.sol\":8722:8805  SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE)) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/CMMDPolicy.sol\":8715:8805  return SafeMathInt.div(SafeMathInt.mul(int256(cmmd.totalSupply()),rebasePercentage),(ONE)) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":8149:8812  function computeSupplyDelta(uint256 rate, uint256 targetRate) internal view returns (int256) {... */\n    tag_277:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMathInt.sol\":2742:2868  function abs(int256 a) internal pure returns (int256) {... */\n    tag_246:\n        /* \"contracts/SafeMathInt.sol\":2788:2794  int256 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":1348:1351  255 */\n      0xff\n        /* \"contracts/SafeMathInt.sol\":1342:1343  1 */\n      0x01\n        /* \"contracts/SafeMathInt.sol\":1335:1351  int256(1) << 255 */\n      swap1\n      shl\n        /* \"contracts/SafeMathInt.sol\":2814:2815  a */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2814:2829  a != MIN_INT256 */\n      eq\n      iszero\n        /* \"contracts/SafeMathInt.sol\":2806:2830  require(a != MIN_INT256) */\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n        /* \"contracts/SafeMathInt.sol\":2851:2852  0 */\n      0x00\n        /* \"contracts/SafeMathInt.sol\":2847:2848  a */\n      dup3\n        /* \"contracts/SafeMathInt.sol\":2847:2852  a < 0 */\n      slt\n        /* \"contracts/SafeMathInt.sol\":2847:2861  a < 0 ? -a : a */\n      tag_294\n      jumpi\n        /* \"contracts/SafeMathInt.sol\":2860:2861  a */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2847:2861  a < 0 ? -a : a */\n      jump(tag_295)\n    tag_294:\n        /* \"contracts/SafeMathInt.sol\":2856:2857  a */\n      dup2\n        /* \"contracts/SafeMathInt.sol\":2855:2857  -a */\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"contracts/SafeMathInt.sol\":2847:2861  a < 0 ? -a : a */\n    tag_295:\n        /* \"contracts/SafeMathInt.sol\":2840:2861  return a < 0 ? -a : a */\n      swap1\n      pop\n        /* \"contracts/SafeMathInt.sol\":2742:2868  function abs(int256 a) internal pure returns (int256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CMMDPolicy.sol\":9137:9597  function withinDeviationThreshold(uint256 rate, uint256 targetRate)... */\n    tag_279:\n        /* \"contracts/CMMDPolicy.sol\":9252:9256  bool */\n      0x00\n        /* \"contracts/CMMDPolicy.sol\":9272:9306  uint256 absoluteDeviationThreshold */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":9309:9379  SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS) */\n      tag_299\n        /* \"contracts/CMMDPolicy.sol\":9322:9365  SafeMath.mul(targetRate,deviationThreshold) */\n      tag_300\n        /* \"contracts/CMMDPolicy.sol\":9335:9345  targetRate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":9346:9364  deviationThreshold */\n      sload(0x06)\n        /* \"contracts/CMMDPolicy.sol\":9322:9334  SafeMath.mul */\n      tag_157\n        /* \"contracts/CMMDPolicy.sol\":9322:9365  SafeMath.mul(targetRate,deviationThreshold) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/CMMDPolicy.sol\":1931:1933  18 */\n      0x12\n        /* \"contracts/CMMDPolicy.sol\":9366:9368  10 */\n      0x0a\n        /* \"contracts/CMMDPolicy.sol\":9366:9378  10**DECIMALS */\n      tag_301\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_301:\n        /* \"contracts/CMMDPolicy.sol\":9309:9321  SafeMath.div */\n      tag_158\n        /* \"contracts/CMMDPolicy.sol\":9309:9379  SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/CMMDPolicy.sol\":9272:9379  uint256 absoluteDeviationThreshold = SafeMath.div(SafeMath.mul(targetRate,deviationThreshold),10**DECIMALS) */\n      swap1\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9420:9430  targetRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":9412:9416  rate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":9412:9430  rate >= targetRate */\n      lt\n      iszero\n        /* \"contracts/CMMDPolicy.sol\":9412:9492  rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9466:9492  absoluteDeviationThreshold */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":9434:9463  SafeMath.sub(rate,targetRate) */\n      tag_303\n        /* \"contracts/CMMDPolicy.sol\":9447:9451  rate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":9452:9462  targetRate */\n      dup6\n        /* \"contracts/CMMDPolicy.sol\":9434:9446  SafeMath.sub */\n      tag_304\n        /* \"contracts/CMMDPolicy.sol\":9434:9463  SafeMath.sub(rate,targetRate) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/CMMDPolicy.sol\":9434:9492  SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold */\n      lt\n        /* \"contracts/CMMDPolicy.sol\":9412:9492  rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold */\n    tag_302:\n        /* \"contracts/CMMDPolicy.sol\":9411:9590  (rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold) ||... */\n      dup1\n      tag_305\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9517:9527  targetRate */\n      dup3\n        /* \"contracts/CMMDPolicy.sol\":9510:9514  rate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":9510:9527  rate < targetRate */\n      lt\n        /* \"contracts/CMMDPolicy.sol\":9510:9589  rate < targetRate && SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold */\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9563:9589  absoluteDeviationThreshold */\n      dup1\n        /* \"contracts/CMMDPolicy.sol\":9531:9560  SafeMath.sub(targetRate,rate) */\n      tag_307\n        /* \"contracts/CMMDPolicy.sol\":9544:9554  targetRate */\n      dup5\n        /* \"contracts/CMMDPolicy.sol\":9555:9559  rate */\n      dup7\n        /* \"contracts/CMMDPolicy.sol\":9531:9543  SafeMath.sub */\n      tag_304\n        /* \"contracts/CMMDPolicy.sol\":9531:9560  SafeMath.sub(targetRate,rate) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/CMMDPolicy.sol\":9531:9589  SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold */\n      lt\n        /* \"contracts/CMMDPolicy.sol\":9510:9589  rate < targetRate && SafeMath.sub(targetRate,rate) < absoluteDeviationThreshold */\n    tag_306:\n        /* \"contracts/CMMDPolicy.sol\":9411:9590  (rate >= targetRate && SafeMath.sub(rate,targetRate) < absoluteDeviationThreshold) ||... */\n    tag_305:\n        /* \"contracts/CMMDPolicy.sol\":9392:9590  return... */\n      swap2\n      pop\n      pop\n        /* \"contracts/CMMDPolicy.sol\":9137:9597  function withinDeviationThreshold(uint256 rate, uint256 targetRate)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1163:1308  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_304:\n        /* \"contracts/SafeMath.sol\":1221:1228  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1253:1254  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":1248:1249  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":1248:1254  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1240:1255  require(b <= a) */\n      tag_309\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_309:\n        /* \"contracts/SafeMath.sol\":1265:1274  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1281:1282  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":1277:1278  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":1277:1282  a - b */\n      tag_310\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_310:\n        /* \"contracts/SafeMath.sol\":1265:1282  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1300:1301  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1293:1301  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeMath.sol\":1163:1308  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_312:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_314\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:305   */\n    tag_316:\n        /* \"#utility.yul\":222:227   */\n      0x00\n        /* \"#utility.yul\":253:259   */\n      dup2\n        /* \"#utility.yul\":247:260   */\n      mload\n        /* \"#utility.yul\":238:260   */\n      swap1\n      pop\n        /* \"#utility.yul\":269:299   */\n      tag_318\n        /* \"#utility.yul\":293:298   */\n      dup2\n        /* \"#utility.yul\":269:299   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":168:305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":311:474   */\n    tag_320:\n        /* \"#utility.yul\":369:374   */\n      0x00\n        /* \"#utility.yul\":407:413   */\n      dup2\n        /* \"#utility.yul\":394:414   */\n      calldataload\n        /* \"#utility.yul\":385:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":423:468   */\n      tag_322\n        /* \"#utility.yul\":462:467   */\n      dup2\n        /* \"#utility.yul\":423:468   */\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":311:474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":480:647   */\n    tag_324:\n        /* \"#utility.yul\":540:545   */\n      0x00\n        /* \"#utility.yul\":578:584   */\n      dup2\n        /* \"#utility.yul\":565:585   */\n      calldataload\n        /* \"#utility.yul\":556:585   */\n      swap1\n      pop\n        /* \"#utility.yul\":594:641   */\n      tag_326\n        /* \"#utility.yul\":635:640   */\n      dup2\n        /* \"#utility.yul\":594:641   */\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":480:647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:790   */\n    tag_328:\n        /* \"#utility.yul\":698:703   */\n      0x00\n        /* \"#utility.yul\":736:742   */\n      dup2\n        /* \"#utility.yul\":723:743   */\n      calldataload\n        /* \"#utility.yul\":714:743   */\n      swap1\n      pop\n        /* \"#utility.yul\":752:784   */\n      tag_330\n        /* \"#utility.yul\":778:783   */\n      dup2\n        /* \"#utility.yul\":752:784   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":653:790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:935   */\n    tag_332:\n        /* \"#utility.yul\":842:847   */\n      0x00\n        /* \"#utility.yul\":880:886   */\n      dup2\n        /* \"#utility.yul\":867:887   */\n      calldataload\n        /* \"#utility.yul\":858:887   */\n      swap1\n      pop\n        /* \"#utility.yul\":896:929   */\n      tag_334\n        /* \"#utility.yul\":923:928   */\n      dup2\n        /* \"#utility.yul\":896:929   */\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":796:935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:1084   */\n    tag_336:\n        /* \"#utility.yul\":998:1003   */\n      0x00\n        /* \"#utility.yul\":1029:1035   */\n      dup2\n        /* \"#utility.yul\":1023:1036   */\n      mload\n        /* \"#utility.yul\":1014:1036   */\n      swap1\n      pop\n        /* \"#utility.yul\":1045:1078   */\n      tag_338\n        /* \"#utility.yul\":1072:1077   */\n      dup2\n        /* \"#utility.yul\":1045:1078   */\n      tag_335\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":941:1084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1090:1580   */\n    tag_59:\n        /* \"#utility.yul\":1166:1172   */\n      0x00\n        /* \"#utility.yul\":1174:1180   */\n      dup1\n        /* \"#utility.yul\":1223:1225   */\n      0x40\n        /* \"#utility.yul\":1211:1220   */\n      dup4\n        /* \"#utility.yul\":1202:1209   */\n      dup6\n        /* \"#utility.yul\":1198:1221   */\n      sub\n        /* \"#utility.yul\":1194:1226   */\n      slt\n        /* \"#utility.yul\":1191:1310   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":1229:1308   */\n      tag_341\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1191:1310   */\n    tag_340:\n        /* \"#utility.yul\":1349:1350   */\n      0x00\n        /* \"#utility.yul\":1374:1435   */\n      tag_343\n        /* \"#utility.yul\":1427:1434   */\n      dup6\n        /* \"#utility.yul\":1418:1424   */\n      dup3\n        /* \"#utility.yul\":1407:1416   */\n      dup7\n        /* \"#utility.yul\":1403:1425   */\n      add\n        /* \"#utility.yul\":1374:1435   */\n      tag_312\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1364:1435   */\n      swap3\n      pop\n        /* \"#utility.yul\":1320:1445   */\n      pop\n        /* \"#utility.yul\":1484:1486   */\n      0x20\n        /* \"#utility.yul\":1510:1563   */\n      tag_344\n        /* \"#utility.yul\":1555:1562   */\n      dup6\n        /* \"#utility.yul\":1546:1552   */\n      dup3\n        /* \"#utility.yul\":1535:1544   */\n      dup7\n        /* \"#utility.yul\":1531:1553   */\n      add\n        /* \"#utility.yul\":1510:1563   */\n      tag_332\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1500:1563   */\n      swap2\n      pop\n        /* \"#utility.yul\":1455:1573   */\n      pop\n        /* \"#utility.yul\":1090:1580   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1586:2084   */\n    tag_85:\n        /* \"#utility.yul\":1666:1672   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup1\n        /* \"#utility.yul\":1723:1725   */\n      0x40\n        /* \"#utility.yul\":1711:1720   */\n      dup4\n        /* \"#utility.yul\":1702:1709   */\n      dup6\n        /* \"#utility.yul\":1698:1721   */\n      sub\n        /* \"#utility.yul\":1694:1726   */\n      slt\n        /* \"#utility.yul\":1691:1810   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":1729:1808   */\n      tag_347\n      tag_342\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1691:1810   */\n    tag_346:\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1874:1939   */\n      tag_348\n        /* \"#utility.yul\":1931:1938   */\n      dup6\n        /* \"#utility.yul\":1922:1928   */\n      dup3\n        /* \"#utility.yul\":1911:1920   */\n      dup7\n        /* \"#utility.yul\":1907:1929   */\n      add\n        /* \"#utility.yul\":1874:1939   */\n      tag_320\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1864:1939   */\n      swap3\n      pop\n        /* \"#utility.yul\":1820:1949   */\n      pop\n        /* \"#utility.yul\":1988:1990   */\n      0x20\n        /* \"#utility.yul\":2014:2067   */\n      tag_349\n        /* \"#utility.yul\":2059:2066   */\n      dup6\n        /* \"#utility.yul\":2050:2056   */\n      dup3\n        /* \"#utility.yul\":2039:2048   */\n      dup7\n        /* \"#utility.yul\":2035:2057   */\n      add\n        /* \"#utility.yul\":2014:2067   */\n      tag_332\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2004:2067   */\n      swap2\n      pop\n        /* \"#utility.yul\":1959:2077   */\n      pop\n        /* \"#utility.yul\":1586:2084   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2090:2447   */\n    tag_34:\n        /* \"#utility.yul\":2163:2169   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup3\n        /* \"#utility.yul\":2191:2198   */\n      dup5\n        /* \"#utility.yul\":2187:2210   */\n      sub\n        /* \"#utility.yul\":2183:2215   */\n      slt\n        /* \"#utility.yul\":2180:2299   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":2218:2297   */\n      tag_352\n      tag_342\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2180:2299   */\n    tag_351:\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2363:2430   */\n      tag_353\n        /* \"#utility.yul\":2422:2429   */\n      dup5\n        /* \"#utility.yul\":2413:2419   */\n      dup3\n        /* \"#utility.yul\":2402:2411   */\n      dup6\n        /* \"#utility.yul\":2398:2420   */\n      add\n        /* \"#utility.yul\":2363:2430   */\n      tag_324\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2353:2430   */\n      swap2\n      pop\n        /* \"#utility.yul\":2309:2440   */\n      pop\n        /* \"#utility.yul\":2090:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_63:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_356\n      tag_342\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2528:2647   */\n    tag_355:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_357\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_328\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:3543   */\n    tag_28:\n        /* \"#utility.yul\":2868:2874   */\n      0x00\n        /* \"#utility.yul\":2876:2882   */\n      dup1\n        /* \"#utility.yul\":2884:2890   */\n      0x00\n        /* \"#utility.yul\":2892:2898   */\n      dup1\n        /* \"#utility.yul\":2941:2944   */\n      0x80\n        /* \"#utility.yul\":2929:2938   */\n      dup6\n        /* \"#utility.yul\":2920:2927   */\n      dup8\n        /* \"#utility.yul\":2916:2939   */\n      sub\n        /* \"#utility.yul\":2912:2945   */\n      slt\n        /* \"#utility.yul\":2909:3029   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2948:3027   */\n      tag_360\n      tag_342\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2909:3029   */\n    tag_359:\n        /* \"#utility.yul\":3068:3069   */\n      0x00\n        /* \"#utility.yul\":3093:3145   */\n      tag_361\n        /* \"#utility.yul\":3137:3144   */\n      dup8\n        /* \"#utility.yul\":3128:3134   */\n      dup3\n        /* \"#utility.yul\":3117:3126   */\n      dup9\n        /* \"#utility.yul\":3113:3135   */\n      add\n        /* \"#utility.yul\":3093:3145   */\n      tag_328\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3083:3145   */\n      swap5\n      pop\n        /* \"#utility.yul\":3039:3155   */\n      pop\n        /* \"#utility.yul\":3194:3196   */\n      0x20\n        /* \"#utility.yul\":3220:3272   */\n      tag_362\n        /* \"#utility.yul\":3264:3271   */\n      dup8\n        /* \"#utility.yul\":3255:3261   */\n      dup3\n        /* \"#utility.yul\":3244:3253   */\n      dup9\n        /* \"#utility.yul\":3240:3262   */\n      add\n        /* \"#utility.yul\":3220:3272   */\n      tag_328\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3210:3272   */\n      swap4\n      pop\n        /* \"#utility.yul\":3165:3282   */\n      pop\n        /* \"#utility.yul\":3321:3323   */\n      0x40\n        /* \"#utility.yul\":3347:3399   */\n      tag_363\n        /* \"#utility.yul\":3391:3398   */\n      dup8\n        /* \"#utility.yul\":3382:3388   */\n      dup3\n        /* \"#utility.yul\":3371:3380   */\n      dup9\n        /* \"#utility.yul\":3367:3389   */\n      add\n        /* \"#utility.yul\":3347:3399   */\n      tag_328\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3337:3399   */\n      swap3\n      pop\n        /* \"#utility.yul\":3292:3409   */\n      pop\n        /* \"#utility.yul\":3448:3450   */\n      0x60\n        /* \"#utility.yul\":3474:3526   */\n      tag_364\n        /* \"#utility.yul\":3518:3525   */\n      dup8\n        /* \"#utility.yul\":3509:3515   */\n      dup3\n        /* \"#utility.yul\":3498:3507   */\n      dup9\n        /* \"#utility.yul\":3494:3516   */\n      add\n        /* \"#utility.yul\":3474:3526   */\n      tag_328\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3464:3526   */\n      swap2\n      pop\n        /* \"#utility.yul\":3419:3536   */\n      pop\n        /* \"#utility.yul\":2786:3543   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3549:3878   */\n    tag_42:\n        /* \"#utility.yul\":3608:3614   */\n      0x00\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3645:3654   */\n      dup3\n        /* \"#utility.yul\":3636:3643   */\n      dup5\n        /* \"#utility.yul\":3632:3655   */\n      sub\n        /* \"#utility.yul\":3628:3660   */\n      slt\n        /* \"#utility.yul\":3625:3744   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3663:3742   */\n      tag_367\n      tag_342\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3625:3744   */\n    tag_366:\n        /* \"#utility.yul\":3783:3784   */\n      0x00\n        /* \"#utility.yul\":3808:3861   */\n      tag_368\n        /* \"#utility.yul\":3853:3860   */\n      dup5\n        /* \"#utility.yul\":3844:3850   */\n      dup3\n        /* \"#utility.yul\":3833:3842   */\n      dup6\n        /* \"#utility.yul\":3829:3851   */\n      add\n        /* \"#utility.yul\":3808:3861   */\n      tag_332\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3798:3861   */\n      swap2\n      pop\n        /* \"#utility.yul\":3754:3871   */\n      pop\n        /* \"#utility.yul\":3549:3878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3884:4235   */\n    tag_181:\n        /* \"#utility.yul\":3954:3960   */\n      0x00\n        /* \"#utility.yul\":4003:4005   */\n      0x20\n        /* \"#utility.yul\":3991:4000   */\n      dup3\n        /* \"#utility.yul\":3982:3989   */\n      dup5\n        /* \"#utility.yul\":3978:4001   */\n      sub\n        /* \"#utility.yul\":3974:4006   */\n      slt\n        /* \"#utility.yul\":3971:4090   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4009:4088   */\n      tag_371\n      tag_342\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3971:4090   */\n    tag_370:\n        /* \"#utility.yul\":4129:4130   */\n      0x00\n        /* \"#utility.yul\":4154:4218   */\n      tag_372\n        /* \"#utility.yul\":4210:4217   */\n      dup5\n        /* \"#utility.yul\":4201:4207   */\n      dup3\n        /* \"#utility.yul\":4190:4199   */\n      dup6\n        /* \"#utility.yul\":4186:4208   */\n      add\n        /* \"#utility.yul\":4154:4218   */\n      tag_336\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4144:4218   */\n      swap2\n      pop\n        /* \"#utility.yul\":4100:4228   */\n      pop\n        /* \"#utility.yul\":3884:4235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4241:4742   */\n    tag_152:\n        /* \"#utility.yul\":4317:4323   */\n      0x00\n        /* \"#utility.yul\":4325:4331   */\n      dup1\n        /* \"#utility.yul\":4374:4376   */\n      0x40\n        /* \"#utility.yul\":4362:4371   */\n      dup4\n        /* \"#utility.yul\":4353:4360   */\n      dup6\n        /* \"#utility.yul\":4349:4372   */\n      sub\n        /* \"#utility.yul\":4345:4377   */\n      slt\n        /* \"#utility.yul\":4342:4461   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":4380:4459   */\n      tag_375\n      tag_342\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4342:4461   */\n    tag_374:\n        /* \"#utility.yul\":4500:4501   */\n      0x00\n        /* \"#utility.yul\":4525:4589   */\n      tag_376\n        /* \"#utility.yul\":4581:4588   */\n      dup6\n        /* \"#utility.yul\":4572:4578   */\n      dup3\n        /* \"#utility.yul\":4561:4570   */\n      dup7\n        /* \"#utility.yul\":4557:4579   */\n      add\n        /* \"#utility.yul\":4525:4589   */\n      tag_336\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4515:4589   */\n      swap3\n      pop\n        /* \"#utility.yul\":4471:4599   */\n      pop\n        /* \"#utility.yul\":4638:4640   */\n      0x20\n        /* \"#utility.yul\":4664:4725   */\n      tag_377\n        /* \"#utility.yul\":4717:4724   */\n      dup6\n        /* \"#utility.yul\":4708:4714   */\n      dup3\n        /* \"#utility.yul\":4697:4706   */\n      dup7\n        /* \"#utility.yul\":4693:4715   */\n      add\n        /* \"#utility.yul\":4664:4725   */\n      tag_316\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4654:4725   */\n      swap2\n      pop\n        /* \"#utility.yul\":4609:4735   */\n      pop\n        /* \"#utility.yul\":4241:4742   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4748:4895   */\n    tag_378:\n        /* \"#utility.yul\":4843:4888   */\n      tag_380\n        /* \"#utility.yul\":4882:4887   */\n      dup2\n        /* \"#utility.yul\":4843:4888   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4889   */\n      mstore\n        /* \"#utility.yul\":4748:4895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5019   */\n    tag_382:\n        /* \"#utility.yul\":4988:5012   */\n      tag_384\n        /* \"#utility.yul\":5006:5011   */\n      dup2\n        /* \"#utility.yul\":4988:5012   */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4983:4986   */\n      dup3\n        /* \"#utility.yul\":4976:5013   */\n      mstore\n        /* \"#utility.yul\":4901:5019   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5025:5180   */\n    tag_386:\n        /* \"#utility.yul\":5124:5173   */\n      tag_388\n        /* \"#utility.yul\":5167:5172   */\n      dup2\n        /* \"#utility.yul\":5124:5173   */\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5119:5122   */\n      dup3\n        /* \"#utility.yul\":5112:5174   */\n      mstore\n        /* \"#utility.yul\":5025:5180   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5186:5345   */\n    tag_390:\n        /* \"#utility.yul\":5287:5338   */\n      tag_392\n        /* \"#utility.yul\":5332:5337   */\n      dup2\n        /* \"#utility.yul\":5287:5338   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5282:5285   */\n      dup3\n        /* \"#utility.yul\":5275:5339   */\n      mstore\n        /* \"#utility.yul\":5186:5345   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5351:5466   */\n    tag_394:\n        /* \"#utility.yul\":5436:5459   */\n      tag_396\n        /* \"#utility.yul\":5453:5458   */\n      dup2\n        /* \"#utility.yul\":5436:5459   */\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5431:5434   */\n      dup3\n        /* \"#utility.yul\":5424:5460   */\n      mstore\n        /* \"#utility.yul\":5351:5466   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5472:5590   */\n    tag_398:\n        /* \"#utility.yul\":5559:5583   */\n      tag_400\n        /* \"#utility.yul\":5577:5582   */\n      dup2\n        /* \"#utility.yul\":5559:5583   */\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5554:5557   */\n      dup3\n        /* \"#utility.yul\":5547:5584   */\n      mstore\n        /* \"#utility.yul\":5472:5590   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:6165   */\n    tag_142:\n        /* \"#utility.yul\":5781:5785   */\n      0x00\n        /* \"#utility.yul\":5819:5822   */\n      0x80\n        /* \"#utility.yul\":5808:5817   */\n      dup3\n        /* \"#utility.yul\":5804:5823   */\n      add\n        /* \"#utility.yul\":5796:5823   */\n      swap1\n      pop\n        /* \"#utility.yul\":5833:5904   */\n      tag_403\n        /* \"#utility.yul\":5901:5902   */\n      0x00\n        /* \"#utility.yul\":5890:5899   */\n      dup4\n        /* \"#utility.yul\":5886:5903   */\n      add\n        /* \"#utility.yul\":5877:5883   */\n      dup8\n        /* \"#utility.yul\":5833:5904   */\n      tag_382\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5914:5994   */\n      tag_404\n        /* \"#utility.yul\":5990:5992   */\n      0x20\n        /* \"#utility.yul\":5979:5988   */\n      dup4\n        /* \"#utility.yul\":5975:5993   */\n      add\n        /* \"#utility.yul\":5966:5972   */\n      dup7\n        /* \"#utility.yul\":5914:5994   */\n      tag_378\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6004:6076   */\n      tag_405\n        /* \"#utility.yul\":6072:6074   */\n      0x40\n        /* \"#utility.yul\":6061:6070   */\n      dup4\n        /* \"#utility.yul\":6057:6075   */\n      add\n        /* \"#utility.yul\":6048:6054   */\n      dup6\n        /* \"#utility.yul\":6004:6076   */\n      tag_398\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6086:6158   */\n      tag_406\n        /* \"#utility.yul\":6154:6156   */\n      0x60\n        /* \"#utility.yul\":6143:6152   */\n      dup4\n        /* \"#utility.yul\":6139:6157   */\n      add\n        /* \"#utility.yul\":6130:6136   */\n      dup5\n        /* \"#utility.yul\":6086:6158   */\n      tag_398\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5596:6165   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6171:6417   */\n    tag_39:\n        /* \"#utility.yul\":6276:6280   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6303:6312   */\n      dup3\n        /* \"#utility.yul\":6299:6317   */\n      add\n        /* \"#utility.yul\":6291:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6327:6410   */\n      tag_408\n        /* \"#utility.yul\":6407:6408   */\n      0x00\n        /* \"#utility.yul\":6396:6405   */\n      dup4\n        /* \"#utility.yul\":6392:6409   */\n      add\n        /* \"#utility.yul\":6383:6389   */\n      dup5\n        /* \"#utility.yul\":6327:6410   */\n      tag_386\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6171:6417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6423:6673   */\n    tag_50:\n        /* \"#utility.yul\":6530:6534   */\n      0x00\n        /* \"#utility.yul\":6568:6570   */\n      0x20\n        /* \"#utility.yul\":6557:6566   */\n      dup3\n        /* \"#utility.yul\":6553:6571   */\n      add\n        /* \"#utility.yul\":6545:6571   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6666   */\n      tag_410\n        /* \"#utility.yul\":6663:6664   */\n      0x00\n        /* \"#utility.yul\":6652:6661   */\n      dup4\n        /* \"#utility.yul\":6648:6665   */\n      add\n        /* \"#utility.yul\":6639:6645   */\n      dup5\n        /* \"#utility.yul\":6581:6666   */\n      tag_390\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6423:6673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6679:6897   */\n    tag_31:\n        /* \"#utility.yul\":6770:6774   */\n      0x00\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6797:6806   */\n      dup3\n        /* \"#utility.yul\":6793:6811   */\n      add\n        /* \"#utility.yul\":6785:6811   */\n      swap1\n      pop\n        /* \"#utility.yul\":6821:6890   */\n      tag_412\n        /* \"#utility.yul\":6887:6888   */\n      0x00\n        /* \"#utility.yul\":6876:6885   */\n      dup4\n        /* \"#utility.yul\":6872:6889   */\n      add\n        /* \"#utility.yul\":6863:6869   */\n      dup5\n        /* \"#utility.yul\":6821:6890   */\n      tag_394\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6679:6897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6903:7125   */\n    tag_68:\n        /* \"#utility.yul\":6996:7000   */\n      0x00\n        /* \"#utility.yul\":7034:7036   */\n      0x20\n        /* \"#utility.yul\":7023:7032   */\n      dup3\n        /* \"#utility.yul\":7019:7037   */\n      add\n        /* \"#utility.yul\":7011:7037   */\n      swap1\n      pop\n        /* \"#utility.yul\":7047:7118   */\n      tag_414\n        /* \"#utility.yul\":7115:7116   */\n      0x00\n        /* \"#utility.yul\":7104:7113   */\n      dup4\n        /* \"#utility.yul\":7100:7117   */\n      add\n        /* \"#utility.yul\":7091:7097   */\n      dup5\n        /* \"#utility.yul\":7047:7118   */\n      tag_398\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6903:7125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7459   */\n    tag_194:\n        /* \"#utility.yul\":7250:7254   */\n      0x00\n        /* \"#utility.yul\":7288:7290   */\n      0x40\n        /* \"#utility.yul\":7277:7286   */\n      dup3\n        /* \"#utility.yul\":7273:7291   */\n      add\n        /* \"#utility.yul\":7265:7291   */\n      swap1\n      pop\n        /* \"#utility.yul\":7301:7372   */\n      tag_416\n        /* \"#utility.yul\":7369:7370   */\n      0x00\n        /* \"#utility.yul\":7358:7367   */\n      dup4\n        /* \"#utility.yul\":7354:7371   */\n      add\n        /* \"#utility.yul\":7345:7351   */\n      dup6\n        /* \"#utility.yul\":7301:7372   */\n      tag_398\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7382:7452   */\n      tag_417\n        /* \"#utility.yul\":7448:7450   */\n      0x20\n        /* \"#utility.yul\":7437:7446   */\n      dup4\n        /* \"#utility.yul\":7433:7451   */\n      add\n        /* \"#utility.yul\":7424:7430   */\n      dup5\n        /* \"#utility.yul\":7382:7452   */\n      tag_394\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7131:7459   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7465:8014   */\n    tag_206:\n        /* \"#utility.yul\":7640:7644   */\n      0x00\n        /* \"#utility.yul\":7678:7681   */\n      0x80\n        /* \"#utility.yul\":7667:7676   */\n      dup3\n        /* \"#utility.yul\":7663:7682   */\n      add\n        /* \"#utility.yul\":7655:7682   */\n      swap1\n      pop\n        /* \"#utility.yul\":7692:7763   */\n      tag_419\n        /* \"#utility.yul\":7760:7761   */\n      0x00\n        /* \"#utility.yul\":7749:7758   */\n      dup4\n        /* \"#utility.yul\":7745:7762   */\n      add\n        /* \"#utility.yul\":7736:7742   */\n      dup8\n        /* \"#utility.yul\":7692:7763   */\n      tag_398\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7773:7845   */\n      tag_420\n        /* \"#utility.yul\":7841:7843   */\n      0x20\n        /* \"#utility.yul\":7830:7839   */\n      dup4\n        /* \"#utility.yul\":7826:7844   */\n      add\n        /* \"#utility.yul\":7817:7823   */\n      dup7\n        /* \"#utility.yul\":7773:7845   */\n      tag_398\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7855:7925   */\n      tag_421\n        /* \"#utility.yul\":7921:7923   */\n      0x40\n        /* \"#utility.yul\":7910:7919   */\n      dup4\n        /* \"#utility.yul\":7906:7924   */\n      add\n        /* \"#utility.yul\":7897:7903   */\n      dup6\n        /* \"#utility.yul\":7855:7925   */\n      tag_394\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7935:8007   */\n      tag_422\n        /* \"#utility.yul\":8003:8005   */\n      0x60\n        /* \"#utility.yul\":7992:8001   */\n      dup4\n        /* \"#utility.yul\":7988:8006   */\n      add\n        /* \"#utility.yul\":7979:7985   */\n      dup5\n        /* \"#utility.yul\":7935:8007   */\n      tag_398\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7465:8014   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8101:8626   */\n    tag_133:\n        /* \"#utility.yul\":8140:8143   */\n      0x00\n        /* \"#utility.yul\":8159:8178   */\n      tag_426\n        /* \"#utility.yul\":8176:8177   */\n      dup3\n        /* \"#utility.yul\":8159:8178   */\n      tag_397\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8154:8178   */\n      swap2\n      pop\n        /* \"#utility.yul\":8192:8211   */\n      tag_427\n        /* \"#utility.yul\":8209:8210   */\n      dup4\n        /* \"#utility.yul\":8192:8211   */\n      tag_397\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8187:8211   */\n      swap3\n      pop\n        /* \"#utility.yul\":8380:8381   */\n      dup2\n        /* \"#utility.yul\":8312:8378   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8308:8382   */\n      sub\n        /* \"#utility.yul\":8305:8306   */\n      dup4\n        /* \"#utility.yul\":8301:8383   */\n      sgt\n        /* \"#utility.yul\":8296:8297   */\n      0x00\n        /* \"#utility.yul\":8293:8294   */\n      dup4\n        /* \"#utility.yul\":8289:8298   */\n      slt\n        /* \"#utility.yul\":8282:8299   */\n      iszero\n        /* \"#utility.yul\":8278:8384   */\n      and\n        /* \"#utility.yul\":8275:8407   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":8387:8405   */\n      tag_429\n      tag_430\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8275:8407   */\n    tag_428:\n        /* \"#utility.yul\":8567:8568   */\n      dup2\n        /* \"#utility.yul\":8499:8565   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8495:8569   */\n      sub\n        /* \"#utility.yul\":8492:8493   */\n      dup4\n        /* \"#utility.yul\":8488:8570   */\n      slt\n        /* \"#utility.yul\":8484:8485   */\n      0x00\n        /* \"#utility.yul\":8481:8482   */\n      dup4\n        /* \"#utility.yul\":8477:8486   */\n      slt\n        /* \"#utility.yul\":8473:8571   */\n      and\n        /* \"#utility.yul\":8470:8594   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":8574:8592   */\n      tag_432\n      tag_430\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8470:8594   */\n    tag_431:\n        /* \"#utility.yul\":8618:8619   */\n      dup3\n        /* \"#utility.yul\":8615:8616   */\n      dup3\n        /* \"#utility.yul\":8611:8620   */\n      add\n        /* \"#utility.yul\":8604:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8101:8626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8632:8937   */\n    tag_139:\n        /* \"#utility.yul\":8672:8675   */\n      0x00\n        /* \"#utility.yul\":8691:8711   */\n      tag_434\n        /* \"#utility.yul\":8709:8710   */\n      dup3\n        /* \"#utility.yul\":8691:8711   */\n      tag_401\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8686:8711   */\n      swap2\n      pop\n        /* \"#utility.yul\":8725:8745   */\n      tag_435\n        /* \"#utility.yul\":8743:8744   */\n      dup4\n        /* \"#utility.yul\":8725:8745   */\n      tag_401\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8720:8745   */\n      swap3\n      pop\n        /* \"#utility.yul\":8879:8880   */\n      dup3\n        /* \"#utility.yul\":8811:8877   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8807:8881   */\n      sub\n        /* \"#utility.yul\":8804:8805   */\n      dup3\n        /* \"#utility.yul\":8801:8882   */\n      gt\n        /* \"#utility.yul\":8798:8905   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":8885:8903   */\n      tag_437\n      tag_430\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8798:8905   */\n    tag_436:\n        /* \"#utility.yul\":8929:8930   */\n      dup3\n        /* \"#utility.yul\":8926:8927   */\n      dup3\n        /* \"#utility.yul\":8922:8931   */\n      add\n        /* \"#utility.yul\":8915:8931   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:8937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8943:9328   */\n    tag_237:\n        /* \"#utility.yul\":8982:8983   */\n      0x00\n        /* \"#utility.yul\":8999:9018   */\n      tag_439\n        /* \"#utility.yul\":9016:9017   */\n      dup3\n        /* \"#utility.yul\":8999:9018   */\n      tag_397\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8994:9018   */\n      swap2\n      pop\n        /* \"#utility.yul\":9032:9051   */\n      tag_440\n        /* \"#utility.yul\":9049:9050   */\n      dup4\n        /* \"#utility.yul\":9032:9051   */\n      tag_397\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9027:9051   */\n      swap3\n      pop\n        /* \"#utility.yul\":9070:9071   */\n      dup3\n        /* \"#utility.yul\":9060:9095   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":9075:9093   */\n      tag_442\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9060:9095   */\n    tag_441:\n        /* \"#utility.yul\":9261:9262   */\n      0x01\n        /* \"#utility.yul\":9258:9259   */\n      0x00\n        /* \"#utility.yul\":9254:9263   */\n      sub\n        /* \"#utility.yul\":9251:9252   */\n      dup4\n        /* \"#utility.yul\":9248:9264   */\n      eq\n        /* \"#utility.yul\":9167:9233   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9164:9165   */\n      dup4\n        /* \"#utility.yul\":9161:9234   */\n      eq\n        /* \"#utility.yul\":9144:9274   */\n      and\n        /* \"#utility.yul\":9141:9297   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":9277:9295   */\n      tag_445\n      tag_430\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9141:9297   */\n    tag_444:\n        /* \"#utility.yul\":9320:9321   */\n      dup3\n        /* \"#utility.yul\":9317:9318   */\n      dup3\n        /* \"#utility.yul\":9312:9322   */\n      sdiv\n        /* \"#utility.yul\":9307:9322   */\n      swap1\n      pop\n        /* \"#utility.yul\":8943:9328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9334:9519   */\n    tag_176:\n        /* \"#utility.yul\":9374:9375   */\n      0x00\n        /* \"#utility.yul\":9391:9411   */\n      tag_447\n        /* \"#utility.yul\":9409:9410   */\n      dup3\n        /* \"#utility.yul\":9391:9411   */\n      tag_401\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9386:9411   */\n      swap2\n      pop\n        /* \"#utility.yul\":9425:9445   */\n      tag_448\n        /* \"#utility.yul\":9443:9444   */\n      dup4\n        /* \"#utility.yul\":9425:9445   */\n      tag_401\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9420:9445   */\n      swap3\n      pop\n        /* \"#utility.yul\":9464:9465   */\n      dup3\n        /* \"#utility.yul\":9454:9489   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9469:9487   */\n      tag_450\n      tag_443\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9454:9489   */\n    tag_449:\n        /* \"#utility.yul\":9511:9512   */\n      dup3\n        /* \"#utility.yul\":9508:9509   */\n      dup3\n        /* \"#utility.yul\":9504:9513   */\n      div\n        /* \"#utility.yul\":9499:9513   */\n      swap1\n      pop\n        /* \"#utility.yul\":9334:9519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9525:10373   */\n    tag_451:\n        /* \"#utility.yul\":9586:9591   */\n      0x00\n        /* \"#utility.yul\":9593:9597   */\n      dup1\n        /* \"#utility.yul\":9617:9623   */\n      dup3\n        /* \"#utility.yul\":9608:9623   */\n      swap2\n      pop\n        /* \"#utility.yul\":9641:9646   */\n      dup4\n        /* \"#utility.yul\":9632:9646   */\n      swap1\n      pop\n        /* \"#utility.yul\":9655:10367   */\n    tag_453:\n        /* \"#utility.yul\":9676:9677   */\n      0x01\n        /* \"#utility.yul\":9666:9674   */\n      dup6\n        /* \"#utility.yul\":9663:9678   */\n      gt\n        /* \"#utility.yul\":9655:10367   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9771:9775   */\n      dup1\n        /* \"#utility.yul\":9766:9769   */\n      dup7\n        /* \"#utility.yul\":9762:9776   */\n      div\n        /* \"#utility.yul\":9756:9760   */\n      dup2\n        /* \"#utility.yul\":9753:9777   */\n      gt\n        /* \"#utility.yul\":9750:9800   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":9780:9798   */\n      tag_457\n      tag_430\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9750:9800   */\n    tag_456:\n        /* \"#utility.yul\":9830:9831   */\n      0x01\n        /* \"#utility.yul\":9820:9828   */\n      dup6\n        /* \"#utility.yul\":9816:9832   */\n      and\n        /* \"#utility.yul\":9813:10264   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":10245:10249   */\n      dup1\n        /* \"#utility.yul\":10238:10243   */\n      dup3\n        /* \"#utility.yul\":10234:10250   */\n      mul\n        /* \"#utility.yul\":10225:10250   */\n      swap2\n      pop\n        /* \"#utility.yul\":9813:10264   */\n    tag_458:\n        /* \"#utility.yul\":10295:10299   */\n      dup1\n        /* \"#utility.yul\":10289:10293   */\n      dup2\n        /* \"#utility.yul\":10285:10300   */\n      mul\n        /* \"#utility.yul\":10277:10300   */\n      swap1\n      pop\n        /* \"#utility.yul\":10325:10357   */\n      tag_459\n        /* \"#utility.yul\":10348:10356   */\n      dup6\n        /* \"#utility.yul\":10325:10357   */\n      tag_460\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10313:10357   */\n      swap5\n      pop\n        /* \"#utility.yul\":9655:10367   */\n      jump(tag_453)\n    tag_455:\n        /* \"#utility.yul\":9525:10373   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10379:10664   */\n    tag_99:\n        /* \"#utility.yul\":10439:10444   */\n      0x00\n        /* \"#utility.yul\":10463:10486   */\n      tag_462\n        /* \"#utility.yul\":10481:10485   */\n      dup3\n        /* \"#utility.yul\":10463:10486   */\n      tag_401\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10455:10486   */\n      swap2\n      pop\n        /* \"#utility.yul\":10507:10534   */\n      tag_463\n        /* \"#utility.yul\":10525:10533   */\n      dup4\n        /* \"#utility.yul\":10507:10534   */\n      tag_401\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10495:10534   */\n      swap3\n      pop\n        /* \"#utility.yul\":10553:10657   */\n      tag_464\n        /* \"#utility.yul\":10590:10656   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10580:10588   */\n      dup5\n        /* \"#utility.yul\":10574:10578   */\n      dup5\n        /* \"#utility.yul\":10553:10657   */\n      tag_465\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10544:10657   */\n      swap1\n      pop\n        /* \"#utility.yul\":10379:10664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10670:11743   */\n    tag_465:\n        /* \"#utility.yul\":10724:10729   */\n      0x00\n        /* \"#utility.yul\":10915:10923   */\n      dup3\n        /* \"#utility.yul\":10905:10945   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10936:10937   */\n      0x01\n        /* \"#utility.yul\":10927:10937   */\n      swap1\n      pop\n        /* \"#utility.yul\":10938:10943   */\n      jump(tag_466)\n        /* \"#utility.yul\":10905:10945   */\n    tag_467:\n        /* \"#utility.yul\":10964:10968   */\n      dup2\n        /* \"#utility.yul\":10954:10990   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":10981:10982   */\n      0x00\n        /* \"#utility.yul\":10972:10982   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:10988   */\n      jump(tag_466)\n        /* \"#utility.yul\":10954:10990   */\n    tag_468:\n        /* \"#utility.yul\":11050:11054   */\n      dup2\n        /* \"#utility.yul\":11098:11099   */\n      0x01\n        /* \"#utility.yul\":11093:11120   */\n      dup2\n      eq\n      tag_470\n      jumpi\n        /* \"#utility.yul\":11134:11135   */\n      0x02\n        /* \"#utility.yul\":11129:11320   */\n      dup2\n      eq\n      tag_471\n      jumpi\n        /* \"#utility.yul\":11043:11320   */\n      jump(tag_469)\n        /* \"#utility.yul\":11093:11120   */\n    tag_470:\n        /* \"#utility.yul\":11111:11112   */\n      0x01\n        /* \"#utility.yul\":11102:11112   */\n      swap2\n      pop\n        /* \"#utility.yul\":11113:11118   */\n      pop\n      jump(tag_466)\n        /* \"#utility.yul\":11129:11320   */\n    tag_471:\n        /* \"#utility.yul\":11174:11177   */\n      0xff\n        /* \"#utility.yul\":11164:11172   */\n      dup5\n        /* \"#utility.yul\":11161:11178   */\n      gt\n        /* \"#utility.yul\":11158:11201   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":11181:11199   */\n      tag_473\n      tag_430\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11158:11201   */\n    tag_472:\n        /* \"#utility.yul\":11230:11238   */\n      dup4\n        /* \"#utility.yul\":11227:11228   */\n      0x02\n        /* \"#utility.yul\":11223:11239   */\n      exp\n        /* \"#utility.yul\":11214:11239   */\n      swap2\n      pop\n        /* \"#utility.yul\":11265:11268   */\n      dup5\n        /* \"#utility.yul\":11258:11263   */\n      dup3\n        /* \"#utility.yul\":11255:11269   */\n      gt\n        /* \"#utility.yul\":11252:11292   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":11272:11290   */\n      tag_475\n      tag_430\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11252:11292   */\n    tag_474:\n        /* \"#utility.yul\":11305:11310   */\n      pop\n      jump(tag_466)\n        /* \"#utility.yul\":11043:11320   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":11429:11431   */\n      0x20\n        /* \"#utility.yul\":11419:11427   */\n      dup4\n        /* \"#utility.yul\":11416:11432   */\n      lt\n        /* \"#utility.yul\":11410:11413   */\n      0x0133\n        /* \"#utility.yul\":11404:11408   */\n      dup4\n        /* \"#utility.yul\":11401:11414   */\n      lt\n        /* \"#utility.yul\":11397:11433   */\n      and\n        /* \"#utility.yul\":11379:11381   */\n      0x4e\n        /* \"#utility.yul\":11369:11377   */\n      dup5\n        /* \"#utility.yul\":11366:11382   */\n      lt\n        /* \"#utility.yul\":11361:11363   */\n      0x0b\n        /* \"#utility.yul\":11355:11359   */\n      dup5\n        /* \"#utility.yul\":11352:11364   */\n      lt\n        /* \"#utility.yul\":11348:11383   */\n      and\n        /* \"#utility.yul\":11332:11443   */\n      or\n        /* \"#utility.yul\":11329:11575   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":11485:11493   */\n      dup3\n        /* \"#utility.yul\":11479:11483   */\n      dup3\n        /* \"#utility.yul\":11475:11494   */\n      exp\n        /* \"#utility.yul\":11466:11494   */\n      swap1\n      pop\n        /* \"#utility.yul\":11520:11523   */\n      dup4\n        /* \"#utility.yul\":11513:11518   */\n      dup2\n        /* \"#utility.yul\":11510:11524   */\n      gt\n        /* \"#utility.yul\":11507:11547   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":11527:11545   */\n      tag_478\n      tag_430\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11507:11547   */\n    tag_477:\n        /* \"#utility.yul\":11560:11565   */\n      jump(tag_466)\n        /* \"#utility.yul\":11329:11575   */\n    tag_476:\n        /* \"#utility.yul\":11600:11642   */\n      tag_479\n        /* \"#utility.yul\":11638:11641   */\n      dup5\n        /* \"#utility.yul\":11628:11636   */\n      dup5\n        /* \"#utility.yul\":11622:11626   */\n      dup5\n        /* \"#utility.yul\":11619:11620   */\n      0x01\n        /* \"#utility.yul\":11600:11642   */\n      tag_451\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11585:11642   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":11674:11678   */\n      dup2\n        /* \"#utility.yul\":11669:11672   */\n      dup5\n        /* \"#utility.yul\":11665:11679   */\n      div\n        /* \"#utility.yul\":11658:11663   */\n      dup2\n        /* \"#utility.yul\":11655:11680   */\n      gt\n        /* \"#utility.yul\":11652:11703   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":11683:11701   */\n      tag_481\n      tag_430\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11652:11703   */\n    tag_480:\n        /* \"#utility.yul\":11732:11736   */\n      dup2\n        /* \"#utility.yul\":11725:11730   */\n      dup2\n        /* \"#utility.yul\":11721:11737   */\n      mul\n        /* \"#utility.yul\":11712:11737   */\n      swap1\n      pop\n        /* \"#utility.yul\":10670:11743   */\n    tag_466:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11749:12740   */\n    tag_219:\n        /* \"#utility.yul\":11788:11795   */\n      0x00\n        /* \"#utility.yul\":11811:11830   */\n      tag_483\n        /* \"#utility.yul\":11828:11829   */\n      dup3\n        /* \"#utility.yul\":11811:11830   */\n      tag_397\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11806:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11844:11863   */\n      tag_484\n        /* \"#utility.yul\":11861:11862   */\n      dup4\n        /* \"#utility.yul\":11844:11863   */\n      tag_397\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11839:11863   */\n      swap3\n      pop\n        /* \"#utility.yul\":12045:12046   */\n      dup3\n        /* \"#utility.yul\":11977:12043   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11973:12047   */\n      div\n        /* \"#utility.yul\":11970:11971   */\n      dup3\n        /* \"#utility.yul\":11967:12048   */\n      gt\n        /* \"#utility.yul\":11962:11963   */\n      0x00\n        /* \"#utility.yul\":11959:11960   */\n      dup5\n        /* \"#utility.yul\":11955:11964   */\n      sgt\n        /* \"#utility.yul\":11951:11952   */\n      0x00\n        /* \"#utility.yul\":11948:11949   */\n      dup5\n        /* \"#utility.yul\":11944:11953   */\n      sgt\n        /* \"#utility.yul\":11940:11965   */\n      and\n        /* \"#utility.yul\":11936:12049   */\n      and\n        /* \"#utility.yul\":11933:12072   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":12052:12070   */\n      tag_486\n      tag_430\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11933:12072   */\n    tag_485:\n        /* \"#utility.yul\":12256:12257   */\n      dup2\n        /* \"#utility.yul\":12188:12254   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12183:12258   */\n      sdiv\n        /* \"#utility.yul\":12180:12181   */\n      dup4\n        /* \"#utility.yul\":12176:12259   */\n      slt\n        /* \"#utility.yul\":12171:12172   */\n      0x00\n        /* \"#utility.yul\":12168:12169   */\n      dup5\n        /* \"#utility.yul\":12164:12173   */\n      slt\n        /* \"#utility.yul\":12160:12161   */\n      0x00\n        /* \"#utility.yul\":12157:12158   */\n      dup5\n        /* \"#utility.yul\":12153:12162   */\n      sgt\n        /* \"#utility.yul\":12149:12174   */\n      and\n        /* \"#utility.yul\":12145:12260   */\n      and\n        /* \"#utility.yul\":12142:12283   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12263:12281   */\n      tag_488\n      tag_430\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12142:12283   */\n    tag_487:\n        /* \"#utility.yul\":12467:12468   */\n      dup3\n        /* \"#utility.yul\":12399:12465   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12394:12469   */\n      sdiv\n        /* \"#utility.yul\":12391:12392   */\n      dup3\n        /* \"#utility.yul\":12387:12470   */\n      slt\n        /* \"#utility.yul\":12382:12383   */\n      0x00\n        /* \"#utility.yul\":12379:12380   */\n      dup5\n        /* \"#utility.yul\":12375:12384   */\n      sgt\n        /* \"#utility.yul\":12371:12372   */\n      0x00\n        /* \"#utility.yul\":12368:12369   */\n      dup5\n        /* \"#utility.yul\":12364:12373   */\n      slt\n        /* \"#utility.yul\":12360:12385   */\n      and\n        /* \"#utility.yul\":12356:12471   */\n      and\n        /* \"#utility.yul\":12353:12494   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":12474:12492   */\n      tag_490\n      tag_430\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12353:12494   */\n    tag_489:\n        /* \"#utility.yul\":12677:12678   */\n      dup3\n        /* \"#utility.yul\":12609:12675   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12604:12679   */\n      sdiv\n        /* \"#utility.yul\":12601:12602   */\n      dup3\n        /* \"#utility.yul\":12597:12680   */\n      slt\n        /* \"#utility.yul\":12592:12593   */\n      0x00\n        /* \"#utility.yul\":12589:12590   */\n      dup5\n        /* \"#utility.yul\":12585:12594   */\n      slt\n        /* \"#utility.yul\":12581:12582   */\n      0x00\n        /* \"#utility.yul\":12578:12579   */\n      dup5\n        /* \"#utility.yul\":12574:12583   */\n      slt\n        /* \"#utility.yul\":12570:12595   */\n      and\n        /* \"#utility.yul\":12566:12681   */\n      and\n        /* \"#utility.yul\":12563:12704   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":12684:12702   */\n      tag_492\n      tag_430\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12563:12704   */\n    tag_491:\n        /* \"#utility.yul\":12732:12733   */\n      dup3\n        /* \"#utility.yul\":12729:12730   */\n      dup3\n        /* \"#utility.yul\":12725:12734   */\n      mul\n        /* \"#utility.yul\":12714:12734   */\n      swap1\n      pop\n        /* \"#utility.yul\":11749:12740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12746:13094   */\n    tag_166:\n        /* \"#utility.yul\":12786:12793   */\n      0x00\n        /* \"#utility.yul\":12809:12829   */\n      tag_494\n        /* \"#utility.yul\":12827:12828   */\n      dup3\n        /* \"#utility.yul\":12809:12829   */\n      tag_401\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12804:12829   */\n      swap2\n      pop\n        /* \"#utility.yul\":12843:12863   */\n      tag_495\n        /* \"#utility.yul\":12861:12862   */\n      dup4\n        /* \"#utility.yul\":12843:12863   */\n      tag_401\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12838:12863   */\n      swap3\n      pop\n        /* \"#utility.yul\":13031:13032   */\n      dup2\n        /* \"#utility.yul\":12963:13029   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12959:13033   */\n      div\n        /* \"#utility.yul\":12956:12957   */\n      dup4\n        /* \"#utility.yul\":12953:13034   */\n      gt\n        /* \"#utility.yul\":12948:12949   */\n      dup3\n        /* \"#utility.yul\":12941:12950   */\n      iszero\n        /* \"#utility.yul\":12934:12951   */\n      iszero\n        /* \"#utility.yul\":12930:13035   */\n      and\n        /* \"#utility.yul\":12927:13058   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":13038:13056   */\n      tag_497\n      tag_430\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12927:13058   */\n    tag_496:\n        /* \"#utility.yul\":13086:13087   */\n      dup3\n        /* \"#utility.yul\":13083:13084   */\n      dup3\n        /* \"#utility.yul\":13079:13088   */\n      mul\n        /* \"#utility.yul\":13068:13088   */\n      swap1\n      pop\n        /* \"#utility.yul\":12746:13094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13100:13627   */\n    tag_226:\n        /* \"#utility.yul\":13139:13143   */\n      0x00\n        /* \"#utility.yul\":13159:13178   */\n      tag_499\n        /* \"#utility.yul\":13176:13177   */\n      dup3\n        /* \"#utility.yul\":13159:13178   */\n      tag_397\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13154:13178   */\n      swap2\n      pop\n        /* \"#utility.yul\":13192:13211   */\n      tag_500\n        /* \"#utility.yul\":13209:13210   */\n      dup4\n        /* \"#utility.yul\":13192:13211   */\n      tag_397\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13187:13211   */\n      swap3\n      pop\n        /* \"#utility.yul\":13381:13382   */\n      dup3\n        /* \"#utility.yul\":13313:13379   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13309:13383   */\n      add\n        /* \"#utility.yul\":13306:13307   */\n      dup3\n        /* \"#utility.yul\":13302:13384   */\n      slt\n        /* \"#utility.yul\":13297:13298   */\n      0x00\n        /* \"#utility.yul\":13294:13295   */\n      dup5\n        /* \"#utility.yul\":13290:13299   */\n      slt\n        /* \"#utility.yul\":13283:13300   */\n      iszero\n        /* \"#utility.yul\":13279:13385   */\n      and\n        /* \"#utility.yul\":13276:13408   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":13388:13406   */\n      tag_502\n      tag_430\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13276:13408   */\n    tag_501:\n        /* \"#utility.yul\":13567:13568   */\n      dup3\n        /* \"#utility.yul\":13499:13565   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13495:13569   */\n      add\n        /* \"#utility.yul\":13492:13493   */\n      dup3\n        /* \"#utility.yul\":13488:13570   */\n      sgt\n        /* \"#utility.yul\":13484:13485   */\n      0x00\n        /* \"#utility.yul\":13481:13482   */\n      dup5\n        /* \"#utility.yul\":13477:13486   */\n      slt\n        /* \"#utility.yul\":13473:13571   */\n      and\n        /* \"#utility.yul\":13470:13594   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":13574:13592   */\n      tag_504\n      tag_430\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13470:13594   */\n    tag_503:\n        /* \"#utility.yul\":13619:13620   */\n      dup3\n        /* \"#utility.yul\":13616:13617   */\n      dup3\n        /* \"#utility.yul\":13612:13621   */\n      sub\n        /* \"#utility.yul\":13604:13621   */\n      swap1\n      pop\n        /* \"#utility.yul\":13100:13627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13633:13824   */\n    tag_192:\n        /* \"#utility.yul\":13673:13677   */\n      0x00\n        /* \"#utility.yul\":13693:13713   */\n      tag_506\n        /* \"#utility.yul\":13711:13712   */\n      dup3\n        /* \"#utility.yul\":13693:13713   */\n      tag_401\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13688:13713   */\n      swap2\n      pop\n        /* \"#utility.yul\":13727:13747   */\n      tag_507\n        /* \"#utility.yul\":13745:13746   */\n      dup4\n        /* \"#utility.yul\":13727:13747   */\n      tag_401\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13722:13747   */\n      swap3\n      pop\n        /* \"#utility.yul\":13766:13767   */\n      dup3\n        /* \"#utility.yul\":13763:13764   */\n      dup3\n        /* \"#utility.yul\":13760:13768   */\n      lt\n        /* \"#utility.yul\":13757:13791   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":13771:13789   */\n      tag_509\n      tag_430\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13757:13791   */\n    tag_508:\n        /* \"#utility.yul\":13816:13817   */\n      dup3\n        /* \"#utility.yul\":13813:13814   */\n      dup3\n        /* \"#utility.yul\":13809:13818   */\n      sub\n        /* \"#utility.yul\":13801:13818   */\n      swap1\n      pop\n        /* \"#utility.yul\":13633:13824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13830:13926   */\n    tag_385:\n        /* \"#utility.yul\":13867:13874   */\n      0x00\n        /* \"#utility.yul\":13896:13920   */\n      tag_511\n        /* \"#utility.yul\":13914:13919   */\n      dup3\n        /* \"#utility.yul\":13896:13920   */\n      tag_512\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13885:13920   */\n      swap1\n      pop\n        /* \"#utility.yul\":13830:13926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13932:14036   */\n    tag_513:\n        /* \"#utility.yul\":13977:13984   */\n      0x00\n        /* \"#utility.yul\":14006:14030   */\n      tag_515\n        /* \"#utility.yul\":14024:14029   */\n      dup3\n        /* \"#utility.yul\":14006:14030   */\n      tag_512\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13995:14030   */\n      swap1\n      pop\n        /* \"#utility.yul\":13932:14036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14042:14132   */\n    tag_516:\n        /* \"#utility.yul\":14076:14083   */\n      0x00\n        /* \"#utility.yul\":14119:14124   */\n      dup2\n        /* \"#utility.yul\":14112:14125   */\n      iszero\n        /* \"#utility.yul\":14105:14126   */\n      iszero\n        /* \"#utility.yul\":14094:14126   */\n      swap1\n      pop\n        /* \"#utility.yul\":14042:14132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14138:14246   */\n    tag_518:\n        /* \"#utility.yul\":14187:14194   */\n      0x00\n        /* \"#utility.yul\":14216:14240   */\n      tag_520\n        /* \"#utility.yul\":14234:14239   */\n      dup3\n        /* \"#utility.yul\":14216:14240   */\n      tag_385\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14205:14240   */\n      swap1\n      pop\n        /* \"#utility.yul\":14138:14246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14252:14362   */\n    tag_521:\n        /* \"#utility.yul\":14303:14310   */\n      0x00\n        /* \"#utility.yul\":14332:14356   */\n      tag_523\n        /* \"#utility.yul\":14350:14355   */\n      dup3\n        /* \"#utility.yul\":14332:14356   */\n      tag_385\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14321:14356   */\n      swap1\n      pop\n        /* \"#utility.yul\":14252:14362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14368:14444   */\n    tag_397:\n        /* \"#utility.yul\":14404:14411   */\n      0x00\n        /* \"#utility.yul\":14433:14438   */\n      dup2\n        /* \"#utility.yul\":14422:14438   */\n      swap1\n      pop\n        /* \"#utility.yul\":14368:14444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14450:14576   */\n    tag_512:\n        /* \"#utility.yul\":14487:14494   */\n      0x00\n        /* \"#utility.yul\":14527:14569   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14520:14525   */\n      dup3\n        /* \"#utility.yul\":14516:14570   */\n      and\n        /* \"#utility.yul\":14505:14570   */\n      swap1\n      pop\n        /* \"#utility.yul\":14450:14576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14582:14659   */\n    tag_401:\n        /* \"#utility.yul\":14619:14626   */\n      0x00\n        /* \"#utility.yul\":14648:14653   */\n      dup2\n        /* \"#utility.yul\":14637:14653   */\n      swap1\n      pop\n        /* \"#utility.yul\":14582:14659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14665:14799   */\n    tag_381:\n        /* \"#utility.yul\":14723:14732   */\n      0x00\n        /* \"#utility.yul\":14756:14793   */\n      tag_528\n        /* \"#utility.yul\":14787:14792   */\n      dup3\n        /* \"#utility.yul\":14756:14793   */\n      tag_529\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14743:14793   */\n      swap1\n      pop\n        /* \"#utility.yul\":14665:14799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14805:14943   */\n    tag_389:\n        /* \"#utility.yul\":14867:14876   */\n      0x00\n        /* \"#utility.yul\":14900:14937   */\n      tag_531\n        /* \"#utility.yul\":14931:14936   */\n      dup3\n        /* \"#utility.yul\":14900:14937   */\n      tag_529\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14887:14937   */\n      swap1\n      pop\n        /* \"#utility.yul\":14805:14943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14949:15089   */\n    tag_393:\n        /* \"#utility.yul\":15013:15022   */\n      0x00\n        /* \"#utility.yul\":15046:15083   */\n      tag_533\n        /* \"#utility.yul\":15077:15082   */\n      dup3\n        /* \"#utility.yul\":15046:15083   */\n      tag_529\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15033:15083   */\n      swap1\n      pop\n        /* \"#utility.yul\":14949:15089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15095:15221   */\n    tag_529:\n        /* \"#utility.yul\":15145:15154   */\n      0x00\n        /* \"#utility.yul\":15178:15215   */\n      tag_535\n        /* \"#utility.yul\":15209:15214   */\n      dup3\n        /* \"#utility.yul\":15178:15215   */\n      tag_536\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15165:15215   */\n      swap1\n      pop\n        /* \"#utility.yul\":15095:15221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15227:15340   */\n    tag_536:\n        /* \"#utility.yul\":15277:15286   */\n      0x00\n        /* \"#utility.yul\":15310:15334   */\n      tag_538\n        /* \"#utility.yul\":15328:15333   */\n      dup3\n        /* \"#utility.yul\":15310:15334   */\n      tag_512\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15297:15334   */\n      swap1\n      pop\n        /* \"#utility.yul\":15227:15340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15346:15579   */\n    tag_265:\n        /* \"#utility.yul\":15385:15388   */\n      0x00\n        /* \"#utility.yul\":15408:15432   */\n      tag_540\n        /* \"#utility.yul\":15426:15431   */\n      dup3\n        /* \"#utility.yul\":15408:15432   */\n      tag_401\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15399:15432   */\n      swap2\n      pop\n        /* \"#utility.yul\":15454:15520   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15447:15452   */\n      dup3\n        /* \"#utility.yul\":15444:15521   */\n      eq\n        /* \"#utility.yul\":15441:15544   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":15524:15542   */\n      tag_542\n      tag_430\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15441:15544   */\n    tag_541:\n        /* \"#utility.yul\":15571:15572   */\n      0x01\n        /* \"#utility.yul\":15564:15569   */\n      dup3\n        /* \"#utility.yul\":15560:15573   */\n      add\n        /* \"#utility.yul\":15553:15573   */\n      swap1\n      pop\n        /* \"#utility.yul\":15346:15579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15585:15813   */\n    tag_297:\n        /* \"#utility.yul\":15620:15623   */\n      0x00\n        /* \"#utility.yul\":15643:15666   */\n      tag_544\n        /* \"#utility.yul\":15660:15665   */\n      dup3\n        /* \"#utility.yul\":15643:15666   */\n      tag_397\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15634:15666   */\n      swap2\n      pop\n        /* \"#utility.yul\":15688:15754   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15681:15686   */\n      dup3\n        /* \"#utility.yul\":15678:15755   */\n      eq\n        /* \"#utility.yul\":15675:15778   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":15758:15776   */\n      tag_546\n      tag_430\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":15675:15778   */\n    tag_545:\n        /* \"#utility.yul\":15801:15806   */\n      dup2\n        /* \"#utility.yul\":15798:15799   */\n      0x00\n        /* \"#utility.yul\":15794:15807   */\n      sub\n        /* \"#utility.yul\":15787:15807   */\n      swap1\n      pop\n        /* \"#utility.yul\":15585:15813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15819:15999   */\n    tag_204:\n        /* \"#utility.yul\":15867:15944   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15864:15865   */\n      0x00\n        /* \"#utility.yul\":15857:15945   */\n      mstore\n        /* \"#utility.yul\":15964:15968   */\n      0x01\n        /* \"#utility.yul\":15961:15962   */\n      0x04\n        /* \"#utility.yul\":15954:15969   */\n      mstore\n        /* \"#utility.yul\":15988:15992   */\n      0x24\n        /* \"#utility.yul\":15985:15986   */\n      0x00\n        /* \"#utility.yul\":15978:15993   */\n      revert\n        /* \"#utility.yul\":16005:16185   */\n    tag_430:\n        /* \"#utility.yul\":16053:16130   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16050:16051   */\n      0x00\n        /* \"#utility.yul\":16043:16131   */\n      mstore\n        /* \"#utility.yul\":16150:16154   */\n      0x11\n        /* \"#utility.yul\":16147:16148   */\n      0x04\n        /* \"#utility.yul\":16140:16155   */\n      mstore\n        /* \"#utility.yul\":16174:16178   */\n      0x24\n        /* \"#utility.yul\":16171:16172   */\n      0x00\n        /* \"#utility.yul\":16164:16179   */\n      revert\n        /* \"#utility.yul\":16191:16371   */\n    tag_443:\n        /* \"#utility.yul\":16239:16316   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16236:16237   */\n      0x00\n        /* \"#utility.yul\":16229:16317   */\n      mstore\n        /* \"#utility.yul\":16336:16340   */\n      0x12\n        /* \"#utility.yul\":16333:16334   */\n      0x04\n        /* \"#utility.yul\":16326:16341   */\n      mstore\n        /* \"#utility.yul\":16360:16364   */\n      0x24\n        /* \"#utility.yul\":16357:16358   */\n      0x00\n        /* \"#utility.yul\":16350:16365   */\n      revert\n        /* \"#utility.yul\":16377:16557   */\n    tag_262:\n        /* \"#utility.yul\":16425:16502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16422:16423   */\n      0x00\n        /* \"#utility.yul\":16415:16503   */\n      mstore\n        /* \"#utility.yul\":16522:16526   */\n      0x32\n        /* \"#utility.yul\":16519:16520   */\n      0x04\n        /* \"#utility.yul\":16512:16527   */\n      mstore\n        /* \"#utility.yul\":16546:16550   */\n      0x24\n        /* \"#utility.yul\":16543:16544   */\n      0x00\n        /* \"#utility.yul\":16536:16551   */\n      revert\n        /* \"#utility.yul\":16686:16803   */\n    tag_342:\n        /* \"#utility.yul\":16795:16796   */\n      0x00\n        /* \"#utility.yul\":16792:16793   */\n      dup1\n        /* \"#utility.yul\":16785:16797   */\n      revert\n        /* \"#utility.yul\":16809:16911   */\n    tag_460:\n        /* \"#utility.yul\":16851:16859   */\n      0x00\n        /* \"#utility.yul\":16898:16903   */\n      dup2\n        /* \"#utility.yul\":16895:16896   */\n      0x01\n        /* \"#utility.yul\":16891:16904   */\n      shr\n        /* \"#utility.yul\":16870:16904   */\n      swap1\n      pop\n        /* \"#utility.yul\":16809:16911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16917:17055   */\n    tag_315:\n        /* \"#utility.yul\":16998:17030   */\n      tag_556\n        /* \"#utility.yul\":17024:17029   */\n      dup2\n        /* \"#utility.yul\":16998:17030   */\n      tag_513\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":16991:16996   */\n      dup2\n        /* \"#utility.yul\":16988:17031   */\n      eq\n        /* \"#utility.yul\":16978:17049   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":17045:17046   */\n      0x00\n        /* \"#utility.yul\":17042:17043   */\n      dup1\n        /* \"#utility.yul\":17035:17047   */\n      revert\n        /* \"#utility.yul\":16978:17049   */\n    tag_557:\n        /* \"#utility.yul\":16917:17055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17061:17177   */\n    tag_319:\n        /* \"#utility.yul\":17131:17152   */\n      tag_559\n        /* \"#utility.yul\":17146:17151   */\n      dup2\n        /* \"#utility.yul\":17131:17152   */\n      tag_516\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":17124:17129   */\n      dup2\n        /* \"#utility.yul\":17121:17153   */\n      eq\n        /* \"#utility.yul\":17111:17171   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":17167:17168   */\n      0x00\n        /* \"#utility.yul\":17164:17165   */\n      dup1\n        /* \"#utility.yul\":17157:17169   */\n      revert\n        /* \"#utility.yul\":17111:17171   */\n    tag_560:\n        /* \"#utility.yul\":17061:17177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17183:17329   */\n    tag_323:\n        /* \"#utility.yul\":17268:17304   */\n      tag_562\n        /* \"#utility.yul\":17298:17303   */\n      dup2\n        /* \"#utility.yul\":17268:17304   */\n      tag_518\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":17261:17266   */\n      dup2\n        /* \"#utility.yul\":17258:17305   */\n      eq\n        /* \"#utility.yul\":17248:17323   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":17319:17320   */\n      0x00\n        /* \"#utility.yul\":17316:17317   */\n      dup1\n        /* \"#utility.yul\":17309:17321   */\n      revert\n        /* \"#utility.yul\":17248:17323   */\n    tag_563:\n        /* \"#utility.yul\":17183:17329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17335:17485   */\n    tag_327:\n        /* \"#utility.yul\":17422:17460   */\n      tag_565\n        /* \"#utility.yul\":17454:17459   */\n      dup2\n        /* \"#utility.yul\":17422:17460   */\n      tag_521\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":17415:17420   */\n      dup2\n        /* \"#utility.yul\":17412:17461   */\n      eq\n        /* \"#utility.yul\":17402:17479   */\n      tag_566\n      jumpi\n        /* \"#utility.yul\":17475:17476   */\n      0x00\n        /* \"#utility.yul\":17472:17473   */\n      dup1\n        /* \"#utility.yul\":17465:17477   */\n      revert\n        /* \"#utility.yul\":17402:17479   */\n    tag_566:\n        /* \"#utility.yul\":17335:17485   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17491:17611   */\n    tag_331:\n        /* \"#utility.yul\":17563:17586   */\n      tag_568\n        /* \"#utility.yul\":17580:17585   */\n      dup2\n        /* \"#utility.yul\":17563:17586   */\n      tag_397\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17556:17561   */\n      dup2\n        /* \"#utility.yul\":17553:17587   */\n      eq\n        /* \"#utility.yul\":17543:17605   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":17601:17602   */\n      0x00\n        /* \"#utility.yul\":17598:17599   */\n      dup1\n        /* \"#utility.yul\":17591:17603   */\n      revert\n        /* \"#utility.yul\":17543:17605   */\n    tag_569:\n        /* \"#utility.yul\":17491:17611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17617:17739   */\n    tag_335:\n        /* \"#utility.yul\":17690:17714   */\n      tag_571\n        /* \"#utility.yul\":17708:17713   */\n      dup2\n        /* \"#utility.yul\":17690:17714   */\n      tag_401\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":17683:17688   */\n      dup2\n        /* \"#utility.yul\":17680:17715   */\n      eq\n        /* \"#utility.yul\":17670:17733   */\n      tag_572\n      jumpi\n        /* \"#utility.yul\":17729:17730   */\n      0x00\n        /* \"#utility.yul\":17726:17727   */\n      dup1\n        /* \"#utility.yul\":17719:17731   */\n      revert\n        /* \"#utility.yul\":17670:17733   */\n    tag_572:\n        /* \"#utility.yul\":17617:17739   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220725d1362d699ad28253183ba856b1873e2651471173857098e3cacad05bd377c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611f6b806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063900cf0cf116100ad578063af14052c11610071578063af14052c146102f9578063cd6dc68714610303578063d94ad8371461031f578063e9fa88a41461033d578063f4fefa49146103595761012c565b8063900cf0cf146102655780639db59b2f146102835780639e30bac5146102a1578063a37069ee146102bd578063ab33c5ca146102db5761012c565b806360961528116100f457806360961528146101d55780636de729db146101f35780637486cdea1461020f5780637b56c2b21461022d5780638001066d146102495761012c565b80633a785af1146101315780633d6a46e5146101615780634dafa35e1461017d57806353a15edc1461019b5780635ee01540146101b7575b600080fd5b61014b600480360381019061014691906114c0565b610375565b6040516101589190611696565b60405180910390f35b61017b60048036038101906101769190611466565b610547565b005b61018561058b565b6040516101929190611660565b60405180910390f35b6101b560048036038101906101b09190611527565b6105b1565b005b6101bf6105bb565b6040516101cc9190611696565b60405180910390f35b6101dd6105c1565b6040516101ea919061167b565b60405180910390f35b61020d60048036038101906102089190611527565b6105e7565b005b6102176105f1565b6040516102249190611696565b60405180910390f35b610247600480360381019061024291906113e6565b6105f7565b005b610263600480360381019061025e9190611493565b61076d565b005b61026d610785565b60405161027a91906116b1565b60405180910390f35b61028b61078b565b6040516102989190611696565b60405180910390f35b6102bb60048036038101906102b69190611466565b610791565b005b6102c56107d5565b6040516102d291906116b1565b60405180910390f35b6102e36107db565b6040516102f0919061167b565b60405180910390f35b610301610801565b005b61031d60048036038101906103189190611426565b610d45565b005b610327610e5c565b60405161033491906116b1565b60405180910390f35b61035760048036038101906103529190611493565b610e62565b005b610373600480360381019061036e9190611493565b610e7a565b005b60008061038f866012600a61038a9190611912565b610e92565b905060006103b36103a08584610edd565b6012600a6103ae9190611912565b610f45565b90506103cd6012600a6103c69190611912565b6064610edd565b8113156103ef576103ec6012600a6103e59190611912565b6064610edd565b90505b6104266012600a6104009190611912565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610edd565b811215610467576104646012600a61043e9190611912565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610edd565b90505b6000610480826012600a61047b9190611912565b610f98565b905060008114156104965786935050505061053f565b60006104a28789610e92565b905060006104c66104c0896012600a6104bb9190611912565b610edd565b8a610f45565b90506104e86104e2826012600a6104dd9190611912565b610edd565b84610f45565b905060006105036012600a6104fd9190611912565b83610e92565b905060008a610528610522866012600a61051d9190611912565b610edd565b84610f45565b610532919061173a565b9050809750505050505050505b949350505050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060068190555050565b60085481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060058190555050565b600a5481565b600160008082825461060991906117ce565b92505081905550600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015550507f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc4433838342604051610761949392919061161b565b60405180910390a15050565b600081121561077b57600080fd5b80600a8190555050565b60075481565b60095481565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160075461081091906117ce565b600781905550600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190611581565b8092508193505050806108cc57600080fd5b60006108f06108e8846012600a6108e39190611912565b6110ff565b600554611144565b9050600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611581565b8092508193505050806109a857600080fd5b6012600a6109b69190611912565b620f42406109c49190611b47565b8211156109ea576012600a6109d99190611912565b620f42406109e79190611b47565b91505b60006109f6838561116c565b9050600081138015610af757506012600a610a119190611912565b620f4240610a1f9190611b47565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a4a919061188e565b81600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab357600080fd5b505afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190611554565b610af591906117ce565b115b15610bf057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6457600080fd5b505afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c9190611554565b6012600a610baa9190611912565b620f4240610bb89190611b47565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610be3919061188e565b610bed9190611c35565b90505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637a43e23f600754846040518363ffffffff1660e01b8152600401610c519291906116cc565b602060405180830381600087803b158015610c6b57600080fd5b505af1158015610c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca39190611554565b90506012600a610cb39190611912565b620f4240610cc19190611b47565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610cec919061188e565b811115610cfc57610cfb611ddd565b5b6007547f41d948a7f29cc695f5d4b3ec147f766bffa165ddd317470fbe05c86d0a9c3e0485898542604051610d3494939291906116f5565b60405180910390a250505050505050565b60026012610d539190611c35565b600a610d5f9190611912565b6005610d6b9190611b47565b6006819055506012600a610d7f9190611912565b6003610d8b9190611b47565b600a8190555060026012610d9f9190611c35565b600a610dab9190611912565b600a610db79190611b47565b60098190555060026012610dcb9190611c35565b600a610dd79190611912565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6610e029190611a30565b600881905550600060078190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055505050565b60065481565b6000811315610e7057600080fd5b8060088190555050565b6000811215610e8857600080fd5b8060098190555050565b6000808284610ea19190611ba1565b905060008312158015610eb45750838113155b80610eca5750600083128015610ec957508381135b5b610ed357600080fd5b8091505092915050565b6000808284610eec9190611a30565b905060ff6001901b81141580610f10575060ff6001901b831660ff6001901b851614155b610f1957600080fd5b6000831480610f325750838382610f309190611824565b145b610f3b57600080fd5b8091505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141580610f7b575060ff6001901b8314155b610f8457600080fd5b8183610f909190611824565b905092915050565b600080600090506000841215610fb85760019050610fb584611290565b93505b60006040518060a001604052806713a04bbdfdc9be898152602001671080e992061ab32b8152602001670f2243014e544ebb8152602001670e7e0178e9d6ed508152602001670e2e820ade835f46815250905060006110178686610f45565b9050606481131561102757600080fd5b6000611037826001901b87610edd565b9050600061104e88611049858a610edd565b610e92565b9050600061105d886002610f45565b905060005b60058110156110d3578183126110b35761107c8383610e92565b92506110b06110a28588846005811061109857611097611e6a565b5b6020020151610edd565b670de0b6b3a7640000610f45565b93505b6110be826002610f45565b915080806110cb90611d4b565b915050611062565b5085156110f0576110ed6110e7898a610edd565b84610f45565b92505b82965050505050505092915050565b600080831415611112576000905061113e565b600082846111209190611b47565b905082848261112f919061188e565b1461113957600080fd5b809150505b92915050565b600080821161115257600080fd5b60008284611160919061188e565b90508091505092915050565b600061117883836112c4565b15611186576000905061128a565b600082905060006111ad6111a7866012600a6111a29190611912565b610edd565b83610f45565b905060006111c382600854600954600a54610375565b9050611284611271600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561123357600080fd5b505afa158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190611554565b83610edd565b6012600a61127f9190611912565b610f45565b93505050505b92915050565b600060ff6001901b8214156112a457600080fd5b600082126112b257816112bd565b816112bc90611d94565b5b9050919050565b6000806112e96112d6846006546110ff565b6012600a6112e49190611912565b611144565b9050828410158015611303575080611301858561132a565b105b806113215750828410801561132057508061131e848661132a565b105b5b91505092915050565b60008282111561133957600080fd5b600082846113479190611c35565b90508091505092915050565b60008135905061136281611eab565b92915050565b60008151905061137781611ec2565b92915050565b60008135905061138c81611ed9565b92915050565b6000813590506113a181611ef0565b92915050565b6000813590506113b681611f07565b92915050565b6000813590506113cb81611f1e565b92915050565b6000815190506113e081611f1e565b92915050565b600080604083850312156113fd576113fc611e99565b5b600061140b85828601611353565b925050602061141c858286016113bc565b9150509250929050565b6000806040838503121561143d5761143c611e99565b5b600061144b8582860161137d565b925050602061145c858286016113bc565b9150509250929050565b60006020828403121561147c5761147b611e99565b5b600061148a84828501611392565b91505092915050565b6000602082840312156114a9576114a8611e99565b5b60006114b7848285016113a7565b91505092915050565b600080600080608085870312156114da576114d9611e99565b5b60006114e8878288016113a7565b94505060206114f9878288016113a7565b935050604061150a878288016113a7565b925050606061151b878288016113a7565b91505092959194509250565b60006020828403121561153d5761153c611e99565b5b600061154b848285016113bc565b91505092915050565b60006020828403121561156a57611569611e99565b5b6000611578848285016113d1565b91505092915050565b6000806040838503121561159857611597611e99565b5b60006115a6858286016113d1565b92505060206115b785828601611368565b9150509250929050565b6115ca81611cf1565b82525050565b6115d981611c69565b82525050565b6115e881611d03565b82525050565b6115f781611d15565b82525050565b61160681611cbd565b82525050565b61161581611ce7565b82525050565b600060808201905061163060008301876115d0565b61163d60208301866115c1565b61164a604083018561160c565b611657606083018461160c565b95945050505050565b600060208201905061167560008301846115df565b92915050565b600060208201905061169060008301846115ee565b92915050565b60006020820190506116ab60008301846115fd565b92915050565b60006020820190506116c6600083018461160c565b92915050565b60006040820190506116e1600083018561160c565b6116ee60208301846115fd565b9392505050565b600060808201905061170a600083018761160c565b611717602083018661160c565b61172460408301856115fd565b611731606083018461160c565b95945050505050565b600061174582611cbd565b915061175083611cbd565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561178b5761178a611e0c565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156117c3576117c2611e0c565b5b828201905092915050565b60006117d982611ce7565b91506117e483611ce7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561181957611818611e0c565b5b828201905092915050565b600061182f82611cbd565b915061183a83611cbd565b92508261184a57611849611e3b565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561188357611882611e0c565b5b828205905092915050565b600061189982611ce7565b91506118a483611ce7565b9250826118b4576118b3611e3b565b5b828204905092915050565b6000808291508390505b6001851115611909578086048111156118e5576118e4611e0c565b5b60018516156118f45780820291505b808102905061190285611e9e565b94506118c9565b94509492505050565b600061191d82611ce7565b915061192883611ce7565b92506119557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461195d565b905092915050565b60008261196d5760019050611a29565b8161197b5760009050611a29565b8160018114611991576002811461199b576119ca565b6001915050611a29565b60ff8411156119ad576119ac611e0c565b5b8360020a9150848211156119c4576119c3611e0c565b5b50611a29565b5060208310610133831016604e8410600b84101617156119ff5782820a9050838111156119fa576119f9611e0c565b5b611a29565b611a0c84848460016118bf565b92509050818404811115611a2357611a22611e0c565b5b81810290505b9392505050565b6000611a3b82611cbd565b9150611a4683611cbd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611a8557611a84611e0c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615611ac257611ac1611e0c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611aff57611afe611e0c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611b3c57611b3b611e0c565b5b828202905092915050565b6000611b5282611ce7565b9150611b5d83611ce7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b9657611b95611e0c565b5b828202905092915050565b6000611bac82611cbd565b9150611bb783611cbd565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615611bf257611bf1611e0c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611c2a57611c29611e0c565b5b828203905092915050565b6000611c4082611ce7565b9150611c4b83611ce7565b925082821015611c5e57611c5d611e0c565b5b828203905092915050565b6000611c7482611cc7565b9050919050565b6000611c8682611cc7565b9050919050565b60008115159050919050565b6000611ca482611c69565b9050919050565b6000611cb682611c69565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611cfc82611d27565b9050919050565b6000611d0e82611d27565b9050919050565b6000611d2082611d27565b9050919050565b6000611d3282611d39565b9050919050565b6000611d4482611cc7565b9050919050565b6000611d5682611ce7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d8957611d88611e0c565b5b600182019050919050565b6000611d9f82611cbd565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611dd257611dd1611e0c565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b611eb481611c7b565b8114611ebf57600080fd5b50565b611ecb81611c8d565b8114611ed657600080fd5b50565b611ee281611c99565b8114611eed57600080fd5b50565b611ef981611cab565b8114611f0457600080fd5b50565b611f1081611cbd565b8114611f1b57600080fd5b50565b611f2781611ce7565b8114611f3257600080fd5b5056fea2646970667358221220725d1362d699ad28253183ba856b1873e2651471173857098e3cacad05bd377c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900CF0CF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAF14052C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAF14052C EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xD94AD837 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xE9FA88A4 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF4FEFA49 EQ PUSH2 0x359 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x9DB59B2F EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x9E30BAC5 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA37069EE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAB33C5CA EQ PUSH2 0x2DB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x60961528 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x60961528 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6DE729DB EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x7486CDEA EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7B56C2B2 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8001066D EQ PUSH2 0x249 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3A785AF1 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x3D6A46E5 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x4DAFA35E EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x53A15EDC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x5EE01540 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH2 0x801 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xE7A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38F DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x3A0 DUP6 DUP5 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD PUSH1 0x12 PUSH1 0xA PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xEDD JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x3EF JUMPI PUSH2 0x3EC PUSH1 0x12 PUSH1 0xA PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x426 PUSH1 0x12 PUSH1 0xA PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xEDD JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x467 JUMPI PUSH2 0x464 PUSH1 0x12 PUSH1 0xA PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x496 JUMPI DUP7 SWAP4 POP POP POP POP PUSH2 0x53F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP8 DUP10 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x4C0 DUP10 PUSH1 0x12 PUSH1 0xA PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP11 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E8 PUSH2 0x4E2 DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP5 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x503 PUSH1 0x12 PUSH1 0xA PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP11 PUSH2 0x528 PUSH2 0x522 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP5 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 CALLER DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x761 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x161B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x896 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F0 PUSH2 0x8E8 DUP5 PUSH1 0x12 PUSH1 0xA PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x972 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x12 PUSH1 0xA PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x9E7 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 DUP4 DUP6 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT DUP1 ISZERO PUSH2 0xAF7 JUMPI POP PUSH1 0x12 PUSH1 0xA PUSH2 0xA11 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A43E23F PUSH1 0x7 SLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC51 SWAP3 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0xA PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0x1DDD JUMP JUMPDEST JUMPDEST PUSH1 0x7 SLOAD PUSH32 0x41D948A7F29CC695F5D4B3EC147F766BFFA165DDD317470FBE05C86D0A9C3E04 DUP6 DUP10 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD34 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x12 PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0xA PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x5 PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xA PUSH2 0xD7F SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0xA PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0xA PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0xA PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0xE70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0xECA JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xEC9 JUMPI POP DUP4 DUP2 SGT JUMPDEST JUMPDEST PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP2 EQ ISZERO DUP1 PUSH2 0xF10 JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 AND PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP6 AND EQ ISZERO JUMPDEST PUSH2 0xF19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0xF32 JUMPI POP DUP4 DUP4 DUP3 PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO DUP1 PUSH2 0xF7B JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 EQ ISZERO JUMPDEST PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xF90 SWAP2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP5 SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xFB5 DUP5 PUSH2 0x1290 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH8 0x13A04BBDFDC9BE89 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1080E992061AB32B DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xF2243014E544EBB DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE7E0178E9D6ED50 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE2E820ADE835F46 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x1017 DUP7 DUP7 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 SGT ISZERO PUSH2 0x1027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP3 PUSH1 0x1 SWAP1 SHL DUP8 PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x104E DUP9 PUSH2 0x1049 DUP6 DUP11 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x105D DUP9 PUSH1 0x2 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x10D3 JUMPI DUP2 DUP4 SLT PUSH2 0x10B3 JUMPI PUSH2 0x107C DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP3 POP PUSH2 0x10B0 PUSH2 0x10A2 DUP6 DUP9 DUP5 PUSH1 0x5 DUP2 LT PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0x1E6A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xEDD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH2 0x10BE DUP3 PUSH1 0x2 PUSH2 0xF45 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x10CB SWAP1 PUSH2 0x1D4B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1062 JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0x10F0 JUMPI PUSH2 0x10ED PUSH2 0x10E7 DUP10 DUP11 PUSH2 0xEDD JUMP JUMPDEST DUP5 PUSH2 0xF45 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1112 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1120 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x112F SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST EQ PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 DUP4 DUP4 PUSH2 0x12C4 JUMP JUMPDEST ISZERO PUSH2 0x1186 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x11AD PUSH2 0x11A7 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x11A2 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11C3 DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x375 JUMP JUMPDEST SWAP1 POP PUSH2 0x1284 PUSH2 0x1271 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST DUP4 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP3 EQ ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT PUSH2 0x12B2 JUMPI DUP2 PUSH2 0x12BD JUMP JUMPDEST DUP2 PUSH2 0x12BC SWAP1 PUSH2 0x1D94 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12E9 PUSH2 0x12D6 DUP5 PUSH1 0x6 SLOAD PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x1303 JUMPI POP DUP1 PUSH2 0x1301 DUP6 DUP6 PUSH2 0x132A JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x1321 JUMPI POP DUP3 DUP5 LT DUP1 ISZERO PUSH2 0x1320 JUMPI POP DUP1 PUSH2 0x131E DUP5 DUP7 PUSH2 0x132A JUMP JUMPDEST LT JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1362 DUP2 PUSH2 0x1EAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1377 DUP2 PUSH2 0x1EC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138C DUP2 PUSH2 0x1ED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A1 DUP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B6 DUP2 PUSH2 0x1F07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13CB DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E0 DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140B DUP6 DUP3 DUP7 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x141C DUP6 DUP3 DUP7 ADD PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144B DUP6 DUP3 DUP7 ADD PUSH2 0x137D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x145C DUP6 DUP3 DUP7 ADD PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147B PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B7 DUP5 DUP3 DUP6 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x14F9 DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x150A DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x151B DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH2 0x153C PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154B DUP5 DUP3 DUP6 ADD PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156A JUMPI PUSH2 0x1569 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1578 DUP5 DUP3 DUP6 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1598 JUMPI PUSH2 0x1597 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1368 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CA DUP2 PUSH2 0x1CF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15D9 DUP2 PUSH2 0x1C69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15E8 DUP2 PUSH2 0x1D03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x1CBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1615 DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1630 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x163D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x164A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1657 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x160C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1675 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x160C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x16EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x170A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1717 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1724 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1731 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x160C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1750 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x178B JUMPI PUSH2 0x178A PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D9 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E4 DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1819 JUMPI PUSH2 0x1818 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x183A DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A4 DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1909 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x18F4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1902 DUP6 PUSH2 0x1E9E JUMP JUMPDEST SWAP5 POP PUSH2 0x18C9 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191D DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1928 DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1955 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x195D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x196D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1A29 JUMP JUMPDEST DUP2 PUSH2 0x197B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1A29 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1991 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x199B JUMPI PUSH2 0x19CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x19C4 JUMPI PUSH2 0x19C3 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST POP PUSH2 0x1A29 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x19FF JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x1A0C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x18BF JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3B DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC1 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAC DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB7 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF1 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C40 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4B DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C74 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C86 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 DUP3 PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 DUP3 PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFC DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0E DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D32 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D44 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D56 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1DD2 JUMPI PUSH2 0x1DD1 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB4 DUP2 PUSH2 0x1C7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1ECB DUP2 PUSH2 0x1C8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1ED6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EE2 DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF9 DUP2 PUSH2 0x1CAB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F10 DUP2 PUSH2 0x1CBD JUMP JUMPDEST DUP2 EQ PUSH2 0x1F1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F27 DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x5D1362D699AD28253183BA856B1873E2651471 OR CODESIZE JUMPI MULMOD DUP15 EXTCODECOPY 0xAC 0xAD SDIV 0xBD CALLDATACOPY PUSH29 0x64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "643:9217:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@abs_1049": {
									"entryPoint": 4752,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseCpi_75": {
									"entryPoint": 2005,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cmmd_67": {
									"entryPoint": 1419,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@computeRebasePercentage_566": {
									"entryPoint": 885,
									"id": 566,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@computeSupplyDelta_632": {
									"entryPoint": 4460,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cpiOracle_70": {
									"entryPoint": 2011,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deviationThreshold_77": {
									"entryPoint": 3676,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_780": {
									"entryPoint": 4420,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_948": {
									"entryPoint": 3909,
									"id": 948,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@epoch_79": {
									"entryPoint": 1925,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@faucet_717": {
									"entryPoint": 1527,
									"id": 717,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_420": {
									"entryPoint": 3397,
									"id": 420,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@marketOracle_73": {
									"entryPoint": 1473,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_755": {
									"entryPoint": 4351,
									"id": 755,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_922": {
									"entryPoint": 3805,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rebaseFunctionGrowth_109": {
									"entryPoint": 1521,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseFunctionLowerPercentage_105": {
									"entryPoint": 1467,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseFunctionUpperPercentage_107": {
									"entryPoint": 1931,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebase_247": {
									"entryPoint": 2049,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBaseCpi_341": {
									"entryPoint": 1511,
									"id": 341,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setCpiOracle_259": {
									"entryPoint": 1351,
									"id": 259,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDeviationThreshold_330": {
									"entryPoint": 1457,
									"id": 330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketOracle_271": {
									"entryPoint": 1937,
									"id": 271,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRebaseFunctionGrowth_287": {
									"entryPoint": 1901,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRebaseFunctionLowerPercentage_303": {
									"entryPoint": 3682,
									"id": 303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRebaseFunctionUpperPercentage_319": {
									"entryPoint": 3706,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_805": {
									"entryPoint": 4906,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_987": {
									"entryPoint": 3730,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@twoPower_1203": {
									"entryPoint": 3992,
									"id": 1203,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withinDeviationThreshold_683": {
									"entryPoint": 4804,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ICMMD_$18": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IOracle_$26": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 5094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_ICMMD_$18t_uint256": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IOracle_$26": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_int256t_int256t_int256": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool_fromMemory": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5659,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICMMD_$18__to_t_address__fromStack_reversed": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IOracle_$26__to_t_address__fromStack_reversed": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_int256_t_uint256__to_t_uint256_t_uint256_t_int256_t_uint256__fromStack_reversed": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6335,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ICMMD_$18": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IOracle_$26": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICMMD_$18_to_t_address": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IOracle_$26_to_t_address": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 7851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ICMMD_$18": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IOracle_$26": {
									"entryPoint": 7920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17742:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:3",
														"type": ""
													}
												],
												"src": "7:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "238:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "253:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "247:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "293:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "269:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "269:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "206:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "214:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "222:5:3",
														"type": ""
													}
												],
												"src": "168:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "375:99:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "385:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "407:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "394:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "385:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "462:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ICMMD_$18",
																	"nodeType": "YulIdentifier",
																	"src": "423:38:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "423:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "423:45:3"
														}
													]
												},
												"name": "abi_decode_t_contract$_ICMMD_$18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "353:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "361:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "369:5:3",
														"type": ""
													}
												],
												"src": "311:163:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:101:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "635:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IOracle_$26",
																	"nodeType": "YulIdentifier",
																	"src": "594:40:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "594:47:3"
														}
													]
												},
												"name": "abi_decode_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "524:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "532:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:3",
														"type": ""
													}
												],
												"src": "480:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "704:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "714:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "736:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "723:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "714:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "778:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "752:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "752:32:3"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "682:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "690:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "698:5:3",
														"type": ""
													}
												],
												"src": "653:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "880:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "867:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "858:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "923:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "896:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "834:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "842:5:3",
														"type": ""
													}
												],
												"src": "796:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1014:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1029:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1023:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1014:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1072:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1045:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1045:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1045:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "982:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "990:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "998:5:3",
														"type": ""
													}
												],
												"src": "941:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1181:399:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1227:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1229:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1229:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1229:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1202:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1198:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1198:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1194:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:32:3"
															},
															"nodeType": "YulIf",
															"src": "1191:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1320:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1335:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1349:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1339:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1364:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1407:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1418:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1403:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1403:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1427:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1374:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1374:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1364:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1500:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1535:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1546:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1531:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1555:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1510:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1510:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1500:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1143:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1154:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1166:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1174:6:3",
														"type": ""
													}
												],
												"src": "1090:490:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1681:403:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1729:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1702:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1711:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1723:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1694:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:32:3"
															},
															"nodeType": "YulIf",
															"src": "1691:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1820:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1835:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1839:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1864:75:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1911:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1922:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1907:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1907:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1931:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ICMMD_$18",
																			"nodeType": "YulIdentifier",
																			"src": "1874:32:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1874:65:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1864:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2004:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2039:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2050:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2035:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2035:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2059:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2014:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2014:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2004:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ICMMD_$18t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1643:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1654:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1666:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1674:6:3",
														"type": ""
													}
												],
												"src": "1586:498:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2170:277:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2216:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2218:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2218:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2218:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2187:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:32:3"
															},
															"nodeType": "YulIf",
															"src": "2180:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2309:131:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2324:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2328:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2353:77:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2402:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2413:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2398:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2398:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2422:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IOracle_$26",
																			"nodeType": "YulIdentifier",
																			"src": "2363:34:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:67:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2140:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2151:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2163:6:3",
														"type": ""
													}
												],
												"src": "2090:357:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:3"
															},
															"nodeType": "YulIf",
															"src": "2528:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:3",
														"type": ""
													}
												],
												"src": "2453:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2899:644:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2946:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2948:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2948:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2920:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2929:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2916:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2916:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2941:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2912:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:33:3"
															},
															"nodeType": "YulIf",
															"src": "2909:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3039:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3054:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3068:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3058:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3117:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3128:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3113:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3113:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3137:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "3093:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3093:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3083:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3165:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3180:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3194:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3184:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3210:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3244:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3255:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3240:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3240:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "3220:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3220:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3210:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3292:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3307:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3311:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3337:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3371:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3382:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3367:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3367:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3391:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "3347:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3337:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3419:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3434:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3448:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3438:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3464:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3498:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3509:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3494:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3494:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3518:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "3474:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3474:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3464:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_int256t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2845:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2856:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2868:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2876:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2884:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2892:6:3",
														"type": ""
													}
												],
												"src": "2786:757:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3615:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3661:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3663:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3663:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3663:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3636:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3645:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3632:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3632:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3657:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:32:3"
															},
															"nodeType": "YulIf",
															"src": "3625:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3754:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3769:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3773:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3798:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3833:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3844:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3829:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3829:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3853:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3808:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3808:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3798:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3585:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3596:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3608:6:3",
														"type": ""
													}
												],
												"src": "3549:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4007:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4009:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4009:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4009:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3982:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3991:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4003:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:32:3"
															},
															"nodeType": "YulIf",
															"src": "3971:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4100:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4115:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4129:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4119:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4144:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4190:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4201:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4186:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4186:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4210:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4154:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4144:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3931:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3942:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3954:6:3",
														"type": ""
													}
												],
												"src": "3884:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4332:410:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4378:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4380:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4380:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4380:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4353:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4349:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4374:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4345:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4345:32:3"
															},
															"nodeType": "YulIf",
															"src": "4342:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4471:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4486:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4490:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4515:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4561:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4572:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4557:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4557:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4581:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4525:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4525:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4515:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4609:126:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4624:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4638:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4628:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4654:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4697:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4708:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4693:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4693:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4717:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4664:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4654:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4294:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4305:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4317:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4325:6:3",
														"type": ""
													}
												],
												"src": "4241:501:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4821:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4882:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4843:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4843:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4831:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4831:58:3"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4809:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4816:3:3",
														"type": ""
													}
												],
												"src": "4748:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4966:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4983:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5006:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4988:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4976:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4976:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4954:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4961:3:3",
														"type": ""
													}
												],
												"src": "4901:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:78:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5119:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5167:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICMMD_$18_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5124:42:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5124:49:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5112:62:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5090:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5097:3:3",
														"type": ""
													}
												],
												"src": "5025:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5282:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5332:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IOracle_$26_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5287:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5287:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5275:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5253:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5260:3:3",
														"type": ""
													}
												],
												"src": "5186:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5414:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5431:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5453:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "5436:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5436:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:36:3"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5402:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5409:3:3",
														"type": ""
													}
												],
												"src": "5351:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5537:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5554:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5577:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5559:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5559:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5547:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5525:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5532:3:3",
														"type": ""
													}
												],
												"src": "5472:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5786:379:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5796:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5808:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5819:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5804:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5796:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5877:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5890:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5901:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5886:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5886:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5833:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5833:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5966:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5979:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5990:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5914:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5914:80:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5914:80:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6072:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6004:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6004:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6130:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6143:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6154:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6139:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6086:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6086:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5734:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5746:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5754:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5762:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5770:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5781:4:3",
														"type": ""
													}
												],
												"src": "5596:569:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6281:136:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6291:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6303:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6291:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6383:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6396:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6407:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6392:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6327:55:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:83:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:83:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICMMD_$18__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6253:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6265:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6276:4:3",
														"type": ""
													}
												],
												"src": "6171:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6535:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6545:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6568:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6545:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6639:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6652:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6663:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6648:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6648:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6581:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6581:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IOracle_$26__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6507:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6519:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6530:4:3",
														"type": ""
													}
												],
												"src": "6423:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6775:122:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6785:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6797:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6808:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6793:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6793:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6785:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6863:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6876:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6887:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6821:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6821:69:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6747:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6759:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6770:4:3",
														"type": ""
													}
												],
												"src": "6679:218:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7001:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7011:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7023:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7034:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7011:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7091:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7104:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7115:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7100:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7047:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7047:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7047:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6973:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6985:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6996:4:3",
														"type": ""
													}
												],
												"src": "6903:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7255:204:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7265:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7277:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7288:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7273:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7273:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7265:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7345:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7358:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7354:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7354:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7301:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7301:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7424:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7437:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7448:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7433:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7433:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7382:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7382:70:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7219:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7231:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7239:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7250:4:3",
														"type": ""
													}
												],
												"src": "7131:328:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7645:369:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7655:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7667:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7678:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7663:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7655:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7736:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7749:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7760:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7692:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7817:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7830:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7841:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7826:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7826:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7773:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7897:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7910:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7921:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7906:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7855:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:70:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7979:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7992:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8003:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7988:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7988:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7935:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7935:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7935:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_int256_t_uint256__to_t_uint256_t_uint256_t_int256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7593:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7605:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7613:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7621:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7629:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7640:4:3",
														"type": ""
													}
												],
												"src": "7465:549:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8060:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8070:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8080:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8080:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8053:6:3",
														"type": ""
													}
												],
												"src": "8020:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8144:482:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8154:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8176:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "8159:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8154:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8187:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8209:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "8192:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8187:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8385:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8387:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8387:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8387:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8293:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8296:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "8289:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8289:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8282:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8282:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8305:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8312:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8380:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8308:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8308:74:3"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "8301:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8278:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:106:3"
															},
															"nodeType": "YulIf",
															"src": "8275:132:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8572:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8574:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8574:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8574:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "8481:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8484:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8477:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8477:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8492:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8499:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8567:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8495:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8495:74:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8488:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8488:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:98:3"
															},
															"nodeType": "YulIf",
															"src": "8470:124:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8604:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8615:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8618:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8611:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8611:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8604:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8131:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8134:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8140:3:3",
														"type": ""
													}
												],
												"src": "8101:525:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8676:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8686:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8709:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8691:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8686:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8720:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8743:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8725:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8720:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8883:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8885:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8885:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8885:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8804:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8811:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8879:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8807:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8807:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8801:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:81:3"
															},
															"nodeType": "YulIf",
															"src": "8798:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8915:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8926:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8929:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8915:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8663:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8666:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8672:3:3",
														"type": ""
													}
												],
												"src": "8632:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8984:344:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8994:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9016:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "8999:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8999:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8994:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9027:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9049:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9032:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9027:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9073:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9075:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9075:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9075:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9070:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:9:3"
															},
															"nodeType": "YulIf",
															"src": "9060:35:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9275:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9277:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9277:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9277:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9164:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9167:66:3",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9161:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9161:73:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9251:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9258:1:3",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9261:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9254:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9254:9:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9248:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9248:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9144:130:3"
															},
															"nodeType": "YulIf",
															"src": "9141:156:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9307:15:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9317:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9320:1:3"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "9312:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:10:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9307:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8973:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8976:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8982:1:3",
														"type": ""
													}
												],
												"src": "8943:385:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9376:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9386:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9409:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9391:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9391:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9386:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9420:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9443:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9425:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9420:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9467:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9469:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9469:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9469:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9464:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9457:9:3"
															},
															"nodeType": "YulIf",
															"src": "9454:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9499:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9508:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9511:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9504:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9504:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9499:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9365:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9368:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9374:1:3",
														"type": ""
													}
												],
												"src": "9334:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9598:775:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9608:15:3",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "9617:6:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9608:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9632:14:3",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "9641:5:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9632:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9690:677:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9778:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "9780:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9780:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9780:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9756:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "9766:3:3"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "9771:4:3"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "9762:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9762:14:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "9753:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9753:24:3"
																		},
																		"nodeType": "YulIf",
																		"src": "9750:50:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9845:419:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "10225:25:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "10238:5:3"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "10245:4:3"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "10234:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10234:16:3"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "10225:5:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9820:8:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9830:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9816:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9816:16:3"
																		},
																		"nodeType": "YulIf",
																		"src": "9813:451:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10277:23:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10289:4:3"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10295:4:3"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "10285:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10285:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "10277:4:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10313:44:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "10348:8:3"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "10325:22:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10325:32:3"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "10313:8:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9666:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9663:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9663:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9679:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9659:3:3",
																"statements": []
															},
															"src": "9655:712:3"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "9553:6:3",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "9561:5:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9568:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "9578:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9586:5:3",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9593:4:3",
														"type": ""
													}
												],
												"src": "9525:848:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10445:219:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10455:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10481:4:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10463:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10463:23:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10455:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10495:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10525:8:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10507:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10507:27:3"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "10495:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10544:113:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10574:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10580:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10590:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "10553:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10553:104:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10544:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10420:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10426:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10439:5:3",
														"type": ""
													}
												],
												"src": "10379:285:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10730:1013:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10925:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10927:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10936:1:3",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10927:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10938:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10915:8:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:16:3"
															},
															"nodeType": "YulIf",
															"src": "10905:40:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10970:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10972:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10981:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10972:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10983:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10964:4:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10957:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10957:12:3"
															},
															"nodeType": "YulIf",
															"src": "10954:36:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11100:20:3",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "11102:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11111:1:3",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11102:5:3"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11113:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11093:27:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11098:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11144:176:3",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11179:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "11181:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11181:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11181:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11164:8:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11174:3:3",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "11161:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11161:17:3"
																				},
																				"nodeType": "YulIf",
																				"src": "11158:43:3"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "11214:25:3",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11227:1:3",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11230:8:3"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "11223:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11223:16:3"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11214:5:3"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11270:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "11272:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11272:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11272:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "11258:5:3"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "11265:3:3"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "11255:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11255:14:3"
																				},
																				"nodeType": "YulIf",
																				"src": "11252:40:3"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11305:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11129:191:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11134:1:3",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "11050:4:3"
															},
															"nodeType": "YulSwitch",
															"src": "11043:277:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11452:123:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11466:28:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11479:4:3"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11485:8:3"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "11475:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11475:19:3"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11466:5:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11525:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "11527:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11527:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11527:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "11513:5:3"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "11520:3:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11510:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11510:14:3"
																		},
																		"nodeType": "YulIf",
																		"src": "11507:40:3"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11560:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11355:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11361:2:3",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11352:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11352:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11369:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11379:2:3",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11366:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11366:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11348:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11348:35:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11404:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11410:3:3",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11401:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11401:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11419:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11429:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11416:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11416:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11397:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11397:36:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11332:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11332:111:3"
															},
															"nodeType": "YulIf",
															"src": "11329:246:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11585:57:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11619:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11622:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11628:8:3"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "11638:3:3"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "11600:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:42:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11585:5:3"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "11592:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11681:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11683:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11683:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11683:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "11658:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "11669:3:3"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "11674:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "11665:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11665:14:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11655:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11655:25:3"
															},
															"nodeType": "YulIf",
															"src": "11652:51:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11712:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "11725:5:3"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11732:4:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11721:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11721:16:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11712:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10700:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10706:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "10716:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10724:5:3",
														"type": ""
													}
												],
												"src": "10670:1073:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11796:944:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11806:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11828:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11811:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11811:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11806:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11839:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11861:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11844:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11844:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11839:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12050:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12052:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12052:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12052:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11948:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11951:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "11944:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11944:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11959:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11962:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "11955:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11955:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11940:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11940:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "11970:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11977:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12045:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11973:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11973:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11967:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11967:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11936:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11936:113:3"
															},
															"nodeType": "YulIf",
															"src": "11933:139:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12261:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12263:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12263:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12263:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12157:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12160:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "12153:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12153:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12168:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12171:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "12164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12164:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12149:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12149:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12180:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12188:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12256:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "12183:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12183:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12145:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12145:115:3"
															},
															"nodeType": "YulIf",
															"src": "12142:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12472:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12474:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12474:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12474:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12368:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12371:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "12364:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12364:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12379:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12382:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "12375:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12375:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12360:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12360:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12391:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12399:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12467:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "12394:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12394:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12387:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12387:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12356:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12356:115:3"
															},
															"nodeType": "YulIf",
															"src": "12353:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12682:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12684:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12684:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12684:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12578:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12581:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "12574:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12574:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12589:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12592:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "12585:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12585:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12570:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12570:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12601:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12609:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12677:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "12604:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12604:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12597:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12597:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12566:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12566:115:3"
															},
															"nodeType": "YulIf",
															"src": "12563:141:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12714:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12729:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12732:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12725:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12725:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12714:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11779:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11782:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11788:7:3",
														"type": ""
													}
												],
												"src": "11749:991:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12794:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12804:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12827:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12809:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12809:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12804:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12838:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12861:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12843:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12843:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12838:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13036:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13038:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13038:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13038:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12948:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12941:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12941:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12934:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12934:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12956:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12963:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13031:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12959:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12959:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12953:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12953:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12930:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12930:105:3"
															},
															"nodeType": "YulIf",
															"src": "12927:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13068:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13083:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13086:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13079:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13079:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13068:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12777:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12780:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12786:7:3",
														"type": ""
													}
												],
												"src": "12746:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13144:483:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13154:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13176:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13159:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13159:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13154:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13187:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13209:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13192:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13192:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13187:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13386:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13388:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13388:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13388:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13294:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13297:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13290:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13290:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13283:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13283:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13306:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13313:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13381:1:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13309:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13309:74:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13302:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13302:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13279:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13279:106:3"
															},
															"nodeType": "YulIf",
															"src": "13276:132:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13572:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13574:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13574:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13574:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13481:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13477:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13492:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13499:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13567:1:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13495:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13495:74:3"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "13488:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13488:82:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13473:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:98:3"
															},
															"nodeType": "YulIf",
															"src": "13470:124:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13604:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13616:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13619:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13612:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13612:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13604:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13130:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13133:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13139:4:3",
														"type": ""
													}
												],
												"src": "13100:527:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13678:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13688:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13711:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13693:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13688:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13722:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13745:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13727:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13727:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13722:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13769:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13771:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13771:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13771:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13763:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13766:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13760:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13760:8:3"
															},
															"nodeType": "YulIf",
															"src": "13757:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13801:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13813:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13816:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13809:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13809:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13801:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13664:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13667:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13673:4:3",
														"type": ""
													}
												],
												"src": "13633:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13875:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13885:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13914:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13896:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13896:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13885:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13857:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13867:7:3",
														"type": ""
													}
												],
												"src": "13830:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13985:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13995:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14024:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14006:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14006:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13995:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13967:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13977:7:3",
														"type": ""
													}
												],
												"src": "13932:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14084:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14094:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14119:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14112:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14112:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14105:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14094:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14066:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14076:7:3",
														"type": ""
													}
												],
												"src": "14042:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14195:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14205:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14234:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14216:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14216:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14205:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ICMMD_$18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14177:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14187:7:3",
														"type": ""
													}
												],
												"src": "14138:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14311:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14321:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14350:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14332:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14332:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14321:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14293:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14303:7:3",
														"type": ""
													}
												],
												"src": "14252:110:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14412:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14422:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14433:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14422:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14394:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14404:7:3",
														"type": ""
													}
												],
												"src": "14368:76:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14495:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14505:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14520:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14527:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14516:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14516:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14505:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14477:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14487:7:3",
														"type": ""
													}
												],
												"src": "14450:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14627:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14637:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14648:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14637:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14609:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14619:7:3",
														"type": ""
													}
												],
												"src": "14582:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14733:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14743:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14787:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14756:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14756:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14743:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14713:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14723:9:3",
														"type": ""
													}
												],
												"src": "14665:134:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14877:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14887:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14931:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14900:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14900:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14887:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICMMD_$18_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14857:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14867:9:3",
														"type": ""
													}
												],
												"src": "14805:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15023:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15033:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15077:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15046:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15046:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15033:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IOracle_$26_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15003:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15013:9:3",
														"type": ""
													}
												],
												"src": "14949:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15155:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15165:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15209:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15178:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15178:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15165:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15135:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15145:9:3",
														"type": ""
													}
												],
												"src": "15095:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15287:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15297:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15328:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15310:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15310:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15297:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15267:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15277:9:3",
														"type": ""
													}
												],
												"src": "15227:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15389:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15399:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15426:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15408:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15399:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15522:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15524:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15524:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15524:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15454:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15444:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15444:77:3"
															},
															"nodeType": "YulIf",
															"src": "15441:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15553:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15564:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15571:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15560:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15560:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15553:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15375:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15385:3:3",
														"type": ""
													}
												],
												"src": "15346:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15624:189:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15634:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15660:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "15643:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15643:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15634:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15756:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15758:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15758:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15758:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15681:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15688:66:3",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15678:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15678:77:3"
															},
															"nodeType": "YulIf",
															"src": "15675:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15787:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15798:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15801:5:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15794:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15787:3:3"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15610:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15620:3:3",
														"type": ""
													}
												],
												"src": "15585:228:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15847:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15864:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15867:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15857:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15857:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15857:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15961:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15964:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15954:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15954:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15954:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15985:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15988:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15978:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15978:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15978:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "15819:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16033:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16050:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16053:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16147:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16150:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16140:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16140:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16140:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16171:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16174:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16164:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16164:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16164:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16005:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16219:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16236:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16239:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16229:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16229:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16229:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16333:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16336:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16326:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16326:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16326:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16357:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16360:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16350:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16350:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16350:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16191:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16405:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16422:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16425:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16415:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16415:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16415:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16519:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16522:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16512:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16512:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16512:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16543:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16546:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16536:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16536:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16377:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16652:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16669:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16672:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16662:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16662:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16662:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "16563:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16775:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16792:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16795:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16785:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16785:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16785:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "16686:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16860:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16870:34:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16895:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16898:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16891:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16891:13:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "16870:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16841:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "16851:8:3",
														"type": ""
													}
												],
												"src": "16809:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16968:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17033:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17042:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17045:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17035:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17035:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17035:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16991:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17024:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "16998:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16998:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16988:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16988:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16981:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16981:51:3"
															},
															"nodeType": "YulIf",
															"src": "16978:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16961:5:3",
														"type": ""
													}
												],
												"src": "16917:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17101:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17155:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17164:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17167:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17157:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17157:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17157:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17146:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17131:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17131:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17121:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17121:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17114:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17114:40:3"
															},
															"nodeType": "YulIf",
															"src": "17111:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17094:5:3",
														"type": ""
													}
												],
												"src": "17061:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17238:91:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17307:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17316:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17319:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17309:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17309:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17309:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17261:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17298:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ICMMD_$18",
																					"nodeType": "YulIdentifier",
																					"src": "17268:29:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17268:36:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17258:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17258:47:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17251:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17251:55:3"
															},
															"nodeType": "YulIf",
															"src": "17248:75:3"
														}
													]
												},
												"name": "validator_revert_t_contract$_ICMMD_$18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17231:5:3",
														"type": ""
													}
												],
												"src": "17183:146:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17392:93:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17463:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17472:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17475:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17465:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17465:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17465:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17415:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17454:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IOracle_$26",
																					"nodeType": "YulIdentifier",
																					"src": "17422:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17422:38:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17412:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17412:49:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17405:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17405:57:3"
															},
															"nodeType": "YulIf",
															"src": "17402:77:3"
														}
													]
												},
												"name": "validator_revert_t_contract$_IOracle_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17385:5:3",
														"type": ""
													}
												],
												"src": "17335:150:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17533:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17589:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17598:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17601:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17591:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17591:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17591:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17556:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17580:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "17563:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17563:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17553:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17553:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17546:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17546:42:3"
															},
															"nodeType": "YulIf",
															"src": "17543:62:3"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17526:5:3",
														"type": ""
													}
												],
												"src": "17491:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17660:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17717:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17726:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17729:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17719:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17719:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17719:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17683:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17708:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17690:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17690:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17680:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17680:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17673:43:3"
															},
															"nodeType": "YulIf",
															"src": "17670:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17653:5:3",
														"type": ""
													}
												],
												"src": "17617:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ICMMD_$18(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ICMMD_$18(value)\n    }\n\n    function abi_decode_t_contract$_IOracle_$26(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IOracle_$26(value)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ICMMD_$18t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ICMMD_$18(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IOracle_$26(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IOracle_$26(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_int256t_int256t_int256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICMMD_$18_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IOracle_$26_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ICMMD_$18__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICMMD_$18_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IOracle_$26__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IOracle_$26_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_int256_t_uint256__to_t_uint256_t_uint256_t_int256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // underflow, if y >= 0 and x < (minValue + y)\n        if and(iszero(slt(y, 0)), slt(x, add(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if y < 0 and x > (maxValue + y)\n        if and(slt(y, 0), sgt(x, add(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ICMMD_$18(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IOracle_$26(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_ICMMD_$18_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IOracle_$26_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ICMMD_$18(value) {\n        if iszero(eq(value, cleanup_t_contract$_ICMMD_$18(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IOracle_$26(value) {\n        if iszero(eq(value, cleanup_t_contract$_IOracle_$26(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063900cf0cf116100ad578063af14052c11610071578063af14052c146102f9578063cd6dc68714610303578063d94ad8371461031f578063e9fa88a41461033d578063f4fefa49146103595761012c565b8063900cf0cf146102655780639db59b2f146102835780639e30bac5146102a1578063a37069ee146102bd578063ab33c5ca146102db5761012c565b806360961528116100f457806360961528146101d55780636de729db146101f35780637486cdea1461020f5780637b56c2b21461022d5780638001066d146102495761012c565b80633a785af1146101315780633d6a46e5146101615780634dafa35e1461017d57806353a15edc1461019b5780635ee01540146101b7575b600080fd5b61014b600480360381019061014691906114c0565b610375565b6040516101589190611696565b60405180910390f35b61017b60048036038101906101769190611466565b610547565b005b61018561058b565b6040516101929190611660565b60405180910390f35b6101b560048036038101906101b09190611527565b6105b1565b005b6101bf6105bb565b6040516101cc9190611696565b60405180910390f35b6101dd6105c1565b6040516101ea919061167b565b60405180910390f35b61020d60048036038101906102089190611527565b6105e7565b005b6102176105f1565b6040516102249190611696565b60405180910390f35b610247600480360381019061024291906113e6565b6105f7565b005b610263600480360381019061025e9190611493565b61076d565b005b61026d610785565b60405161027a91906116b1565b60405180910390f35b61028b61078b565b6040516102989190611696565b60405180910390f35b6102bb60048036038101906102b69190611466565b610791565b005b6102c56107d5565b6040516102d291906116b1565b60405180910390f35b6102e36107db565b6040516102f0919061167b565b60405180910390f35b610301610801565b005b61031d60048036038101906103189190611426565b610d45565b005b610327610e5c565b60405161033491906116b1565b60405180910390f35b61035760048036038101906103529190611493565b610e62565b005b610373600480360381019061036e9190611493565b610e7a565b005b60008061038f866012600a61038a9190611912565b610e92565b905060006103b36103a08584610edd565b6012600a6103ae9190611912565b610f45565b90506103cd6012600a6103c69190611912565b6064610edd565b8113156103ef576103ec6012600a6103e59190611912565b6064610edd565b90505b6104266012600a6104009190611912565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610edd565b811215610467576104646012600a61043e9190611912565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610edd565b90505b6000610480826012600a61047b9190611912565b610f98565b905060008114156104965786935050505061053f565b60006104a28789610e92565b905060006104c66104c0896012600a6104bb9190611912565b610edd565b8a610f45565b90506104e86104e2826012600a6104dd9190611912565b610edd565b84610f45565b905060006105036012600a6104fd9190611912565b83610e92565b905060008a610528610522866012600a61051d9190611912565b610edd565b84610f45565b610532919061173a565b9050809750505050505050505b949350505050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060068190555050565b60085481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060058190555050565b600a5481565b600160008082825461060991906117ce565b92505081905550600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015550507f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc4433838342604051610761949392919061161b565b60405180910390a15050565b600081121561077b57600080fd5b80600a8190555050565b60075481565b60095481565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160075461081091906117ce565b600781905550600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190611581565b8092508193505050806108cc57600080fd5b60006108f06108e8846012600a6108e39190611912565b6110ff565b600554611144565b9050600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff1660e01b81526004016040805180830381600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611581565b8092508193505050806109a857600080fd5b6012600a6109b69190611912565b620f42406109c49190611b47565b8211156109ea576012600a6109d99190611912565b620f42406109e79190611b47565b91505b60006109f6838561116c565b9050600081138015610af757506012600a610a119190611912565b620f4240610a1f9190611b47565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a4a919061188e565b81600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab357600080fd5b505afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190611554565b610af591906117ce565b115b15610bf057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6457600080fd5b505afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c9190611554565b6012600a610baa9190611912565b620f4240610bb89190611b47565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610be3919061188e565b610bed9190611c35565b90505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637a43e23f600754846040518363ffffffff1660e01b8152600401610c519291906116cc565b602060405180830381600087803b158015610c6b57600080fd5b505af1158015610c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca39190611554565b90506012600a610cb39190611912565b620f4240610cc19190611b47565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610cec919061188e565b811115610cfc57610cfb611ddd565b5b6007547f41d948a7f29cc695f5d4b3ec147f766bffa165ddd317470fbe05c86d0a9c3e0485898542604051610d3494939291906116f5565b60405180910390a250505050505050565b60026012610d539190611c35565b600a610d5f9190611912565b6005610d6b9190611b47565b6006819055506012600a610d7f9190611912565b6003610d8b9190611b47565b600a8190555060026012610d9f9190611c35565b600a610dab9190611912565b600a610db79190611b47565b60098190555060026012610dcb9190611c35565b600a610dd79190611912565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6610e029190611a30565b600881905550600060078190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055505050565b60065481565b6000811315610e7057600080fd5b8060088190555050565b6000811215610e8857600080fd5b8060098190555050565b6000808284610ea19190611ba1565b905060008312158015610eb45750838113155b80610eca5750600083128015610ec957508381135b5b610ed357600080fd5b8091505092915050565b6000808284610eec9190611a30565b905060ff6001901b81141580610f10575060ff6001901b831660ff6001901b851614155b610f1957600080fd5b6000831480610f325750838382610f309190611824565b145b610f3b57600080fd5b8091505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141580610f7b575060ff6001901b8314155b610f8457600080fd5b8183610f909190611824565b905092915050565b600080600090506000841215610fb85760019050610fb584611290565b93505b60006040518060a001604052806713a04bbdfdc9be898152602001671080e992061ab32b8152602001670f2243014e544ebb8152602001670e7e0178e9d6ed508152602001670e2e820ade835f46815250905060006110178686610f45565b9050606481131561102757600080fd5b6000611037826001901b87610edd565b9050600061104e88611049858a610edd565b610e92565b9050600061105d886002610f45565b905060005b60058110156110d3578183126110b35761107c8383610e92565b92506110b06110a28588846005811061109857611097611e6a565b5b6020020151610edd565b670de0b6b3a7640000610f45565b93505b6110be826002610f45565b915080806110cb90611d4b565b915050611062565b5085156110f0576110ed6110e7898a610edd565b84610f45565b92505b82965050505050505092915050565b600080831415611112576000905061113e565b600082846111209190611b47565b905082848261112f919061188e565b1461113957600080fd5b809150505b92915050565b600080821161115257600080fd5b60008284611160919061188e565b90508091505092915050565b600061117883836112c4565b15611186576000905061128a565b600082905060006111ad6111a7866012600a6111a29190611912565b610edd565b83610f45565b905060006111c382600854600954600a54610375565b9050611284611271600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561123357600080fd5b505afa158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190611554565b83610edd565b6012600a61127f9190611912565b610f45565b93505050505b92915050565b600060ff6001901b8214156112a457600080fd5b600082126112b257816112bd565b816112bc90611d94565b5b9050919050565b6000806112e96112d6846006546110ff565b6012600a6112e49190611912565b611144565b9050828410158015611303575080611301858561132a565b105b806113215750828410801561132057508061131e848661132a565b105b5b91505092915050565b60008282111561133957600080fd5b600082846113479190611c35565b90508091505092915050565b60008135905061136281611eab565b92915050565b60008151905061137781611ec2565b92915050565b60008135905061138c81611ed9565b92915050565b6000813590506113a181611ef0565b92915050565b6000813590506113b681611f07565b92915050565b6000813590506113cb81611f1e565b92915050565b6000815190506113e081611f1e565b92915050565b600080604083850312156113fd576113fc611e99565b5b600061140b85828601611353565b925050602061141c858286016113bc565b9150509250929050565b6000806040838503121561143d5761143c611e99565b5b600061144b8582860161137d565b925050602061145c858286016113bc565b9150509250929050565b60006020828403121561147c5761147b611e99565b5b600061148a84828501611392565b91505092915050565b6000602082840312156114a9576114a8611e99565b5b60006114b7848285016113a7565b91505092915050565b600080600080608085870312156114da576114d9611e99565b5b60006114e8878288016113a7565b94505060206114f9878288016113a7565b935050604061150a878288016113a7565b925050606061151b878288016113a7565b91505092959194509250565b60006020828403121561153d5761153c611e99565b5b600061154b848285016113bc565b91505092915050565b60006020828403121561156a57611569611e99565b5b6000611578848285016113d1565b91505092915050565b6000806040838503121561159857611597611e99565b5b60006115a6858286016113d1565b92505060206115b785828601611368565b9150509250929050565b6115ca81611cf1565b82525050565b6115d981611c69565b82525050565b6115e881611d03565b82525050565b6115f781611d15565b82525050565b61160681611cbd565b82525050565b61161581611ce7565b82525050565b600060808201905061163060008301876115d0565b61163d60208301866115c1565b61164a604083018561160c565b611657606083018461160c565b95945050505050565b600060208201905061167560008301846115df565b92915050565b600060208201905061169060008301846115ee565b92915050565b60006020820190506116ab60008301846115fd565b92915050565b60006020820190506116c6600083018461160c565b92915050565b60006040820190506116e1600083018561160c565b6116ee60208301846115fd565b9392505050565b600060808201905061170a600083018761160c565b611717602083018661160c565b61172460408301856115fd565b611731606083018461160c565b95945050505050565b600061174582611cbd565b915061175083611cbd565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561178b5761178a611e0c565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156117c3576117c2611e0c565b5b828201905092915050565b60006117d982611ce7565b91506117e483611ce7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561181957611818611e0c565b5b828201905092915050565b600061182f82611cbd565b915061183a83611cbd565b92508261184a57611849611e3b565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561188357611882611e0c565b5b828205905092915050565b600061189982611ce7565b91506118a483611ce7565b9250826118b4576118b3611e3b565b5b828204905092915050565b6000808291508390505b6001851115611909578086048111156118e5576118e4611e0c565b5b60018516156118f45780820291505b808102905061190285611e9e565b94506118c9565b94509492505050565b600061191d82611ce7565b915061192883611ce7565b92506119557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461195d565b905092915050565b60008261196d5760019050611a29565b8161197b5760009050611a29565b8160018114611991576002811461199b576119ca565b6001915050611a29565b60ff8411156119ad576119ac611e0c565b5b8360020a9150848211156119c4576119c3611e0c565b5b50611a29565b5060208310610133831016604e8410600b84101617156119ff5782820a9050838111156119fa576119f9611e0c565b5b611a29565b611a0c84848460016118bf565b92509050818404811115611a2357611a22611e0c565b5b81810290505b9392505050565b6000611a3b82611cbd565b9150611a4683611cbd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611a8557611a84611e0c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615611ac257611ac1611e0c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611aff57611afe611e0c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611b3c57611b3b611e0c565b5b828202905092915050565b6000611b5282611ce7565b9150611b5d83611ce7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b9657611b95611e0c565b5b828202905092915050565b6000611bac82611cbd565b9150611bb783611cbd565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615611bf257611bf1611e0c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611c2a57611c29611e0c565b5b828203905092915050565b6000611c4082611ce7565b9150611c4b83611ce7565b925082821015611c5e57611c5d611e0c565b5b828203905092915050565b6000611c7482611cc7565b9050919050565b6000611c8682611cc7565b9050919050565b60008115159050919050565b6000611ca482611c69565b9050919050565b6000611cb682611c69565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611cfc82611d27565b9050919050565b6000611d0e82611d27565b9050919050565b6000611d2082611d27565b9050919050565b6000611d3282611d39565b9050919050565b6000611d4482611cc7565b9050919050565b6000611d5682611ce7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d8957611d88611e0c565b5b600182019050919050565b6000611d9f82611cbd565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611dd257611dd1611e0c565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b611eb481611c7b565b8114611ebf57600080fd5b50565b611ecb81611c8d565b8114611ed657600080fd5b50565b611ee281611c99565b8114611eed57600080fd5b50565b611ef981611cab565b8114611f0457600080fd5b50565b611f1081611cbd565b8114611f1b57600080fd5b50565b611f2781611ce7565b8114611f3257600080fd5b5056fea2646970667358221220725d1362d699ad28253183ba856b1873e2651471173857098e3cacad05bd377c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900CF0CF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAF14052C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAF14052C EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xD94AD837 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xE9FA88A4 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF4FEFA49 EQ PUSH2 0x359 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x9DB59B2F EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x9E30BAC5 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA37069EE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAB33C5CA EQ PUSH2 0x2DB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x60961528 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x60961528 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6DE729DB EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x7486CDEA EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7B56C2B2 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8001066D EQ PUSH2 0x249 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3A785AF1 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x3D6A46E5 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x4DAFA35E EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x53A15EDC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x5EE01540 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH2 0x801 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xE7A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x38F DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x3A0 DUP6 DUP5 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD PUSH1 0x12 PUSH1 0xA PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xEDD JUMP JUMPDEST DUP2 SGT ISZERO PUSH2 0x3EF JUMPI PUSH2 0x3EC PUSH1 0x12 PUSH1 0xA PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x426 PUSH1 0x12 PUSH1 0xA PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xEDD JUMP JUMPDEST DUP2 SLT ISZERO PUSH2 0x467 JUMPI PUSH2 0x464 PUSH1 0x12 PUSH1 0xA PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x496 JUMPI DUP7 SWAP4 POP POP POP POP PUSH2 0x53F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP8 DUP10 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x4C0 DUP10 PUSH1 0x12 PUSH1 0xA PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP11 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E8 PUSH2 0x4E2 DUP3 PUSH1 0x12 PUSH1 0xA PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP5 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x503 PUSH1 0x12 PUSH1 0xA PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP11 PUSH2 0x528 PUSH2 0x522 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP5 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH32 0x9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44 CALLER DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x761 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x161B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x896 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F0 PUSH2 0x8E8 DUP5 PUSH1 0x12 PUSH1 0xA PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BC5DE30 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x972 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP1 PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x12 PUSH1 0xA PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x9E7 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 DUP4 DUP6 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT DUP1 ISZERO PUSH2 0xAF7 JUMPI POP PUSH1 0x12 PUSH1 0xA PUSH2 0xA11 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A43E23F PUSH1 0x7 SLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC51 SWAP3 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0xA PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0x1DDD JUMP JUMPDEST JUMPDEST PUSH1 0x7 SLOAD PUSH32 0x41D948A7F29CC695F5D4B3EC147F766BFFA165DDD317470FBE05C86D0A9C3E04 DUP6 DUP10 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD34 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x12 PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0xA PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x5 PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xA PUSH2 0xD7F SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0xA PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0xA PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x12 PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0xA PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0xE70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0xECA JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xEC9 JUMPI POP DUP4 DUP2 SGT JUMPDEST JUMPDEST PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP2 EQ ISZERO DUP1 PUSH2 0xF10 JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 AND PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP6 AND EQ ISZERO JUMPDEST PUSH2 0xF19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0xF32 JUMPI POP DUP4 DUP4 DUP3 PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO DUP1 PUSH2 0xF7B JUMPI POP PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP4 EQ ISZERO JUMPDEST PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xF90 SWAP2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP5 SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xFB5 DUP5 PUSH2 0x1290 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH8 0x13A04BBDFDC9BE89 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x1080E992061AB32B DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xF2243014E544EBB DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE7E0178E9D6ED50 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0xE2E820ADE835F46 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x1017 DUP7 DUP7 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 SGT ISZERO PUSH2 0x1027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP3 PUSH1 0x1 SWAP1 SHL DUP8 PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x104E DUP9 PUSH2 0x1049 DUP6 DUP11 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x105D DUP9 PUSH1 0x2 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x10D3 JUMPI DUP2 DUP4 SLT PUSH2 0x10B3 JUMPI PUSH2 0x107C DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP3 POP PUSH2 0x10B0 PUSH2 0x10A2 DUP6 DUP9 DUP5 PUSH1 0x5 DUP2 LT PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0x1E6A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xEDD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH2 0x10BE DUP3 PUSH1 0x2 PUSH2 0xF45 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x10CB SWAP1 PUSH2 0x1D4B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1062 JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0x10F0 JUMPI PUSH2 0x10ED PUSH2 0x10E7 DUP10 DUP11 PUSH2 0xEDD JUMP JUMPDEST DUP5 PUSH2 0xF45 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1112 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1120 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x112F SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST EQ PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x188E JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 DUP4 DUP4 PUSH2 0x12C4 JUMP JUMPDEST ISZERO PUSH2 0x1186 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x11AD PUSH2 0x11A7 DUP7 PUSH1 0x12 PUSH1 0xA PUSH2 0x11A2 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11C3 DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x375 JUMP JUMPDEST SWAP1 POP PUSH2 0x1284 PUSH2 0x1271 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST DUP4 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x1 SWAP1 SHL DUP3 EQ ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT PUSH2 0x12B2 JUMPI DUP2 PUSH2 0x12BD JUMP JUMPDEST DUP2 PUSH2 0x12BC SWAP1 PUSH2 0x1D94 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12E9 PUSH2 0x12D6 DUP5 PUSH1 0x6 SLOAD PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x12E4 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x1303 JUMPI POP DUP1 PUSH2 0x1301 DUP6 DUP6 PUSH2 0x132A JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x1321 JUMPI POP DUP3 DUP5 LT DUP1 ISZERO PUSH2 0x1320 JUMPI POP DUP1 PUSH2 0x131E DUP5 DUP7 PUSH2 0x132A JUMP JUMPDEST LT JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1362 DUP2 PUSH2 0x1EAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1377 DUP2 PUSH2 0x1EC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138C DUP2 PUSH2 0x1ED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A1 DUP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B6 DUP2 PUSH2 0x1F07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13CB DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E0 DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140B DUP6 DUP3 DUP7 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x141C DUP6 DUP3 DUP7 ADD PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144B DUP6 DUP3 DUP7 ADD PUSH2 0x137D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x145C DUP6 DUP3 DUP7 ADD PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147B PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B7 DUP5 DUP3 DUP6 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x14F9 DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x150A DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x151B DUP8 DUP3 DUP9 ADD PUSH2 0x13A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH2 0x153C PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154B DUP5 DUP3 DUP6 ADD PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156A JUMPI PUSH2 0x1569 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1578 DUP5 DUP3 DUP6 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1598 JUMPI PUSH2 0x1597 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1368 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CA DUP2 PUSH2 0x1CF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15D9 DUP2 PUSH2 0x1C69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15E8 DUP2 PUSH2 0x1D03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x1CBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1615 DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1630 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x163D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x164A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1657 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x160C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1675 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x160C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x16EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x170A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1717 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x1724 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1731 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x160C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1750 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x178B JUMPI PUSH2 0x178A PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D9 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E4 DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1819 JUMPI PUSH2 0x1818 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x183A DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A4 DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x1E3B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1909 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x18F4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1902 DUP6 PUSH2 0x1E9E JUMP JUMPDEST SWAP5 POP PUSH2 0x18C9 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191D DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1928 DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1955 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x195D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x196D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1A29 JUMP JUMPDEST DUP2 PUSH2 0x197B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1A29 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1991 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x199B JUMPI PUSH2 0x19CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x19C4 JUMPI PUSH2 0x19C3 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST POP PUSH2 0x1A29 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x19FF JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x1A0C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x18BF JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3B DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC1 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B52 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAC DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB7 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ADD DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF1 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP3 SGT PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C40 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4B DUP4 PUSH2 0x1CE7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C74 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C86 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 DUP3 PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 DUP3 PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFC DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0E DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D32 DUP3 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D44 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D56 DUP3 PUSH2 0x1CE7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F DUP3 PUSH2 0x1CBD JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1DD2 JUMPI PUSH2 0x1DD1 PUSH2 0x1E0C JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB4 DUP2 PUSH2 0x1C7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1ECB DUP2 PUSH2 0x1C8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1ED6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EE2 DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF9 DUP2 PUSH2 0x1CAB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F10 DUP2 PUSH2 0x1CBD JUMP JUMPDEST DUP2 EQ PUSH2 0x1F1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F27 DUP2 PUSH2 0x1CE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x5D1362D699AD28253183BA856B1873E2651471 OR CODESIZE JUMPI MULMOD DUP15 EXTCODECOPY 0xAC 0xAD SDIV 0xBD CALLDATACOPY PUSH29 0x64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "643:9217:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6696:1311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3924:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1135:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5277:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2409:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5555:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2507:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9603:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4269:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1868:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2458:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4162:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1448:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1229:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2844:940;;;:::i;:::-;;5869:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1777:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4451:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6696:1311;6854:6;6872:12;6903:35;6919:14;1931:2;2585;:12;;;;:::i;:::-;6903:15;:35::i;:::-;6895:43;;7028:15;7046:50;7062:29;7078:6;7085:5;7062:15;:29::i;:::-;1931:2;2585;:12;;;;:::i;:::-;7046:15;:50::i;:::-;7028:68;;7189:24;1931:2;2585;:12;;;;:::i;:::-;7209:3;7189:15;:24::i;:::-;7178:8;:35;7174:101;;;7240:24;1931:2;2585;:12;;;;:::i;:::-;7260:3;7240:15;:24::i;:::-;7229:35;;7174:101;7299:25;1931:2;2585;:12;;;;:::i;:::-;7319:4;7299:15;:25::i;:::-;7288:8;:36;7284:103;;;7351:25;1931:2;2585;:12;;;;:::i;:::-;7371:4;7351:15;:25::i;:::-;7340:36;;7284:103;7397:10;7410:35;7431:8;1931:2;2585;:12;;;;:::i;:::-;7410:20;:35::i;:::-;7397:48;;7486:1;7479:3;:8;7475:51;;;7510:5;7503:12;;;;;;;7475:51;7535:16;7554:28;7570:5;7576;7554:15;:28::i;:::-;7535:47;;7608:19;7630:49;7646:26;7662:5;1931:2;2585;:12;;;;:::i;:::-;7646:15;:26::i;:::-;7673:5;7630:15;:49::i;:::-;7608:71;;7704:54;7720:33;7736:12;1931:2;2585;:12;;;;:::i;:::-;7720:15;:33::i;:::-;7754:3;7704:15;:54::i;:::-;7689:69;;7768:18;7789:33;1931:2;2585;:12;;;;:::i;:::-;7809;7789:15;:33::i;:::-;7768:54;;7872:23;7962:5;7899:59;7915:30;7931:9;1931:2;2585;:12;;;;:::i;:::-;7915:15;:30::i;:::-;7946:11;7899:15;:59::i;:::-;7898:69;;;;:::i;:::-;7872:95;;7984:16;7977:23;;;;;;;;;6696:1311;;;;;;;:::o;3924:88::-;3995:10;3983:9;;:22;;;;;;;;;;;;;;;;;;3924:88;:::o;1135:17::-;;;;;;;;;;;;;:::o;5277:124::-;5375:19;5354:18;:40;;;;5277:124;:::o;2409:43::-;;;;:::o;1337:27::-;;;;;;;;;;;;;:::o;5555:80::-;5620:8;5610:7;:18;;;;5555:80;:::o;2507:34::-;;;;:::o;9603:255::-;9690:1;9675:11;;:16;;;;;;;:::i;:::-;;;;;;;;9701:12;9719:61;;;;;;;;9734:10;9719:61;;;;;;9746:8;9719:61;;;;;;9756:6;9719:61;;;;9764:15;9719:61;;;9701:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9796:55;9805:10;9817:8;9827:6;9835:15;9796:55;;;;;;;;;:::i;:::-;;;;;;;;9603:255;;:::o;4269:176::-;4382:1;4357:21;:26;;4349:35;;;;;;4417:21;4394:20;:44;;;;4269:176;:::o;1868:20::-;;;;:::o;2458:43::-;;;;:::o;4162:100::-;4242:13;4227:12;;:28;;;;;;;;;;;;;;;;;;4162:100;:::o;1448:22::-;;;;:::o;1229:24::-;;;;;;;;;;;;;:::o;2844:940::-;2895:1;2887:5;;:9;;;;:::i;:::-;2879:5;:17;;;;2907:11;2928:13;2969:9;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2951:37;;;;;;;;3006:8;2998:17;;;;;;3026:18;3047:54;3060:30;3073:3;1931:2;3077;:12;;;;:::i;:::-;3060;:30::i;:::-;3092:7;;3047:12;:54::i;:::-;3026:75;;3112:20;3142:14;3194:12;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3166:50;;;;;;;;3234:9;3226:18;;;;;;1931:2;2134;:12;;;;:::i;:::-;2126:5;:20;;;;:::i;:::-;3259:12;:23;3255:77;;;1931:2;2134;:12;;;;:::i;:::-;2126:5;:20;;;;:::i;:::-;3298:23;;3255:77;3342:18;3363:44;3382:12;3396:10;3363:18;:44::i;:::-;3342:65;;3436:1;3422:11;:15;:75;;;;;1931:2;2134;:12;;;;:::i;:::-;2126:5;:20;;;;:::i;:::-;2240:16;2232:36;;;;:::i;:::-;3471:11;3441:4;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:56;3422:75;3418:161;;;3548:4;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1931:2;2134;:12;;;;:::i;:::-;2126:5;:20;;;;:::i;:::-;2240:16;2232:36;;;;:::i;:::-;3534:33;;;;:::i;:::-;3513:55;;3418:161;3589:25;3617:4;;;;;;;;;;;:11;;;3629:5;;3636:11;3617:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3589:59;;1931:2;2134;:12;;;;:::i;:::-;2126:5;:20;;;;:::i;:::-;2240:16;2232:36;;;;:::i;:::-;3665:17;:31;;3658:39;;;;:::i;:::-;;3722:5;;3712:65;3729:12;3743:3;3748:11;3761:15;3712:65;;;;;;;;;:::i;:::-;;;;;;;;2869:915;;;;;;;2844:940::o;5869:493::-;6048:1;1931:2;6037:12;;;;:::i;:::-;6032:2;:18;;;;:::i;:::-;6028:1;:22;;;;:::i;:::-;6007:18;:43;;;;1931:2;6096;:12;;;;:::i;:::-;6091:1;:18;;;;:::i;:::-;6061:20;:49;;;;6181:1;1931:2;6170:12;;;;:::i;:::-;6165:2;:18;;;;:::i;:::-;6159:2;:25;;;;:::i;:::-;6120:29;:65;;;;6272:1;1931:2;6261:12;;;;:::i;:::-;6256:2;:18;;;;:::i;:::-;6242:3;6241:34;;;;:::i;:::-;6202:29;:74;;;;6303:1;6295:5;:9;;;;6322:5;6315:4;;:12;;;;;;;;;;;;;;;;;;6347:8;6337:7;:18;;;;5869:493;;:::o;1777:33::-;;;;:::o;4451:233::-;4603:1;4569:30;:35;;4561:44;;;;;;4647:30;4615:29;:62;;;;4451:233;:::o;4690:::-;4842:1;4808:30;:35;;4800:44;;;;;;4886:30;4854:29;:62;;;;4690:233;:::o;2230:172:2:-;2286:6;2304:8;2319:1;2315;:5;;;;:::i;:::-;2304:16;;2344:1;2339;:6;;:16;;;;;2354:1;2349;:6;;2339:16;2338:38;;;;2365:1;2361;:5;:14;;;;;2374:1;2370;:5;2361:14;2338:38;2330:47;;;;;;2394:1;2387:8;;;2230:172;;;;:::o;1503:296::-;1559:6;1577:8;1592:1;1588;:5;;;;:::i;:::-;1577:16;;1348:3;1342:1;1335:16;;1675:1;:15;;:55;;;;1348:3;1342:1;1335:16;;1715:1;:14;1348:3;1342:1;1335:16;;1695:1;:14;1694:36;;1675:55;1667:64;;;;;;1755:1;1750;:6;1749:24;;;;1771:1;1766;1762;:5;;;;:::i;:::-;:10;1749:24;1741:33;;;;;;1791:1;1784:8;;;1503:296;;;;:::o;1889:253::-;1945:6;2035:2;2030:1;:7;;:26;;;;1348:3;1342:1;1335:16;;2041:1;:15;;2030:26;2022:35;;;;;;2134:1;2130;:5;;;;:::i;:::-;2123:12;;1889:253;;;;:::o;3202:1137::-;3267:6;3285:15;3303:5;3285:23;;3328:1;3322:3;:7;3318:83;;;3358:4;3345:17;;3382:8;3386:3;3382;:8::i;:::-;3376:14;;3318:83;3490:19;:205;;;;;;;;3533:19;3490:205;;;;3567:19;3490:205;;;;3600:19;3490:205;;;;3633:19;3490:205;;;;3666:19;3490:205;;;;;3705:12;3720:13;3724:3;3729;3720;:13::i;:::-;3705:28;;3760:3;3751:5;:12;;3743:21;;;;;;3774:13;3790:46;3823:5;3809:1;3801:28;;3832:3;3790;:46::i;:::-;3774:62;;3846:16;3865:25;3869:3;3874:15;3878:5;3885:3;3874;:15::i;:::-;3865:3;:25::i;:::-;3846:44;;3901:14;3918:11;3922:3;3927:1;3918:3;:11::i;:::-;3901:28;;3944:9;3939:286;3963:1;3959;:5;3939:286;;;4002:7;3989:9;:20;3985:191;;4041:23;4045:9;4056:7;4041:3;:23::i;:::-;4029:35;;4091:31;4095:18;4099:6;4107:2;4110:1;4107:5;;;;;;;:::i;:::-;;;;;;4095:3;:18::i;:::-;4115:6;4091:3;:31::i;:::-;4082:40;;3985:191;4199:15;4203:7;4212:1;4199:3;:15::i;:::-;4189:25;;3966:3;;;;;:::i;:::-;;;;3939:286;;;;4238:10;4234:76;;;4273:26;4277:13;4281:3;4286;4277;:13::i;:::-;4292:6;4273:3;:26::i;:::-;4264:35;;4234:76;4326:6;4319:13;;;;;;;;3202:1137;;;;:::o;211:421:1:-;269:7;514:1;509;:6;505:45;;;538:1;531:8;;;;505:45;560:9;576:1;572;:5;;;;:::i;:::-;560:17;;604:1;599;595;:5;;;;:::i;:::-;:10;587:19;;;;;;624:1;617:8;;;211:421;;;;;:::o;752:288::-;810:7;841:1;837;:5;829:14;;;;;;911:9;927:1;923;:5;;;;:::i;:::-;911:17;;1032:1;1025:8;;;752:288;;;;:::o;8149:663:0:-;8234:6;8256:42;8281:4;8287:10;8256:24;:42::i;:::-;8252:81;;;8321:1;8314:8;;;;8252:81;8342:23;8375:10;8342:44;;8396:21;8420:67;8436:33;8459:4;1931:2;2585;:12;;;;:::i;:::-;8436:15;:33::i;:::-;8470:16;8420:15;:67::i;:::-;8396:91;;8497:23;8523:181;8560:14;8588:29;;8631;;8674:20;;8523:23;:181::i;:::-;8497:207;;8722:83;8738:60;8761:4;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8781:16;8738:15;:60::i;:::-;1931:2;2585;:12;;;;:::i;:::-;8722:15;:83::i;:::-;8715:90;;;;;8149:663;;;;;:::o;2742:126:2:-;2788:6;1348:3;1342:1;1335:16;;2814:1;:15;;2806:24;;;;;;2851:1;2847;:5;:14;;2860:1;2847:14;;;2856:1;2855:2;;;:::i;:::-;2847:14;2840:21;;2742:126;;;:::o;9137:460:0:-;9252:4;9272:34;9309:70;9322:43;9335:10;9346:18;;9322:12;:43::i;:::-;1931:2;9366;:12;;;;:::i;:::-;9309;:70::i;:::-;9272:107;;9420:10;9412:4;:18;;:80;;;;;9466:26;9434:29;9447:4;9452:10;9434:12;:29::i;:::-;:58;9412:80;9411:179;;;;9517:10;9510:4;:17;:79;;;;;9563:26;9531:29;9544:10;9555:4;9531:12;:29::i;:::-;:58;9510:79;9411:179;9392:198;;;9137:460;;;;:::o;1163:145:1:-;1221:7;1253:1;1248;:6;;1240:15;;;;;;1265:9;1281:1;1277;:5;;;;:::i;:::-;1265:17;;1300:1;1293:8;;;1163:145;;;;:::o;7:155:3:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;7:155;;;;:::o;168:137::-;222:5;253:6;247:13;238:22;;269:30;293:5;269:30;:::i;:::-;168:137;;;;:::o;311:163::-;369:5;407:6;394:20;385:29;;423:45;462:5;423:45;:::i;:::-;311:163;;;;:::o;480:167::-;540:5;578:6;565:20;556:29;;594:47;635:5;594:47;:::i;:::-;480:167;;;;:::o;653:137::-;698:5;736:6;723:20;714:29;;752:32;778:5;752:32;:::i;:::-;653:137;;;;:::o;796:139::-;842:5;880:6;867:20;858:29;;896:33;923:5;896:33;:::i;:::-;796:139;;;;:::o;941:143::-;998:5;1029:6;1023:13;1014:22;;1045:33;1072:5;1045:33;:::i;:::-;941:143;;;;:::o;1090:490::-;1166:6;1174;1223:2;1211:9;1202:7;1198:23;1194:32;1191:119;;;1229:79;;:::i;:::-;1191:119;1349:1;1374:61;1427:7;1418:6;1407:9;1403:22;1374:61;:::i;:::-;1364:71;;1320:125;1484:2;1510:53;1555:7;1546:6;1535:9;1531:22;1510:53;:::i;:::-;1500:63;;1455:118;1090:490;;;;;:::o;1586:498::-;1666:6;1674;1723:2;1711:9;1702:7;1698:23;1694:32;1691:119;;;1729:79;;:::i;:::-;1691:119;1849:1;1874:65;1931:7;1922:6;1911:9;1907:22;1874:65;:::i;:::-;1864:75;;1820:129;1988:2;2014:53;2059:7;2050:6;2039:9;2035:22;2014:53;:::i;:::-;2004:63;;1959:118;1586:498;;;;;:::o;2090:357::-;2163:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:119;;;2218:79;;:::i;:::-;2180:119;2338:1;2363:67;2422:7;2413:6;2402:9;2398:22;2363:67;:::i;:::-;2353:77;;2309:131;2090:357;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:757::-;2868:6;2876;2884;2892;2941:3;2929:9;2920:7;2916:23;2912:33;2909:120;;;2948:79;;:::i;:::-;2909:120;3068:1;3093:52;3137:7;3128:6;3117:9;3113:22;3093:52;:::i;:::-;3083:62;;3039:116;3194:2;3220:52;3264:7;3255:6;3244:9;3240:22;3220:52;:::i;:::-;3210:62;;3165:117;3321:2;3347:52;3391:7;3382:6;3371:9;3367:22;3347:52;:::i;:::-;3337:62;;3292:117;3448:2;3474:52;3518:7;3509:6;3498:9;3494:22;3474:52;:::i;:::-;3464:62;;3419:117;2786:757;;;;;;;:::o;3549:329::-;3608:6;3657:2;3645:9;3636:7;3632:23;3628:32;3625:119;;;3663:79;;:::i;:::-;3625:119;3783:1;3808:53;3853:7;3844:6;3833:9;3829:22;3808:53;:::i;:::-;3798:63;;3754:117;3549:329;;;;:::o;3884:351::-;3954:6;4003:2;3991:9;3982:7;3978:23;3974:32;3971:119;;;4009:79;;:::i;:::-;3971:119;4129:1;4154:64;4210:7;4201:6;4190:9;4186:22;4154:64;:::i;:::-;4144:74;;4100:128;3884:351;;;;:::o;4241:501::-;4317:6;4325;4374:2;4362:9;4353:7;4349:23;4345:32;4342:119;;;4380:79;;:::i;:::-;4342:119;4500:1;4525:64;4581:7;4572:6;4561:9;4557:22;4525:64;:::i;:::-;4515:74;;4471:128;4638:2;4664:61;4717:7;4708:6;4697:9;4693:22;4664:61;:::i;:::-;4654:71;;4609:126;4241:501;;;;;:::o;4748:147::-;4843:45;4882:5;4843:45;:::i;:::-;4838:3;4831:58;4748:147;;:::o;4901:118::-;4988:24;5006:5;4988:24;:::i;:::-;4983:3;4976:37;4901:118;;:::o;5025:155::-;5124:49;5167:5;5124:49;:::i;:::-;5119:3;5112:62;5025:155;;:::o;5186:159::-;5287:51;5332:5;5287:51;:::i;:::-;5282:3;5275:64;5186:159;;:::o;5351:115::-;5436:23;5453:5;5436:23;:::i;:::-;5431:3;5424:36;5351:115;;:::o;5472:118::-;5559:24;5577:5;5559:24;:::i;:::-;5554:3;5547:37;5472:118;;:::o;5596:569::-;5781:4;5819:3;5808:9;5804:19;5796:27;;5833:71;5901:1;5890:9;5886:17;5877:6;5833:71;:::i;:::-;5914:80;5990:2;5979:9;5975:18;5966:6;5914:80;:::i;:::-;6004:72;6072:2;6061:9;6057:18;6048:6;6004:72;:::i;:::-;6086;6154:2;6143:9;6139:18;6130:6;6086:72;:::i;:::-;5596:569;;;;;;;:::o;6171:246::-;6276:4;6314:2;6303:9;6299:18;6291:26;;6327:83;6407:1;6396:9;6392:17;6383:6;6327:83;:::i;:::-;6171:246;;;;:::o;6423:250::-;6530:4;6568:2;6557:9;6553:18;6545:26;;6581:85;6663:1;6652:9;6648:17;6639:6;6581:85;:::i;:::-;6423:250;;;;:::o;6679:218::-;6770:4;6808:2;6797:9;6793:18;6785:26;;6821:69;6887:1;6876:9;6872:17;6863:6;6821:69;:::i;:::-;6679:218;;;;:::o;6903:222::-;6996:4;7034:2;7023:9;7019:18;7011:26;;7047:71;7115:1;7104:9;7100:17;7091:6;7047:71;:::i;:::-;6903:222;;;;:::o;7131:328::-;7250:4;7288:2;7277:9;7273:18;7265:26;;7301:71;7369:1;7358:9;7354:17;7345:6;7301:71;:::i;:::-;7382:70;7448:2;7437:9;7433:18;7424:6;7382:70;:::i;:::-;7131:328;;;;;:::o;7465:549::-;7640:4;7678:3;7667:9;7663:19;7655:27;;7692:71;7760:1;7749:9;7745:17;7736:6;7692:71;:::i;:::-;7773:72;7841:2;7830:9;7826:18;7817:6;7773:72;:::i;:::-;7855:70;7921:2;7910:9;7906:18;7897:6;7855:70;:::i;:::-;7935:72;8003:2;7992:9;7988:18;7979:6;7935:72;:::i;:::-;7465:549;;;;;;;:::o;8101:525::-;8140:3;8159:19;8176:1;8159:19;:::i;:::-;8154:24;;8192:19;8209:1;8192:19;:::i;:::-;8187:24;;8380:1;8312:66;8308:74;8305:1;8301:82;8296:1;8293;8289:9;8282:17;8278:106;8275:132;;;8387:18;;:::i;:::-;8275:132;8567:1;8499:66;8495:74;8492:1;8488:82;8484:1;8481;8477:9;8473:98;8470:124;;;8574:18;;:::i;:::-;8470:124;8618:1;8615;8611:9;8604:16;;8101:525;;;;:::o;8632:305::-;8672:3;8691:20;8709:1;8691:20;:::i;:::-;8686:25;;8725:20;8743:1;8725:20;:::i;:::-;8720:25;;8879:1;8811:66;8807:74;8804:1;8801:81;8798:107;;;8885:18;;:::i;:::-;8798:107;8929:1;8926;8922:9;8915:16;;8632:305;;;;:::o;8943:385::-;8982:1;8999:19;9016:1;8999:19;:::i;:::-;8994:24;;9032:19;9049:1;9032:19;:::i;:::-;9027:24;;9070:1;9060:35;;9075:18;;:::i;:::-;9060:35;9261:1;9258;9254:9;9251:1;9248:16;9167:66;9164:1;9161:73;9144:130;9141:156;;;9277:18;;:::i;:::-;9141:156;9320:1;9317;9312:10;9307:15;;8943:385;;;;:::o;9334:185::-;9374:1;9391:20;9409:1;9391:20;:::i;:::-;9386:25;;9425:20;9443:1;9425:20;:::i;:::-;9420:25;;9464:1;9454:35;;9469:18;;:::i;:::-;9454:35;9511:1;9508;9504:9;9499:14;;9334:185;;;;:::o;9525:848::-;9586:5;9593:4;9617:6;9608:15;;9641:5;9632:14;;9655:712;9676:1;9666:8;9663:15;9655:712;;;9771:4;9766:3;9762:14;9756:4;9753:24;9750:50;;;9780:18;;:::i;:::-;9750:50;9830:1;9820:8;9816:16;9813:451;;;10245:4;10238:5;10234:16;10225:25;;9813:451;10295:4;10289;10285:15;10277:23;;10325:32;10348:8;10325:32;:::i;:::-;10313:44;;9655:712;;;9525:848;;;;;;;:::o;10379:285::-;10439:5;10463:23;10481:4;10463:23;:::i;:::-;10455:31;;10507:27;10525:8;10507:27;:::i;:::-;10495:39;;10553:104;10590:66;10580:8;10574:4;10553:104;:::i;:::-;10544:113;;10379:285;;;;:::o;10670:1073::-;10724:5;10915:8;10905:40;;10936:1;10927:10;;10938:5;;10905:40;10964:4;10954:36;;10981:1;10972:10;;10983:5;;10954:36;11050:4;11098:1;11093:27;;;;11134:1;11129:191;;;;11043:277;;11093:27;11111:1;11102:10;;11113:5;;;11129:191;11174:3;11164:8;11161:17;11158:43;;;11181:18;;:::i;:::-;11158:43;11230:8;11227:1;11223:16;11214:25;;11265:3;11258:5;11255:14;11252:40;;;11272:18;;:::i;:::-;11252:40;11305:5;;;11043:277;;11429:2;11419:8;11416:16;11410:3;11404:4;11401:13;11397:36;11379:2;11369:8;11366:16;11361:2;11355:4;11352:12;11348:35;11332:111;11329:246;;;11485:8;11479:4;11475:19;11466:28;;11520:3;11513:5;11510:14;11507:40;;;11527:18;;:::i;:::-;11507:40;11560:5;;11329:246;11600:42;11638:3;11628:8;11622:4;11619:1;11600:42;:::i;:::-;11585:57;;;;11674:4;11669:3;11665:14;11658:5;11655:25;11652:51;;;11683:18;;:::i;:::-;11652:51;11732:4;11725:5;11721:16;11712:25;;10670:1073;;;;;;:::o;11749:991::-;11788:7;11811:19;11828:1;11811:19;:::i;:::-;11806:24;;11844:19;11861:1;11844:19;:::i;:::-;11839:24;;12045:1;11977:66;11973:74;11970:1;11967:81;11962:1;11959;11955:9;11951:1;11948;11944:9;11940:25;11936:113;11933:139;;;12052:18;;:::i;:::-;11933:139;12256:1;12188:66;12183:75;12180:1;12176:83;12171:1;12168;12164:9;12160:1;12157;12153:9;12149:25;12145:115;12142:141;;;12263:18;;:::i;:::-;12142:141;12467:1;12399:66;12394:75;12391:1;12387:83;12382:1;12379;12375:9;12371:1;12368;12364:9;12360:25;12356:115;12353:141;;;12474:18;;:::i;:::-;12353:141;12677:1;12609:66;12604:75;12601:1;12597:83;12592:1;12589;12585:9;12581:1;12578;12574:9;12570:25;12566:115;12563:141;;;12684:18;;:::i;:::-;12563:141;12732:1;12729;12725:9;12714:20;;11749:991;;;;:::o;12746:348::-;12786:7;12809:20;12827:1;12809:20;:::i;:::-;12804:25;;12843:20;12861:1;12843:20;:::i;:::-;12838:25;;13031:1;12963:66;12959:74;12956:1;12953:81;12948:1;12941:9;12934:17;12930:105;12927:131;;;13038:18;;:::i;:::-;12927:131;13086:1;13083;13079:9;13068:20;;12746:348;;;;:::o;13100:527::-;13139:4;13159:19;13176:1;13159:19;:::i;:::-;13154:24;;13192:19;13209:1;13192:19;:::i;:::-;13187:24;;13381:1;13313:66;13309:74;13306:1;13302:82;13297:1;13294;13290:9;13283:17;13279:106;13276:132;;;13388:18;;:::i;:::-;13276:132;13567:1;13499:66;13495:74;13492:1;13488:82;13484:1;13481;13477:9;13473:98;13470:124;;;13574:18;;:::i;:::-;13470:124;13619:1;13616;13612:9;13604:17;;13100:527;;;;:::o;13633:191::-;13673:4;13693:20;13711:1;13693:20;:::i;:::-;13688:25;;13727:20;13745:1;13727:20;:::i;:::-;13722:25;;13766:1;13763;13760:8;13757:34;;;13771:18;;:::i;:::-;13757:34;13816:1;13813;13809:9;13801:17;;13633:191;;;;:::o;13830:96::-;13867:7;13896:24;13914:5;13896:24;:::i;:::-;13885:35;;13830:96;;;:::o;13932:104::-;13977:7;14006:24;14024:5;14006:24;:::i;:::-;13995:35;;13932:104;;;:::o;14042:90::-;14076:7;14119:5;14112:13;14105:21;14094:32;;14042:90;;;:::o;14138:108::-;14187:7;14216:24;14234:5;14216:24;:::i;:::-;14205:35;;14138:108;;;:::o;14252:110::-;14303:7;14332:24;14350:5;14332:24;:::i;:::-;14321:35;;14252:110;;;:::o;14368:76::-;14404:7;14433:5;14422:16;;14368:76;;;:::o;14450:126::-;14487:7;14527:42;14520:5;14516:54;14505:65;;14450:126;;;:::o;14582:77::-;14619:7;14648:5;14637:16;;14582:77;;;:::o;14665:134::-;14723:9;14756:37;14787:5;14756:37;:::i;:::-;14743:50;;14665:134;;;:::o;14805:138::-;14867:9;14900:37;14931:5;14900:37;:::i;:::-;14887:50;;14805:138;;;:::o;14949:140::-;15013:9;15046:37;15077:5;15046:37;:::i;:::-;15033:50;;14949:140;;;:::o;15095:126::-;15145:9;15178:37;15209:5;15178:37;:::i;:::-;15165:50;;15095:126;;;:::o;15227:113::-;15277:9;15310:24;15328:5;15310:24;:::i;:::-;15297:37;;15227:113;;;:::o;15346:233::-;15385:3;15408:24;15426:5;15408:24;:::i;:::-;15399:33;;15454:66;15447:5;15444:77;15441:103;;;15524:18;;:::i;:::-;15441:103;15571:1;15564:5;15560:13;15553:20;;15346:233;;;:::o;15585:228::-;15620:3;15643:23;15660:5;15643:23;:::i;:::-;15634:32;;15688:66;15681:5;15678:77;15675:103;;;15758:18;;:::i;:::-;15675:103;15801:5;15798:1;15794:13;15787:20;;15585:228;;;:::o;15819:180::-;15867:77;15864:1;15857:88;15964:4;15961:1;15954:15;15988:4;15985:1;15978:15;16005:180;16053:77;16050:1;16043:88;16150:4;16147:1;16140:15;16174:4;16171:1;16164:15;16191:180;16239:77;16236:1;16229:88;16336:4;16333:1;16326:15;16360:4;16357:1;16350:15;16377:180;16425:77;16422:1;16415:88;16522:4;16519:1;16512:15;16546:4;16543:1;16536:15;16686:117;16795:1;16792;16785:12;16809:102;16851:8;16898:5;16895:1;16891:13;16870:34;;16809:102;;;:::o;16917:138::-;16998:32;17024:5;16998:32;:::i;:::-;16991:5;16988:43;16978:71;;17045:1;17042;17035:12;16978:71;16917:138;:::o;17061:116::-;17131:21;17146:5;17131:21;:::i;:::-;17124:5;17121:32;17111:60;;17167:1;17164;17157:12;17111:60;17061:116;:::o;17183:146::-;17268:36;17298:5;17268:36;:::i;:::-;17261:5;17258:47;17248:75;;17319:1;17316;17309:12;17248:75;17183:146;:::o;17335:150::-;17422:38;17454:5;17422:38;:::i;:::-;17415:5;17412:49;17402:77;;17475:1;17472;17465:12;17402:77;17335:150;:::o;17491:120::-;17563:23;17580:5;17563:23;:::i;:::-;17556:5;17553:34;17543:62;;17601:1;17598;17591:12;17543:62;17491:120;:::o;17617:122::-;17690:24;17708:5;17690:24;:::i;:::-;17683:5;17680:35;17670:63;;17729:1;17726;17719:12;17670:63;17617:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1608600",
								"executionCost": "1687",
								"totalCost": "1610287"
							},
							"external": {
								"baseCpi()": "2518",
								"cmmd()": "2668",
								"computeRebasePercentage(int256,int256,int256,int256)": "infinite",
								"cpiOracle()": "2711",
								"deviationThreshold()": "2495",
								"epoch()": "2452",
								"faucet(address,uint256)": "infinite",
								"initialize(address,uint256)": "infinite",
								"marketOracle()": "2623",
								"rebase()": "infinite",
								"rebaseFunctionGrowth()": "2496",
								"rebaseFunctionLowerPercentage()": "2541",
								"rebaseFunctionUpperPercentage()": "2474",
								"setBaseCpi(uint256)": "22565",
								"setCpiOracle(address)": "24811",
								"setDeviationThreshold(uint256)": "22610",
								"setMarketOracle(address)": "24832",
								"setRebaseFunctionGrowth(int256)": "22657",
								"setRebaseFunctionLowerPercentage(int256)": "22634",
								"setRebaseFunctionUpperPercentage(int256)": "22656"
							},
							"internal": {
								"computeSupplyDelta(uint256,uint256)": "infinite",
								"withinDeviationThreshold(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 9860,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220725d1362d699ad28253183ba856b1873e2651471173857098e3cacad05bd377c64736f6c63430008070033",
									".code": [
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "AF14052C"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "AF14052C"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "CD6DC687"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "D94AD837"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "E9FA88A4"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "F4FEFA49"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "9DB59B2F"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "9E30BAC5"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "A37069EE"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "AB33C5CA"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "60961528"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "60961528"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "6DE729DB"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "7486CDEA"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "7B56C2B2"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "8001066D"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "3A785AF1"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "3D6A46E5"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "4DAFA35E"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "53A15EDC"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "5EE01540"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 643,
											"end": 9860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6919,
											"end": 6933,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7062,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7090,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7062,
											"end": 7091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7062,
											"end": 7091,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7062,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7046,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7046,
											"end": 7096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7046,
											"end": 7096,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7046,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7189,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7213,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7174,
											"end": 7275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7240,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7275,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7174,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7299,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7319,
											"end": 7323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C"
										},
										{
											"begin": 7299,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7299,
											"end": 7324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7299,
											"end": 7324,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7299,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7324,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7284,
											"end": 7387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7351,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C"
										},
										{
											"begin": 7351,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7351,
											"end": 7376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7351,
											"end": 7376,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7351,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 7376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 7376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7387,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7284,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7431,
											"end": 7439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7410,
											"end": 7445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7410,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7410,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7479,
											"end": 7487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7475,
											"end": 7526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7515,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7526,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7475,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7570,
											"end": 7575,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7581,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7554,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7554,
											"end": 7582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7554,
											"end": 7582,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7554,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7535,
											"end": 7582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7608,
											"end": 7627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7630,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7646,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7662,
											"end": 7667,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7646,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7646,
											"end": 7672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7672,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7646,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7678,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7630,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7630,
											"end": 7679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7630,
											"end": 7679,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7630,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7608,
											"end": 7679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7608,
											"end": 7679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7720,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7736,
											"end": 7748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7720,
											"end": 7753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7720,
											"end": 7753,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7720,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7704,
											"end": 7758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7704,
											"end": 7758,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7704,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7689,
											"end": 7758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7689,
											"end": 7758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7809,
											"end": 7821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7789,
											"end": 7822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7789,
											"end": 7822,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7789,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7967,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7915,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7931,
											"end": 7940,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7915,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7915,
											"end": 7945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7915,
											"end": 7945,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7915,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7899,
											"end": 7958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7899,
											"end": 7958,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7899,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7898,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 8000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 8007,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4012,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5354,
											"end": 5394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5401,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2452,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5617,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5635,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9690,
											"end": 9691,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9675,
											"end": 9686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9754,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "PUSH",
											"source": 0,
											"value": "9ED053BB818FF08B8353CD46F78DB1F0799F31C9E4458FDB425C10ECCD2EFC44"
										},
										{
											"begin": 9805,
											"end": 9815,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9835,
											"end": 9850,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9851,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4383,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4417,
											"end": 4438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4394,
											"end": 4438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1888,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2969,
											"end": 2986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2986,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3060,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3073,
											"end": 3076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3060,
											"end": 3090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3060,
											"end": 3090,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3060,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3092,
											"end": 3099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3047,
											"end": 3101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3101,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3047,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3282,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3255,
											"end": 3332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3332,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3255,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3382,
											"end": 3394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3406,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3363,
											"end": 3407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3363,
											"end": 3407,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3363,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3437,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3441,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3422,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3418,
											"end": 3579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3534,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3418,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "PUSH",
											"source": 0,
											"value": "7A43E23F"
										},
										{
											"begin": 3629,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3629,
											"end": 3634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3617,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2126,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3658,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "41D948A7F29CC695F5D4B3EC147F766BFFA165DDD317470FBE05C86D0A9C3E04"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3748,
											"end": 3759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3777,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 3784,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6034,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6096,
											"end": 6098,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6096,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6091,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6061,
											"end": 6110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6167,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6165,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6161,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6149,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6120,
											"end": 6185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6185,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6261,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6242,
											"end": 6245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6"
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6241,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6231,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6202,
											"end": 6276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6300,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 6362,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1810,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4604,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4561,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4647,
											"end": 4677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4843,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4800,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4923,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2320,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2316,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2355,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2339,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2338,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2402,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1730,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1730,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 1675,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 1667,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1762,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1772,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1749,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1741,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1799,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2037,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2037,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2022,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2142,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3325,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3329,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3382,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3390,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3318,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 2,
											"value": "13A04BBDFDC9BE89"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3586,
											"name": "PUSH",
											"source": 2,
											"value": "1080E992061AB32B"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "F2243014E544EBB"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3633,
											"end": 3652,
											"name": "PUSH",
											"source": 2,
											"value": "E7E0178E9D6ED50"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3685,
											"name": "PUSH",
											"source": 2,
											"value": "E2E820ADE835F46"
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3835,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3865,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3928,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3918,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 3964,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 3998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4056,
											"end": 4063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4064,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4091,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 4091,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4122,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 3985,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 4225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4248,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 4281,
											"end": 4284,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4289,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 4277,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 4273,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4234,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 4339,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 211,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 211,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 269,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 509,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 505,
											"end": 550,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 505,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 505,
											"end": 550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 531,
											"end": 539,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 505,
											"end": 550,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 505,
											"end": 550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 595,
											"end": 596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 605,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 587,
											"end": 606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 587,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 587,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 211,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 632,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 837,
											"end": 842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 829,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 829,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 829,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 1040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8281,
											"end": 8285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8256,
											"end": 8298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8256,
											"end": 8298,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8256,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8252,
											"end": 8333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8314,
											"end": 8322,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8333,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8252,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 8436,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8436,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8436,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8436,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8560,
											"end": 8574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8617,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8588,
											"end": 8617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8631,
											"end": 8660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8674,
											"end": 8694,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8674,
											"end": 8694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8523,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8523,
											"end": 8704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8523,
											"end": 8704,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8523,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8738,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8761,
											"end": 8765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8777,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8761,
											"end": 8777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8777,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8738,
											"end": 8798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8738,
											"end": 8798,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 8738,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 8722,
											"end": 8805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8722,
											"end": 8805,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8722,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8805,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8715,
											"end": 8805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2829,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2868,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9322,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 9335,
											"end": 9345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9322,
											"end": 9365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9322,
											"end": 9365,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 9322,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9366,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 9309,
											"end": 9379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9309,
											"end": 9379,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9309,
											"end": 9379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9420,
											"end": 9430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9434,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 9447,
											"end": 9451,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9434,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 9434,
											"end": 9463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9434,
											"end": 9463,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 9434,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9434,
											"end": 9492,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 9412,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 9411,
											"end": 9590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9514,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9527,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 9544,
											"end": 9554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 9510,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9590,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 9411,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9392,
											"end": 9590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9392,
											"end": 9590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9392,
											"end": 9590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9597,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 305,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 168,
											"end": 305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 222,
											"end": 227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 247,
											"end": 260,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 238,
											"end": 260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 238,
											"end": 260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 269,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 293,
											"end": 298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 269,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 269,
											"end": 299,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 269,
											"end": 299,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 269,
											"end": 299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 168,
											"end": 305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 168,
											"end": 305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 168,
											"end": 305,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 311,
											"end": 474,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 311,
											"end": 474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 369,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 394,
											"end": 414,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 385,
											"end": 414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 385,
											"end": 414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 423,
											"end": 468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 423,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 423,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 311,
											"end": 474,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 311,
											"end": 474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 311,
											"end": 474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 311,
											"end": 474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 311,
											"end": 474,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 480,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 594,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 635,
											"end": 640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 594,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 594,
											"end": 641,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 641,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 594,
											"end": 641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 647,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 480,
											"end": 647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 480,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 480,
											"end": 647,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 653,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 653,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 698,
											"end": 703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 743,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 714,
											"end": 743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 778,
											"end": 783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 752,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 752,
											"end": 784,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 752,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 752,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 790,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 653,
											"end": 790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 935,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 796,
											"end": 935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 867,
											"end": 887,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 858,
											"end": 887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 858,
											"end": 887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 896,
											"end": 929,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 896,
											"end": 929,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 896,
											"end": 929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 796,
											"end": 935,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 796,
											"end": 935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 935,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1014,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1014,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1045,
											"end": 1078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1078,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1045,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 1084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1209,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1221,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1226,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1310,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 1191,
											"end": 1310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1310,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 1191,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 1427,
											"end": 1434,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1416,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 1374,
											"end": 1435,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1435,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 1374,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1435,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1544,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 1510,
											"end": 1563,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1510,
											"end": 1563,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 1510,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1580,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1725,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1726,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 1691,
											"end": 1810,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 1729,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 1729,
											"end": 1808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1808,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 1729,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 1691,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 1931,
											"end": 1938,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 1920,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 1874,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1939,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 2059,
											"end": 2066,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2048,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 2014,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 2084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2210,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2215,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 2422,
											"end": 2429,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2363,
											"end": 2430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2430,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 2363,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2944,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2927,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2939,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2945,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3029,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 2909,
											"end": 3029,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2948,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2948,
											"end": 3027,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2948,
											"end": 3027,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2948,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3029,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 2909,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 3093,
											"end": 3145,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3145,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 3093,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3145,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3240,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 3220,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3272,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3399,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3474,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 3474,
											"end": 3526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3474,
											"end": 3526,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 3474,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 3543,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3655,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3660,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3744,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 3625,
											"end": 3744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 3663,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3663,
											"end": 3742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3663,
											"end": 3742,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 3663,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3744,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 3625,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3842,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3808,
											"end": 3861,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3861,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 3808,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3878,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3982,
											"end": 3989,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4006,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 3971,
											"end": 4090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4009,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 4009,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 4009,
											"end": 4088,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 4009,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4090,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 3971,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 4210,
											"end": 4217,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4201,
											"end": 4207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 4154,
											"end": 4218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4154,
											"end": 4218,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 4154,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4144,
											"end": 4218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4144,
											"end": 4218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3884,
											"end": 4235,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4377,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 4342,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4581,
											"end": 4588,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4525,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4589,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4640,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 4715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 4664,
											"end": 4725,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4664,
											"end": 4725,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 4664,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4609,
											"end": 4735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4742,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4748,
											"end": 4895,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 4748,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4843,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4843,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 4843,
											"end": 4888,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4843,
											"end": 4888,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 4843,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4831,
											"end": 4889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4895,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 4988,
											"end": 5012,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4988,
											"end": 5012,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 4988,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 5013,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5025,
											"end": 5180,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 5025,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 5167,
											"end": 5172,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 5124,
											"end": 5173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5124,
											"end": 5173,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 5124,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5119,
											"end": 5122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5180,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5186,
											"end": 5345,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 5186,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 5332,
											"end": 5337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 5287,
											"end": 5338,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5287,
											"end": 5338,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 5287,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5345,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5351,
											"end": 5466,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 5351,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 5453,
											"end": 5458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5434,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5460,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5466,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5559,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 5577,
											"end": 5582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5559,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 5559,
											"end": 5583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5559,
											"end": 5583,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 5559,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5554,
											"end": 5557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5808,
											"end": 5817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5833,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5886,
											"end": 5903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5833,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 5833,
											"end": 5904,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5833,
											"end": 5904,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 5833,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5979,
											"end": 5988,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 5993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5966,
											"end": 5972,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5914,
											"end": 5994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5914,
											"end": 5994,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 5914,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6072,
											"end": 6074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6061,
											"end": 6070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6048,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 6086,
											"end": 6158,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6086,
											"end": 6158,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 6086,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 6165,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6389,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 6327,
											"end": 6410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6327,
											"end": 6410,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 6327,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6581,
											"end": 6666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6581,
											"end": 6666,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 6581,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6673,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 6821,
											"end": 6890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6821,
											"end": 6890,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 6821,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6897,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 7115,
											"end": 7116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7113,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7097,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 7125,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7301,
											"end": 7372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7301,
											"end": 7372,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 7301,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7459,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7681,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 7760,
											"end": 7761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7749,
											"end": 7758,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7745,
											"end": 7762,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7736,
											"end": 7742,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7692,
											"end": 7763,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7692,
											"end": 7763,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 7692,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 7841,
											"end": 7843,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7830,
											"end": 7839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7817,
											"end": 7823,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7855,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7855,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7855,
											"end": 7925,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7855,
											"end": 7925,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 7855,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 8003,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7992,
											"end": 8001,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 7935,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 8014,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8140,
											"end": 8143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 8176,
											"end": 8177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8178,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 8209,
											"end": 8210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8187,
											"end": 8211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8187,
											"end": 8211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8380,
											"end": 8381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8378,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8308,
											"end": 8382,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8305,
											"end": 8306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8301,
											"end": 8383,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8282,
											"end": 8299,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8278,
											"end": 8384,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8407,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 8275,
											"end": 8407,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8407,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 8275,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8567,
											"end": 8568,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8499,
											"end": 8565,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8495,
											"end": 8569,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8570,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8484,
											"end": 8485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8473,
											"end": 8571,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8470,
											"end": 8594,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8470,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 8470,
											"end": 8594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8470,
											"end": 8594,
											"name": "tag",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 8470,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8611,
											"end": 8620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8626,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8672,
											"end": 8675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 8743,
											"end": 8744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "tag",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8720,
											"end": 8745,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8720,
											"end": 8745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8811,
											"end": 8877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8807,
											"end": 8881,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8801,
											"end": 8882,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8798,
											"end": 8905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8798,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 8798,
											"end": 8905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8798,
											"end": 8905,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 8798,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8929,
											"end": 8930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8926,
											"end": 8927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8922,
											"end": 8931,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8937,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8982,
											"end": 8983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8999,
											"end": 9018,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8999,
											"end": 9018,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 8999,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8994,
											"end": 9018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8994,
											"end": 9018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 9032,
											"end": 9051,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9032,
											"end": 9051,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 9032,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 9060,
											"end": 9095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9095,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 9060,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9262,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9258,
											"end": 9259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9254,
											"end": 9263,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9251,
											"end": 9252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9248,
											"end": 9264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9233,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9164,
											"end": 9165,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9234,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9144,
											"end": 9274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 9141,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 9277,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 9141,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9312,
											"end": 9322,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 9328,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9386,
											"end": 9411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9386,
											"end": 9411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9425,
											"end": 9445,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9425,
											"end": 9445,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 9425,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9420,
											"end": 9445,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9420,
											"end": 9445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9464,
											"end": 9465,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 9454,
											"end": 9489,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 9469,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9489,
											"name": "tag",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 9454,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9508,
											"end": 9509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9513,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9499,
											"end": 9513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9499,
											"end": 9513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9519,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9586,
											"end": 9591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9617,
											"end": 9623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9608,
											"end": 9623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9608,
											"end": 9623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9646,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "tag",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9677,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9666,
											"end": 9674,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9663,
											"end": 9678,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9766,
											"end": 9769,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9762,
											"end": 9776,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9756,
											"end": 9760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9753,
											"end": 9777,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9800,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 9750,
											"end": 9800,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9750,
											"end": 9800,
											"name": "tag",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 9750,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9820,
											"end": 9828,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9816,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 10264,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 9813,
											"end": 10264,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10245,
											"end": 10249,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10238,
											"end": 10243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10225,
											"end": 10250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10225,
											"end": 10250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 10264,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 9813,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10299,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10289,
											"end": 10293,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10285,
											"end": 10300,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10277,
											"end": 10300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10277,
											"end": 10300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 10348,
											"end": 10356,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 10325,
											"end": 10357,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10325,
											"end": 10357,
											"name": "tag",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 10325,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10313,
											"end": 10357,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10313,
											"end": 10357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "tag",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 9655,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 10373,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10439,
											"end": 10444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 10481,
											"end": 10485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 10463,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10455,
											"end": 10486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10455,
											"end": 10486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10507,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 10525,
											"end": 10533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10507,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 10507,
											"end": 10534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10507,
											"end": 10534,
											"name": "tag",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 10507,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10534,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10553,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 10590,
											"end": 10656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10588,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10574,
											"end": 10578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10553,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 10553,
											"end": 10657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10553,
											"end": 10657,
											"name": "tag",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 10553,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10544,
											"end": 10657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10544,
											"end": 10657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10664,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "tag",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10724,
											"end": 10729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10937,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 10938,
											"end": 10943,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "tag",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10964,
											"end": 10968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 10954,
											"end": 10990,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10981,
											"end": 10982,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10972,
											"end": 10982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10983,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 10983,
											"end": 10988,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 10990,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 10954,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11050,
											"end": 11054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11098,
											"end": 11099,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11093,
											"end": 11120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11093,
											"end": 11120,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11093,
											"end": 11120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 11093,
											"end": 11120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11134,
											"end": 11135,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11129,
											"end": 11320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11129,
											"end": 11320,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11129,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 11129,
											"end": 11320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 11043,
											"end": 11320,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11093,
											"end": 11120,
											"name": "tag",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 11093,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11111,
											"end": 11112,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11102,
											"end": 11112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11102,
											"end": 11112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11113,
											"end": 11118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11113,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 11113,
											"end": 11118,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11129,
											"end": 11320,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 11129,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11174,
											"end": 11177,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11164,
											"end": 11172,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11178,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11158,
											"end": 11201,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11158,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 11158,
											"end": 11201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "tag",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 11181,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11158,
											"end": 11201,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 11158,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11238,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11227,
											"end": 11228,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11223,
											"end": 11239,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11214,
											"end": 11239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11214,
											"end": 11239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11265,
											"end": 11268,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11258,
											"end": 11263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11255,
											"end": 11269,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11252,
											"end": 11292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11252,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 11252,
											"end": 11292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11252,
											"end": 11292,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 11252,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11305,
											"end": 11310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11305,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 11305,
											"end": 11310,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11320,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 11043,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11429,
											"end": 11431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11419,
											"end": 11427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11410,
											"end": 11413,
											"name": "PUSH",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 11404,
											"end": 11408,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11401,
											"end": 11414,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11397,
											"end": 11433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11379,
											"end": 11381,
											"name": "PUSH",
											"source": 3,
											"value": "4E"
										},
										{
											"begin": 11369,
											"end": 11377,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11382,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11361,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 11355,
											"end": 11359,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11364,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11348,
											"end": 11383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11443,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11575,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 11329,
											"end": 11575,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11485,
											"end": 11493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11494,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11520,
											"end": 11523,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11513,
											"end": 11518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11507,
											"end": 11547,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11507,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 11507,
											"end": 11547,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11507,
											"end": 11547,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 11507,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11560,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 11560,
											"end": 11565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11575,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 11329,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 11638,
											"end": 11641,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11628,
											"end": 11636,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11622,
											"end": 11626,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11619,
											"end": 11620,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11600,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 11600,
											"end": 11642,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11600,
											"end": 11642,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 11600,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11585,
											"end": 11642,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11585,
											"end": 11642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11585,
											"end": 11642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11585,
											"end": 11642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11674,
											"end": 11678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11665,
											"end": 11679,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11658,
											"end": 11663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11680,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11703,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 11652,
											"end": 11703,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "tag",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11703,
											"name": "tag",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 11652,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11732,
											"end": 11736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11725,
											"end": 11730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11721,
											"end": 11737,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11712,
											"end": 11737,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11712,
											"end": 11737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11743,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11788,
											"end": 11795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11811,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11811,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 11811,
											"end": 11830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11811,
											"end": 11830,
											"name": "tag",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 11811,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 11861,
											"end": 11862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11839,
											"end": 11863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11839,
											"end": 11863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12045,
											"end": 12046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11977,
											"end": 12043,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11973,
											"end": 12047,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11967,
											"end": 12048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11960,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11955,
											"end": 11964,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 11951,
											"end": 11952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11948,
											"end": 11949,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 11953,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 11940,
											"end": 11965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11936,
											"end": 12049,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11933,
											"end": 12072,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11933,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 11933,
											"end": 12072,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11933,
											"end": 12072,
											"name": "tag",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 11933,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12188,
											"end": 12254,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12183,
											"end": 12258,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12176,
											"end": 12259,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12171,
											"end": 12172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12169,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12164,
											"end": 12173,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12153,
											"end": 12162,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 12149,
											"end": 12174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12145,
											"end": 12260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12142,
											"end": 12283,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12142,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 12142,
											"end": 12283,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "tag",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12142,
											"end": 12283,
											"name": "tag",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 12142,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12467,
											"end": 12468,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12399,
											"end": 12465,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12394,
											"end": 12469,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 12391,
											"end": 12392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12387,
											"end": 12470,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12382,
											"end": 12383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12379,
											"end": 12380,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 12371,
											"end": 12372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12364,
											"end": 12373,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12360,
											"end": 12385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12356,
											"end": 12471,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12353,
											"end": 12494,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12353,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 12353,
											"end": 12494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "tag",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12353,
											"end": 12494,
											"name": "tag",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 12353,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12609,
											"end": 12675,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12604,
											"end": 12679,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 12601,
											"end": 12602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12680,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12592,
											"end": 12593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12581,
											"end": 12582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12574,
											"end": 12583,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12570,
											"end": 12595,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12566,
											"end": 12681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12563,
											"end": 12704,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12563,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 12563,
											"end": 12704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "tag",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12563,
											"end": 12704,
											"name": "tag",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 12563,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12732,
											"end": 12733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 12734,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12714,
											"end": 12734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12714,
											"end": 12734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 12740,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12786,
											"end": 12793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "494"
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12809,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 12809,
											"end": 12829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12809,
											"end": 12829,
											"name": "tag",
											"source": 3,
											"value": "494"
										},
										{
											"begin": 12809,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12804,
											"end": 12829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12804,
											"end": 12829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 12861,
											"end": 12862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "tag",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 12843,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12838,
											"end": 12863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12838,
											"end": 12863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13031,
											"end": 13032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13029,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12959,
											"end": 13033,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12953,
											"end": 13034,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12948,
											"end": 12949,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12941,
											"end": 12950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12934,
											"end": 12951,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12930,
											"end": 13035,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12927,
											"end": 13058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12927,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 12927,
											"end": 13058,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "tag",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12927,
											"end": 13058,
											"name": "tag",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 12927,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13086,
											"end": 13087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13083,
											"end": 13084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13079,
											"end": 13088,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 13068,
											"end": 13088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13068,
											"end": 13088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 13094,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13139,
											"end": 13143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 13176,
											"end": 13177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13159,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 13159,
											"end": 13178,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13159,
											"end": 13178,
											"name": "tag",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 13159,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13154,
											"end": 13178,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13154,
											"end": 13178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "500"
										},
										{
											"begin": 13209,
											"end": 13210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "tag",
											"source": 3,
											"value": "500"
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13187,
											"end": 13211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13187,
											"end": 13211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13381,
											"end": 13382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13313,
											"end": 13379,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13309,
											"end": 13383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13306,
											"end": 13307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13302,
											"end": 13384,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 13297,
											"end": 13298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13294,
											"end": 13295,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13290,
											"end": 13299,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 13283,
											"end": 13300,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13279,
											"end": 13385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13276,
											"end": 13408,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13276,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 13276,
											"end": 13408,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "tag",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13276,
											"end": 13408,
											"name": "tag",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 13276,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13567,
											"end": 13568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13499,
											"end": 13565,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13495,
											"end": 13569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13492,
											"end": 13493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13488,
											"end": 13570,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 13484,
											"end": 13485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13482,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13477,
											"end": 13486,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 13473,
											"end": 13571,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13594,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 13470,
											"end": 13594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "tag",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13594,
											"name": "tag",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 13470,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13619,
											"end": 13620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13616,
											"end": 13617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13612,
											"end": 13621,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13604,
											"end": 13621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13604,
											"end": 13621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13100,
											"end": 13627,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13673,
											"end": 13677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13693,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 13693,
											"end": 13713,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13693,
											"end": 13713,
											"name": "tag",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 13693,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13688,
											"end": 13713,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13688,
											"end": 13713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13727,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "507"
										},
										{
											"begin": 13745,
											"end": 13746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13727,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 13727,
											"end": 13747,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13727,
											"end": 13747,
											"name": "tag",
											"source": 3,
											"value": "507"
										},
										{
											"begin": 13727,
											"end": 13747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13722,
											"end": 13747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13722,
											"end": 13747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13766,
											"end": 13767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13760,
											"end": 13768,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13757,
											"end": 13791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13757,
											"end": 13791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "508"
										},
										{
											"begin": 13757,
											"end": 13791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "tag",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13757,
											"end": 13791,
											"name": "tag",
											"source": 3,
											"value": "508"
										},
										{
											"begin": 13757,
											"end": 13791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13816,
											"end": 13817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13813,
											"end": 13814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13809,
											"end": 13818,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13824,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13830,
											"end": 13926,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 13830,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13867,
											"end": 13874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 13914,
											"end": 13919,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13896,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 13896,
											"end": 13920,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13896,
											"end": 13920,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 13896,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13885,
											"end": 13920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13885,
											"end": 13920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13830,
											"end": 13926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13830,
											"end": 13926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13830,
											"end": 13926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13830,
											"end": 13926,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13932,
											"end": 14036,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 13932,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13977,
											"end": 13984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14006,
											"end": 14030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 14024,
											"end": 14029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14006,
											"end": 14030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 14006,
											"end": 14030,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14006,
											"end": 14030,
											"name": "tag",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 14006,
											"end": 14030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13995,
											"end": 14030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13995,
											"end": 14030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13932,
											"end": 14036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13932,
											"end": 14036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13932,
											"end": 14036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13932,
											"end": 14036,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14042,
											"end": 14132,
											"name": "tag",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 14042,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14076,
											"end": 14083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14119,
											"end": 14124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14112,
											"end": 14125,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14105,
											"end": 14126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14094,
											"end": 14126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14094,
											"end": 14126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14042,
											"end": 14132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14042,
											"end": 14132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14042,
											"end": 14132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14042,
											"end": 14132,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14138,
											"end": 14246,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 14138,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14187,
											"end": 14194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14216,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 14234,
											"end": 14239,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14216,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 14216,
											"end": 14240,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14216,
											"end": 14240,
											"name": "tag",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 14216,
											"end": 14240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14205,
											"end": 14240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14205,
											"end": 14240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14138,
											"end": 14246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14138,
											"end": 14246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14138,
											"end": 14246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14138,
											"end": 14246,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14252,
											"end": 14362,
											"name": "tag",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 14252,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14303,
											"end": 14310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14332,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 14350,
											"end": 14355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14332,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 14332,
											"end": 14356,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14332,
											"end": 14356,
											"name": "tag",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 14332,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14321,
											"end": 14356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14321,
											"end": 14356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14362,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14368,
											"end": 14444,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 14368,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14404,
											"end": 14411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14433,
											"end": 14438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14422,
											"end": 14438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14422,
											"end": 14438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14368,
											"end": 14444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14368,
											"end": 14444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14368,
											"end": 14444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14368,
											"end": 14444,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14450,
											"end": 14576,
											"name": "tag",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 14450,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14487,
											"end": 14494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14527,
											"end": 14569,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14520,
											"end": 14525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14516,
											"end": 14570,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14505,
											"end": 14570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14505,
											"end": 14570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14450,
											"end": 14576,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14450,
											"end": 14576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14450,
											"end": 14576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14450,
											"end": 14576,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14582,
											"end": 14659,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 14582,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14619,
											"end": 14626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 14653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14637,
											"end": 14653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14637,
											"end": 14653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14582,
											"end": 14659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14582,
											"end": 14659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14582,
											"end": 14659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14582,
											"end": 14659,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14665,
											"end": 14799,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 14665,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14723,
											"end": 14732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14756,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 14787,
											"end": 14792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14756,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 14756,
											"end": 14793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14756,
											"end": 14793,
											"name": "tag",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 14756,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14743,
											"end": 14793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14743,
											"end": 14793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14665,
											"end": 14799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14665,
											"end": 14799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14665,
											"end": 14799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14665,
											"end": 14799,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14805,
											"end": 14943,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 14805,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14867,
											"end": 14876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 14931,
											"end": 14936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "tag",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14805,
											"end": 14943,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14805,
											"end": 14943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14805,
											"end": 14943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14805,
											"end": 14943,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14949,
											"end": 15089,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 14949,
											"end": 15089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15013,
											"end": 15022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15046,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "533"
										},
										{
											"begin": 15077,
											"end": 15082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15046,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 15046,
											"end": 15083,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15046,
											"end": 15083,
											"name": "tag",
											"source": 3,
											"value": "533"
										},
										{
											"begin": 15046,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15033,
											"end": 15083,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15033,
											"end": 15083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14949,
											"end": 15089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14949,
											"end": 15089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14949,
											"end": 15089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14949,
											"end": 15089,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15095,
											"end": 15221,
											"name": "tag",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 15095,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15145,
											"end": 15154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15178,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "535"
										},
										{
											"begin": 15209,
											"end": 15214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15178,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "536"
										},
										{
											"begin": 15178,
											"end": 15215,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15178,
											"end": 15215,
											"name": "tag",
											"source": 3,
											"value": "535"
										},
										{
											"begin": 15178,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15165,
											"end": 15215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15165,
											"end": 15215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15095,
											"end": 15221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15095,
											"end": 15221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15095,
											"end": 15221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15095,
											"end": 15221,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15227,
											"end": 15340,
											"name": "tag",
											"source": 3,
											"value": "536"
										},
										{
											"begin": 15227,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15277,
											"end": 15286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15310,
											"end": 15334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "538"
										},
										{
											"begin": 15328,
											"end": 15333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15310,
											"end": 15334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 15310,
											"end": 15334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15310,
											"end": 15334,
											"name": "tag",
											"source": 3,
											"value": "538"
										},
										{
											"begin": 15310,
											"end": 15334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15297,
											"end": 15334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15297,
											"end": 15334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15227,
											"end": 15340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15227,
											"end": 15340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15227,
											"end": 15340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15227,
											"end": 15340,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15346,
											"end": 15579,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 15346,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15385,
											"end": 15388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "540"
										},
										{
											"begin": 15426,
											"end": 15431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "tag",
											"source": 3,
											"value": "540"
										},
										{
											"begin": 15408,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15399,
											"end": 15432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15399,
											"end": 15432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15454,
											"end": 15520,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15447,
											"end": 15452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15444,
											"end": 15521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15441,
											"end": 15544,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15441,
											"end": 15544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "541"
										},
										{
											"begin": 15441,
											"end": 15544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "542"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "tag",
											"source": 3,
											"value": "542"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15441,
											"end": 15544,
											"name": "tag",
											"source": 3,
											"value": "541"
										},
										{
											"begin": 15441,
											"end": 15544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15571,
											"end": 15572,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15564,
											"end": 15569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15560,
											"end": 15573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15553,
											"end": 15573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15553,
											"end": 15573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15579,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15585,
											"end": 15813,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 15585,
											"end": 15813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15620,
											"end": 15623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 15666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "544"
										},
										{
											"begin": 15660,
											"end": 15665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15643,
											"end": 15666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 15643,
											"end": 15666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15643,
											"end": 15666,
											"name": "tag",
											"source": 3,
											"value": "544"
										},
										{
											"begin": 15643,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15634,
											"end": 15666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15634,
											"end": 15666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15688,
											"end": 15754,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15681,
											"end": 15686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15678,
											"end": 15755,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15675,
											"end": 15778,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15675,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "545"
										},
										{
											"begin": 15675,
											"end": 15778,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15758,
											"end": 15776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "546"
										},
										{
											"begin": 15758,
											"end": 15776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 15758,
											"end": 15776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15758,
											"end": 15776,
											"name": "tag",
											"source": 3,
											"value": "546"
										},
										{
											"begin": 15758,
											"end": 15776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15675,
											"end": 15778,
											"name": "tag",
											"source": 3,
											"value": "545"
										},
										{
											"begin": 15675,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15801,
											"end": 15806,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15798,
											"end": 15799,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15807,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15787,
											"end": 15807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15787,
											"end": 15807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15585,
											"end": 15813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15585,
											"end": 15813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15585,
											"end": 15813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15585,
											"end": 15813,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15819,
											"end": 15999,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 15819,
											"end": 15999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15867,
											"end": 15944,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15864,
											"end": 15865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15857,
											"end": 15945,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15964,
											"end": 15968,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15961,
											"end": 15962,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15954,
											"end": 15969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15988,
											"end": 15992,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 15985,
											"end": 15986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15978,
											"end": 15993,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16005,
											"end": 16185,
											"name": "tag",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 16005,
											"end": 16185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16053,
											"end": 16130,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16050,
											"end": 16051,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16043,
											"end": 16131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16150,
											"end": 16154,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 16147,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16140,
											"end": 16155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16174,
											"end": 16178,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16171,
											"end": 16172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16164,
											"end": 16179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16191,
											"end": 16371,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 16191,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16239,
											"end": 16316,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16236,
											"end": 16237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16229,
											"end": 16317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16326,
											"end": 16341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16364,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16357,
											"end": 16358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16350,
											"end": 16365,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16377,
											"end": 16557,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 16377,
											"end": 16557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16425,
											"end": 16502,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16422,
											"end": 16423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16415,
											"end": 16503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16522,
											"end": 16526,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16519,
											"end": 16520,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16512,
											"end": 16527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16546,
											"end": 16550,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16543,
											"end": 16544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16686,
											"end": 16803,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 16686,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16795,
											"end": 16796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16792,
											"end": 16793,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16809,
											"end": 16911,
											"name": "tag",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 16809,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16851,
											"end": 16859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16898,
											"end": 16903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16895,
											"end": 16896,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16891,
											"end": 16904,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 16870,
											"end": 16904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16870,
											"end": 16904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16809,
											"end": 16911,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16809,
											"end": 16911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16809,
											"end": 16911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16809,
											"end": 16911,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16917,
											"end": 17055,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 16917,
											"end": 17055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16998,
											"end": 17030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "556"
										},
										{
											"begin": 17024,
											"end": 17029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16998,
											"end": 17030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 16998,
											"end": 17030,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16998,
											"end": 17030,
											"name": "tag",
											"source": 3,
											"value": "556"
										},
										{
											"begin": 16998,
											"end": 17030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16991,
											"end": 16996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16988,
											"end": 17031,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16978,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "557"
										},
										{
											"begin": 16978,
											"end": 17049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17045,
											"end": 17046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17042,
											"end": 17043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17035,
											"end": 17047,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16978,
											"end": 17049,
											"name": "tag",
											"source": 3,
											"value": "557"
										},
										{
											"begin": 16978,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16917,
											"end": 17055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16917,
											"end": 17055,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17061,
											"end": 17177,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 17061,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17131,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "559"
										},
										{
											"begin": 17146,
											"end": 17151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17131,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 17131,
											"end": 17152,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17131,
											"end": 17152,
											"name": "tag",
											"source": 3,
											"value": "559"
										},
										{
											"begin": 17131,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17124,
											"end": 17129,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17121,
											"end": 17153,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17111,
											"end": 17171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "560"
										},
										{
											"begin": 17111,
											"end": 17171,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17167,
											"end": 17168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17164,
											"end": 17165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17157,
											"end": 17169,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17111,
											"end": 17171,
											"name": "tag",
											"source": 3,
											"value": "560"
										},
										{
											"begin": 17111,
											"end": 17171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17061,
											"end": 17177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17061,
											"end": 17177,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17183,
											"end": 17329,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 17183,
											"end": 17329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17268,
											"end": 17304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "562"
										},
										{
											"begin": 17298,
											"end": 17303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17268,
											"end": 17304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 17268,
											"end": 17304,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17268,
											"end": 17304,
											"name": "tag",
											"source": 3,
											"value": "562"
										},
										{
											"begin": 17268,
											"end": 17304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17261,
											"end": 17266,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17258,
											"end": 17305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17248,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "563"
										},
										{
											"begin": 17248,
											"end": 17323,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17319,
											"end": 17320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17316,
											"end": 17317,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17309,
											"end": 17321,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17248,
											"end": 17323,
											"name": "tag",
											"source": 3,
											"value": "563"
										},
										{
											"begin": 17248,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17183,
											"end": 17329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17183,
											"end": 17329,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17335,
											"end": 17485,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 17335,
											"end": 17485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17422,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "565"
										},
										{
											"begin": 17454,
											"end": 17459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17422,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 17422,
											"end": 17460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17422,
											"end": 17460,
											"name": "tag",
											"source": 3,
											"value": "565"
										},
										{
											"begin": 17422,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17415,
											"end": 17420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17412,
											"end": 17461,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17402,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "566"
										},
										{
											"begin": 17402,
											"end": 17479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17475,
											"end": 17476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17465,
											"end": 17477,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17402,
											"end": 17479,
											"name": "tag",
											"source": 3,
											"value": "566"
										},
										{
											"begin": 17402,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17335,
											"end": 17485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17335,
											"end": 17485,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17491,
											"end": 17611,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 17491,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17563,
											"end": 17586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "568"
										},
										{
											"begin": 17580,
											"end": 17585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17563,
											"end": 17586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 17563,
											"end": 17586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17563,
											"end": 17586,
											"name": "tag",
											"source": 3,
											"value": "568"
										},
										{
											"begin": 17563,
											"end": 17586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17556,
											"end": 17561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17553,
											"end": 17587,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17543,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "569"
										},
										{
											"begin": 17543,
											"end": 17605,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17601,
											"end": 17602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17598,
											"end": 17599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17591,
											"end": 17603,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17543,
											"end": 17605,
											"name": "tag",
											"source": 3,
											"value": "569"
										},
										{
											"begin": 17543,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17491,
											"end": 17611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17491,
											"end": 17611,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17617,
											"end": 17739,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 17617,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17690,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "571"
										},
										{
											"begin": 17708,
											"end": 17713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17690,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 17690,
											"end": 17714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17690,
											"end": 17714,
											"name": "tag",
											"source": 3,
											"value": "571"
										},
										{
											"begin": 17690,
											"end": 17714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17683,
											"end": 17688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17680,
											"end": 17715,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17670,
											"end": 17733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "572"
										},
										{
											"begin": 17670,
											"end": 17733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17729,
											"end": 17730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17726,
											"end": 17727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17719,
											"end": 17731,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17670,
											"end": 17733,
											"name": "tag",
											"source": 3,
											"value": "572"
										},
										{
											"begin": 17670,
											"end": 17733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17617,
											"end": 17739,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17617,
											"end": 17739,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"baseCpi()": "a37069ee",
							"cmmd()": "4dafa35e",
							"computeRebasePercentage(int256,int256,int256,int256)": "3a785af1",
							"cpiOracle()": "ab33c5ca",
							"deviationThreshold()": "d94ad837",
							"epoch()": "900cf0cf",
							"faucet(address,uint256)": "7b56c2b2",
							"initialize(address,uint256)": "cd6dc687",
							"marketOracle()": "60961528",
							"rebase()": "af14052c",
							"rebaseFunctionGrowth()": "7486cdea",
							"rebaseFunctionLowerPercentage()": "5ee01540",
							"rebaseFunctionUpperPercentage()": "9db59b2f",
							"setBaseCpi(uint256)": "6de729db",
							"setCpiOracle(address)": "3d6a46e5",
							"setDeviationThreshold(uint256)": "53a15edc",
							"setMarketOracle(address)": "9e30bac5",
							"setRebaseFunctionGrowth(int256)": "8001066d",
							"setRebaseFunctionLowerPercentage(int256)": "e9fa88a4",
							"setRebaseFunctionUpperPercentage(int256)": "f4fefa49"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cpi\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"requestedSupplyAdjustment\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampSec\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseCpi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cmmd\",\"outputs\":[{\"internalType\":\"contract ICMMD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"normalizedRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lower\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"upper\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"growth\",\"type\":\"int256\"}],\"name\":\"computeRebasePercentage\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cpiOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deviationThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICMMD\",\"name\":\"cmmd_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCpi_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFunctionGrowth\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFunctionLowerPercentage\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseFunctionUpperPercentage\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseCpi_\",\"type\":\"uint256\"}],\"name\":\"setBaseCpi\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"cpiOracle_\",\"type\":\"address\"}],\"name\":\"setCpiOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deviationThreshold_\",\"type\":\"uint256\"}],\"name\":\"setDeviationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"marketOracle_\",\"type\":\"address\"}],\"name\":\"setMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"rebaseFunctionGrowth_\",\"type\":\"int256\"}],\"name\":\"setRebaseFunctionGrowth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"rebaseFunctionLowerPercentage_\",\"type\":\"int256\"}],\"name\":\"setRebaseFunctionLowerPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"rebaseFunctionUpperPercentage_\",\"type\":\"int256\"}],\"name\":\"setRebaseFunctionUpperPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an implementation of the CMMD Ideal Money protocol.      This component regulates the token supply of the CMMD ERC20 token in response to      market oracles.\",\"kind\":\"dev\",\"methods\":{\"computeRebasePercentage(int256,int256,int256,int256)\":{\"params\":{\"normalizedRate\":\"value of rate/targetRate in DECIMALS decimal fixed point number\"},\"returns\":{\"_0\":\"The percentage of supply to be added or removed.\"}},\"initialize(address,uint256)\":{\"details\":\"ZOS upgradable contract initialization method.      It is called at the time of contract creation to invoke parent class initializers and      initialize the contract's state variables.\"},\"rebase()\":{\"details\":\"Changes supply with percentage of:  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower\"},\"setBaseCpi(uint256)\":{\"params\":{\"baseCpi_\":\"The new exchange rate threshold fraction.\"}},\"setCpiOracle(address)\":{\"params\":{\"cpiOracle_\":\"The address of the cpi oracle contract.\"}},\"setDeviationThreshold(uint256)\":{\"params\":{\"deviationThreshold_\":\"The new exchange rate threshold fraction.\"}},\"setMarketOracle(address)\":{\"params\":{\"marketOracle_\":\"The address of the market oracle contract.\"}}},\"title\":\"CMMD Monetary Supply Policy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeRebasePercentage(int256,int256,int256,int256)\":{\"notice\":\"Computes the percentage of supply to be added or removed: Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md\"},\"rebase()\":{\"notice\":\"Initiates a new rebase operation, provided the minimum time period has elapsed.\"},\"setBaseCpi(uint256)\":{\"notice\":\"Sets the Base CPI - for ease of demo and testing \"},\"setCpiOracle(address)\":{\"notice\":\"Sets the reference to the CPI oracle.\"},\"setDeviationThreshold(uint256)\":{\"notice\":\"Sets the deviation threshold fraction. If the exchange rate given by the market         oracle is within this fractional distance from the targetRate, then no supply         modifications are made. DECIMALS fixed point number.\"},\"setMarketOracle(address)\":{\"notice\":\"Sets the reference to the Market oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMMDPolicy.sol\":\"CMMDPolicy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CMMDPolicy.sol\":{\"keccak256\":\"0x7b897bd060e18bf07ec94352e694ee77e5ff2b2c751dd63be4a3ce21701c1938\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a33f164b941f5ba50f7b8d99e654955d5b0cd0661319dbef10db4a429464c80f\",\"dweb:/ipfs/QmWh7taCdbtDFgDx3heFC3VUj4cpwKyzvFabvBtZiiGotc\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]},\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 51,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "faucetCount",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 64,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "transactions",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(TransferStruct)60_storage)dyn_storage"
							},
							{
								"astId": 67,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "cmmd",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ICMMD)18"
							},
							{
								"astId": 70,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "cpiOracle",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IOracle)26"
							},
							{
								"astId": 73,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "marketOracle",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IOracle)26"
							},
							{
								"astId": 75,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "baseCpi",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 77,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "deviationThreshold",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 79,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "epoch",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 105,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "rebaseFunctionLowerPercentage",
								"offset": 0,
								"slot": "8",
								"type": "t_int256"
							},
							{
								"astId": 107,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "rebaseFunctionUpperPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_int256"
							},
							{
								"astId": 109,
								"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
								"label": "rebaseFunctionGrowth",
								"offset": 0,
								"slot": "10",
								"type": "t_int256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(TransferStruct)60_storage)dyn_storage": {
								"base": "t_struct(TransferStruct)60_storage",
								"encoding": "dynamic_array",
								"label": "struct CMMDPolicy.TransferStruct[]",
								"numberOfBytes": "32"
							},
							"t_contract(ICMMD)18": {
								"encoding": "inplace",
								"label": "contract ICMMD",
								"numberOfBytes": "20"
							},
							"t_contract(IOracle)26": {
								"encoding": "inplace",
								"label": "contract IOracle",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_struct(TransferStruct)60_storage": {
								"encoding": "inplace",
								"label": "struct CMMDPolicy.TransferStruct",
								"members": [
									{
										"astId": 53,
										"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
										"label": "sender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 55,
										"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 57,
										"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 59,
										"contract": "contracts/CMMDPolicy.sol:CMMDPolicy",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"computeRebasePercentage(int256,int256,int256,int256)": {
								"notice": "Computes the percentage of supply to be added or removed: Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md"
							},
							"rebase()": {
								"notice": "Initiates a new rebase operation, provided the minimum time period has elapsed."
							},
							"setBaseCpi(uint256)": {
								"notice": "Sets the Base CPI - for ease of demo and testing "
							},
							"setCpiOracle(address)": {
								"notice": "Sets the reference to the CPI oracle."
							},
							"setDeviationThreshold(uint256)": {
								"notice": "Sets the deviation threshold fraction. If the exchange rate given by the market         oracle is within this fractional distance from the targetRate, then no supply         modifications are made. DECIMALS fixed point number."
							},
							"setMarketOracle(address)": {
								"notice": "Sets the reference to the Market oracle."
							}
						},
						"version": 1
					}
				},
				"ICMMD": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "supplyDelta",
									"type": "int256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rebase(uint256,int256)": "7a43e23f",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"supplyDelta\",\"type\":\"int256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMMDPolicy.sol\":\"ICMMD\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CMMDPolicy.sol\":{\"keccak256\":\"0x7b897bd060e18bf07ec94352e694ee77e5ff2b2c751dd63be4a3ce21701c1938\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a33f164b941f5ba50f7b8d99e654955d5b0cd0661319dbef10db4a429464c80f\",\"dweb:/ipfs/QmWh7taCdbtDFgDx3heFC3VUj4cpwKyzvFabvBtZiiGotc\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]},\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getData()": "3bc5de30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMMDPolicy.sol\":\"IOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CMMDPolicy.sol\":{\"keccak256\":\"0x7b897bd060e18bf07ec94352e694ee77e5ff2b2c751dd63be4a3ce21701c1938\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a33f164b941f5ba50f7b8d99e654955d5b0cd0661319dbef10db4a429464c80f\",\"dweb:/ipfs/QmWh7taCdbtDFgDx3heFC3VUj4cpwKyzvFabvBtZiiGotc\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]},\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":115:1794  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":115:1794  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI GAS 0x2B STATICCALL PUSH18 0x4B6F7EE3483AD69CD39A56E96415BBF15B06 NUMBER EXTCODEHASH DIFFICULTY 0xEE SLT RETURNDATASIZE STOP 0x4D RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:1679:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI GAS 0x2B STATICCALL PUSH18 0x4B6F7EE3483AD69CD39A56E96415BBF15B06 NUMBER EXTCODEHASH DIFFICULTY 0xEE SLT RETURNDATASIZE STOP 0x4D RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:1679:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 1794,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220575a2bfa714b6f7ee3483ad69cd39a56e96415bbf15b06433f44ee123d004d3e64736f6c63430008070033",
									".code": [
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 1794,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x9df017fe6246ad0038edd17dbae1eb17cda90595586e10ba6db9630688819371\",\"urls\":[\"bzz-raw://959f430947d3c01472c927d43e2420ff5603de0237876cd85443ee3031283234\",\"dweb:/ipfs/Qmdk4qzwGhMLVH6cW7jeYSkuRBWyszz37Yyt5Xhc4zgHvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMathInt.sol": {
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"details": "Math operations for int256 with overflow safety checks.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathInt",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMathInt.sol\":1272:4341  library SafeMathInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMathInt.sol\":1272:4341  library SafeMathInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B CALLDATASIZE 0xD5 0xC4 0xBA CALLDATASIZE SWAP15 NOT 0x5E 0xBD PUSH20 0x53761DFDA9386D38D2600DC2BF982FF15A1E29EC SAR PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1272:3069:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B CALLDATASIZE 0xD5 0xC4 0xBA CALLDATASIZE SWAP15 NOT 0x5E 0xBD PUSH20 0x53761DFDA9386D38D2600DC2BF982FF15A1E29EC SAR PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1272:3069:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite",
								"twoPower(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 4341,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b36d5c4ba369e195ebd7353761dfda9386d38d2600dc2bf982ff15a1e29ec1d64736f6c63430008070033",
									".code": [
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 4341,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations for int256 with overflow safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathInt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMathInt.sol\":\"SafeMathInt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMathInt.sol\":{\"keccak256\":\"0x5b01d664d0ef57fff63ebfb76f068406e9dae631ecbd14e344af1ece8391c547\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9f2a990a8008bc668bc6c89a4a101d46dcbb13d7b2ba7f8415f9a442542d5c0f\",\"dweb:/ipfs/QmQqAmprT8C637VFQAakfqeWh6NwrRQoCgEn6DjZT6xHav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SafeMath.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/CMMDPolicy.sol": {
				"ast": {
					"absolutePath": "contracts/CMMDPolicy.sol",
					"exportedSymbols": {
						"CMMDPolicy": [
							718
						],
						"ICMMD": [
							18
						],
						"IOracle": [
							26
						],
						"SafeMath": [
							852
						],
						"SafeMathInt": [
							1204
						]
					},
					"id": 719,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "90:22:0"
						},
						{
							"absolutePath": "contracts/SafeMathInt.sol",
							"file": "./SafeMathInt.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 719,
							"sourceUnit": 1205,
							"src": "114:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 719,
							"sourceUnit": 853,
							"src": "142:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "ICMMD",
							"nameLocation": "178:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "236:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:9:0"
									},
									"scope": 18,
									"src": "190:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a43e23f",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nameLocation": "260:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "275:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "supplyDelta",
												"nameLocation": "289:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "282:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 11,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:35:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 18,
									"src": "251:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 719,
							"src": "168:163:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "IOracle",
							"nameLocation": "343:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3bc5de30",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "366:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "403:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:15:0"
									},
									"scope": 26,
									"src": "357:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 719,
							"src": "333:78:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "413:229:0",
								"text": " @title CMMD Monetary Supply Policy\n @dev This is an implementation of the CMMD Ideal Money protocol.\n      This component regulates the token supply of the CMMD ERC20 token in response to\n      market oracles."
							},
							"fullyImplemented": true,
							"id": 718,
							"linearizedBaseContracts": [
								718
							],
							"name": "CMMDPolicy",
							"nameLocation": "652:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 39,
									"name": "LogRebase",
									"nameLocation": "675:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "exchangeRate",
												"nameLocation": "733:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "725:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "cpi",
												"nameLocation": "763:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "755:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestedSupplyAdjustment",
												"nameLocation": "783:25:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "776:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 34,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestampSec",
												"nameLocation": "826:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "818:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:160:0"
									},
									"src": "669:176:0"
								},
								{
									"anonymous": false,
									"id": 49,
									"name": "Transfer",
									"nameLocation": "857:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "874:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "866:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "903:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "898:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "919:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "911:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:64:0"
									},
									"src": "851:79:0"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "faucetCount",
									"nameLocation": "948:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "940:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "940:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "CMMDPolicy.TransferStruct",
									"id": 60,
									"members": [
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1006:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "998:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 52,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "998:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "1030:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "1022:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 54,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1053:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "1048:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 56,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1048:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1077:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "1069:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 58,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1069:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferStruct",
									"nameLocation": "973:14:0",
									"nodeType": "StructDefinition",
									"scope": 718,
									"src": "966:127:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "transactions",
									"nameLocation": "1116:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1099:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_TransferStruct_$60_storage_$dyn_storage",
										"typeString": "struct CMMDPolicy.TransferStruct[]"
									},
									"typeName": {
										"baseType": {
											"id": 62,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 61,
												"name": "TransferStruct",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "1099:14:0"
											},
											"referencedDeclaration": 60,
											"src": "1099:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TransferStruct_$60_storage_ptr",
												"typeString": "struct CMMDPolicy.TransferStruct"
											}
										},
										"id": 63,
										"nodeType": "ArrayTypeName",
										"src": "1099:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_TransferStruct_$60_storage_$dyn_storage_ptr",
											"typeString": "struct CMMDPolicy.TransferStruct[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4dafa35e",
									"id": 67,
									"mutability": "mutable",
									"name": "cmmd",
									"nameLocation": "1148:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1135:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICMMD_$18",
										"typeString": "contract ICMMD"
									},
									"typeName": {
										"id": 66,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 65,
											"name": "ICMMD",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 18,
											"src": "1135:5:0"
										},
										"referencedDeclaration": 18,
										"src": "1135:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICMMD_$18",
											"typeString": "contract ICMMD"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab33c5ca",
									"id": 70,
									"mutability": "mutable",
									"name": "cpiOracle",
									"nameLocation": "1244:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1229:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOracle_$26",
										"typeString": "contract IOracle"
									},
									"typeName": {
										"id": 69,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 68,
											"name": "IOracle",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 26,
											"src": "1229:7:0"
										},
										"referencedDeclaration": 26,
										"src": "1229:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOracle_$26",
											"typeString": "contract IOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60961528",
									"id": 73,
									"mutability": "mutable",
									"name": "marketOracle",
									"nameLocation": "1352:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1337:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOracle_$26",
										"typeString": "contract IOracle"
									},
									"typeName": {
										"id": 72,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 71,
											"name": "IOracle",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 26,
											"src": "1337:7:0"
										},
										"referencedDeclaration": 26,
										"src": "1337:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOracle_$26",
											"typeString": "contract IOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a37069ee",
									"id": 75,
									"mutability": "mutable",
									"name": "baseCpi",
									"nameLocation": "1463:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1448:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 74,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d94ad837",
									"id": 77,
									"mutability": "mutable",
									"name": "deviationThreshold",
									"nameLocation": "1792:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1777:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1777:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "900cf0cf",
									"id": 79,
									"mutability": "mutable",
									"name": "epoch",
									"nameLocation": "1883:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1868:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 78,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1868:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 82,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "1920:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "1895:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1895:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1931:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 91,
									"mutability": "constant",
									"name": "MAX_RATE",
									"nameLocation": "2115:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "2090:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2090:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 90,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 86,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 84,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2126:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "36",
												"id": 85,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2130:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "2126:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 87,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2134:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"id": 88,
												"name": "DECIMALS",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 82,
												"src": "2138:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "2134:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "2126:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 103,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "2219:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "2194:74:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2194:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 102,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"expression": {
														"arguments": [
															{
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2245:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 96,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2245:6:0",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																}
															],
															"id": 95,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "2240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2240:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_int256",
															"typeString": "type(int256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "2240:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												],
												"id": 94,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "2232:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 100,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2232:25:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"id": 101,
											"name": "MAX_RATE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 91,
											"src": "2260:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "2232:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5ee01540",
									"id": 105,
									"mutability": "mutable",
									"name": "rebaseFunctionLowerPercentage",
									"nameLocation": "2423:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "2409:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 104,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2409:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9db59b2f",
									"id": 107,
									"mutability": "mutable",
									"name": "rebaseFunctionUpperPercentage",
									"nameLocation": "2472:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "2458:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 106,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2458:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7486cdea",
									"id": 109,
									"mutability": "mutable",
									"name": "rebaseFunctionGrowth",
									"nameLocation": "2521:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "2507:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 108,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2507:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 117,
									"mutability": "constant",
									"name": "ONE",
									"nameLocation": "2572:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 718,
									"src": "2548:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 110,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "2548:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 115,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2585:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"id": 114,
													"name": "DECIMALS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "2589:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2585:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 112,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2578:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_int256_$",
												"typeString": "type(int256)"
											},
											"typeName": {
												"id": 111,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "2578:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2578:20:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "2869:915:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "epoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "2879:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 122,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2887:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2895:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2887:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2879:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "2879:17:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "cpi",
														"nameLocation": "2915:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "2907:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 129,
												"nodeType": "VariableDeclarationStatement",
												"src": "2907:11:0"
											},
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"mutability": "mutable",
														"name": "cpiValid",
														"nameLocation": "2933:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "2928:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 130,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"nodeType": "VariableDeclarationStatement",
												"src": "2928:13:0"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 133,
																"name": "cpi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "2952:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 134,
																"name": "cpiValid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2957:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2951:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 136,
																"name": "cpiOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "2969:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOracle_$26",
																	"typeString": "contract IOracle"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "2969:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$_t_bool_$",
																"typeString": "function () external returns (uint256,bool)"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "2951:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2951:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "cpiValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2998:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2998:17:0"
											},
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "targetRate",
														"nameLocation": "3034:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "3026:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 145,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 159,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 151,
																	"name": "cpi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "3073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3077:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 153,
																		"name": "DECIMALS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 82,
																		"src": "3081:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3077:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 149,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "3060:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$852_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 755,
																"src": "3060:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3060:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"id": 156,
																	"name": "baseCpi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "3092:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3091:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 147,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "3047:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$852_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 780,
														"src": "3047:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3047:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:75:0"
											},
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "exchangeRate",
														"nameLocation": "3120:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "3112:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"nodeType": "VariableDeclarationStatement",
												"src": "3112:20:0"
											},
											{
												"assignments": [
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "rateValid",
														"nameLocation": "3147:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "3142:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"nodeType": "VariableDeclarationStatement",
												"src": "3142:14:0"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 166,
																"name": "exchangeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3167:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 167,
																"name": "rateValid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3181:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 168,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3166:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 169,
																"name": "marketOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "3194:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOracle_$26",
																	"typeString": "contract IOracle"
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "3194:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$_t_bool_$",
																"typeString": "function () external returns (uint256,bool)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3194:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "3166:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "3166:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "rateValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "3234:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3226:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3226:18:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 178,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "3259:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 179,
														"name": "MAX_RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3274:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3259:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "IfStatement",
												"src": "3255:77:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "3284:48:0",
													"statements": [
														{
															"expression": {
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 181,
																	"name": "exchangeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "3298:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 182,
																	"name": "MAX_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "3313:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3298:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 184,
															"nodeType": "ExpressionStatement",
															"src": "3298:23:0"
														}
													]
												}
											},
											{
												"assignments": [
													188
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "supplyDelta",
														"nameLocation": "3349:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "3342:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 187,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3342:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"arguments": [
														{
															"id": 190,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3382:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 191,
															"name": "targetRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "3396:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 189,
														"name": "computeSupplyDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3363:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int256_$",
															"typeString": "function (uint256,uint256) view returns (int256)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3363:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3342:65:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "supplyDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3422:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3436:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3422:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 197,
																		"name": "cmmd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3441:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICMMD_$18",
																			"typeString": "contract ICMMD"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "3441:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3441:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 202,
																				"name": "supplyDelta",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 188,
																				"src": "3471:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3463:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 200,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3463:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3463:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 204,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3462:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3441:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 206,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3487:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3441:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3422:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 222,
												"nodeType": "IfStatement",
												"src": "3418:161:0",
												"trueBody": {
													"id": 221,
													"nodeType": "Block",
													"src": "3499:80:0",
													"statements": [
														{
															"expression": {
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 209,
																	"name": "supplyDelta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "3513:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 212,
																				"name": "MAX_SUPPLY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 103,
																				"src": "3534:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"components": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 213,
																								"name": "cmmd",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 67,
																								"src": "3548:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ICMMD_$18",
																									"typeString": "contract ICMMD"
																								}
																							},
																							"id": 214,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "totalSupply",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 8,
																							"src": "3548:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																								"typeString": "function () view external returns (uint256)"
																							}
																						},
																						"id": 215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3548:18:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 216,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3547:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3534:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3527:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 210,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3527:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3527:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3513:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 220,
															"nodeType": "ExpressionStatement",
															"src": "3513:55:0"
														}
													]
												}
											},
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "supplyAfterRebase",
														"nameLocation": "3597:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "3589:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"arguments": [
														{
															"id": 227,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 228,
															"name": "supplyDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3636:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 225,
															"name": "cmmd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "3617:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICMMD_$18",
																"typeString": "contract ICMMD"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rebase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "3617:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int256_$returns$_t_uint256_$",
															"typeString": "function (uint256,int256) external returns (uint256)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3589:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 232,
																"name": "supplyAfterRebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "3665:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 233,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "3686:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3665:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 231,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3658:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "3658:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 238,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3729:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 240,
															"name": "cpi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3743:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 241,
															"name": "supplyDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3748:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"expression": {
																"id": 242,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3761:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3761:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "3712:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,int256,uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "EmitStatement",
												"src": "3707:70:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2605:234:0",
										"text": " @notice Initiates a new rebase operation, provided the minimum time period has elapsed.\n @dev Changes supply with percentage of:\n  (Upper-Lower)/(1-(Upper/Lower)/2^(Growth*NormalizedPriceDelta))) + Lower"
									},
									"functionSelector": "af14052c",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nameLocation": "2853:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2859:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:0:0"
									},
									"scope": 718,
									"src": "2844:940:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "3973:39:0",
										"statements": [
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "cpiOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3983:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 255,
														"name": "cpiOracle_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "3995:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"src": "3983:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3983:22:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "3790:129:0",
										"text": " @notice Sets the reference to the CPI oracle.\n @param cpiOracle_ The address of the cpi oracle contract."
									},
									"functionSelector": "3d6a46e5",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCpiOracle",
									"nameLocation": "3933:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "cpiOracle_",
												"nameLocation": "3954:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3946:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOracle_$26",
													"typeString": "contract IOracle"
												},
												"typeName": {
													"id": 250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 249,
														"name": "IOracle",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 26,
														"src": "3946:7:0"
													},
													"referencedDeclaration": 26,
													"src": "3946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:20:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:0:0"
									},
									"scope": 718,
									"src": "3924:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4217:45:0",
										"statements": [
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 266,
														"name": "marketOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4227:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 267,
														"name": "marketOracle_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "4242:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracle_$26",
															"typeString": "contract IOracle"
														}
													},
													"src": "4227:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "4227:28:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4019:138:0",
										"text": " @notice Sets the reference to the Market oracle.\n @param marketOracle_ The address of the market oracle contract."
									},
									"functionSelector": "9e30bac5",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketOracle",
									"nameLocation": "4171:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "marketOracle_",
												"nameLocation": "4195:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4187:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOracle_$26",
													"typeString": "contract IOracle"
												},
												"typeName": {
													"id": 262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 261,
														"name": "IOracle",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 26,
														"src": "4187:7:0"
													},
													"referencedDeclaration": 26,
													"src": "4187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracle_$26",
														"typeString": "contract IOracle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:23:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4217:0:0"
									},
									"scope": 718,
									"src": "4162:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "4339:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 277,
																"name": "rebaseFunctionGrowth_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "4357:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4382:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4357:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4349:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4349:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "4349:35:0"
											},
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 282,
														"name": "rebaseFunctionGrowth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "4394:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 283,
														"name": "rebaseFunctionGrowth_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "4417:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4394:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "4394:44:0"
											}
										]
									},
									"functionSelector": "8001066d",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRebaseFunctionGrowth",
									"nameLocation": "4278:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "rebaseFunctionGrowth_",
												"nameLocation": "4309:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4302:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 272,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:30:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4339:0:0"
									},
									"scope": 718,
									"src": "4269:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "4551:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 293,
																"name": "rebaseFunctionLowerPercentage_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "4569:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "30",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4569:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "4561:44:0"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "rebaseFunctionLowerPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "4615:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "rebaseFunctionLowerPercentage_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "4647:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4615:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "4615:62:0"
											}
										]
									},
									"functionSelector": "e9fa88a4",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRebaseFunctionLowerPercentage",
									"nameLocation": "4460:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "rebaseFunctionLowerPercentage_",
												"nameLocation": "4500:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "4493:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 288,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4493:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:39:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4551:0:0"
									},
									"scope": 718,
									"src": "4451:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4790:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "rebaseFunctionUpperPercentage_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "4808:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4808:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4800:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4800:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "4800:44:0"
											},
											{
												"expression": {
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "rebaseFunctionUpperPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "4854:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 315,
														"name": "rebaseFunctionUpperPercentage_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "4886:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4854:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "4854:62:0"
											}
										]
									},
									"functionSelector": "f4fefa49",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRebaseFunctionUpperPercentage",
									"nameLocation": "4699:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "rebaseFunctionUpperPercentage_",
												"nameLocation": "4739:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4732:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 304,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4732:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4731:39:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4790:0:0"
									},
									"scope": 718,
									"src": "4690:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "5344:57:0",
										"statements": [
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 325,
														"name": "deviationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "5354:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 326,
														"name": "deviationThreshold_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "5375:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "5354:40:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4929:343:0",
										"text": " @notice Sets the deviation threshold fraction. If the exchange rate given by the market\n         oracle is within this fractional distance from the targetRate, then no supply\n         modifications are made. DECIMALS fixed point number.\n @param deviationThreshold_ The new exchange rate threshold fraction."
									},
									"functionSelector": "53a15edc",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDeviationThreshold",
									"nameLocation": "5286:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "deviationThreshold_",
												"nameLocation": "5316:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "5308:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5307:29:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5344:0:0"
									},
									"scope": 718,
									"src": "5277:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5600:35:0",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 336,
														"name": "baseCpi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "5610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 337,
														"name": "baseCpi_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "5620:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5610:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "5610:18:0"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "5409:141:0",
										"text": " @notice Sets the Base CPI - for ease of demo and testing \n @param baseCpi_ The new exchange rate threshold fraction."
									},
									"functionSelector": "6de729db",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseCpi",
									"nameLocation": "5564:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "baseCpi_",
												"nameLocation": "5583:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5575:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:18:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5600:0:0"
									},
									"scope": 718,
									"src": "5555:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5949:413:0",
										"statements": [
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 350,
														"name": "deviationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "6007:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6028:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6032:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 353,
																			"name": "DECIMALS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "6037:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "6037:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 356,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6036:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6032:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6028:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6007:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "6007:43:0"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 361,
														"name": "rebaseFunctionGrowth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "6061:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6091:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6096:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 366,
																				"name": "DECIMALS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 82,
																				"src": "6100:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6096:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 368,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6095:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6091:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6084:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 362,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6084:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6084:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6061:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "6061:49:0"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "rebaseFunctionUpperPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "6120:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6159:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6165:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 378,
																							"name": "DECIMALS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 82,
																							"src": "6170:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 379,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6181:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "6170:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 381,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6169:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6165:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 383,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6164:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6159:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 374,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6152:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6152:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6120:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "6120:65:0"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "rebaseFunctionLowerPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "6202:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "6242:3:0",
																			"subExpression": {
																				"hexValue": "3130",
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6243:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_10_by_1",
																				"typeString": "int_const -10"
																			}
																		}
																	],
																	"id": 393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6241:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_10_by_1",
																		"typeString": "int_const -10"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6256:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 399,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 397,
																							"name": "DECIMALS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 82,
																							"src": "6261:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 398,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6272:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "6261:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 400,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6260:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6256:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6249:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 394,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6249:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6249:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "6241:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 389,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6234:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6234:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6202:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "6202:74:0"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 407,
														"name": "epoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "6295:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6303:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6295:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6295:9:0"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "cmmd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "6315:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICMMD_$18",
															"typeString": "contract ICMMD"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 412,
														"name": "cmmd_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "6322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICMMD_$18",
															"typeString": "contract ICMMD"
														}
													},
													"src": "6315:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICMMD_$18",
														"typeString": "contract ICMMD"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "6315:12:0"
											},
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 415,
														"name": "baseCpi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "6337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 416,
														"name": "baseCpi_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "6347:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6337:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "6337:18:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5641:223:0",
										"text": " @dev ZOS upgradable contract initialization method.\n      It is called at the time of contract creation to invoke parent class initializers and\n      initialize the contract's state variables."
									},
									"functionSelector": "cd6dc687",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "5878:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "cmmd_",
												"nameLocation": "5904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5898:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ICMMD_$18",
													"typeString": "contract ICMMD"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "ICMMD",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 18,
														"src": "5898:5:0"
													},
													"referencedDeclaration": 18,
													"src": "5898:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICMMD_$18",
														"typeString": "contract ICMMD"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "baseCpi_",
												"nameLocation": "5927:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5919:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5888:53:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5949:0:0"
									},
									"scope": 718,
									"src": "5869:493:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "6862:1145:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "delta",
														"nameLocation": "6879:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "6872:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 434,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"nodeType": "VariableDeclarationStatement",
												"src": "6872:12:0"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "6895:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 440,
																"name": "normalizedRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6919:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 441,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "6934:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"id": 438,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "6903:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 987,
															"src": "6903:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6903:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6895:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "6895:43:0"
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "exponent",
														"nameLocation": "7035:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "7028:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 445,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 451,
																	"name": "growth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "7078:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 452,
																	"name": "delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "7085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 449,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "7062:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 922,
																"src": "7062:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7062:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 454,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "7092:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 447,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7046:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "7046:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7046:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:68:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 457,
														"name": "exponent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "7178:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"id": 460,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "7205:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"hexValue": "313030",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7209:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"expression": {
																"id": 458,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "7189:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "7189:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7189:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7178:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "7174:101:0",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "7215:60:0",
													"statements": [
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 464,
																	"name": "exponent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "7229:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 467,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 117,
																			"src": "7256:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"hexValue": "313030",
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7260:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"id": 465,
																			"name": "SafeMathInt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1204,
																			"src": "7240:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																				"typeString": "type(library SafeMathInt)"
																			}
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 922,
																		"src": "7240:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7240:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7229:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "7229:35:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 474,
														"name": "exponent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "7288:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"id": 477,
																"name": "ONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "7315:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "7319:4:0",
																"subExpression": {
																	"hexValue": "313030",
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_100_by_1",
																	"typeString": "int_const -100"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_rational_minus_100_by_1",
																	"typeString": "int_const -100"
																}
															],
															"expression": {
																"id": 475,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "7299:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "7299:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7299:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7288:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "7284:103:0",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "7326:61:0",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 482,
																	"name": "exponent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "7340:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 485,
																			"name": "ONE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 117,
																			"src": "7367:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "7371:4:0",
																			"subExpression": {
																				"hexValue": "313030",
																				"id": 486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7372:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_100_by_1",
																				"typeString": "int_const -100"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_rational_minus_100_by_1",
																				"typeString": "int_const -100"
																			}
																		],
																		"expression": {
																			"id": 483,
																			"name": "SafeMathInt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1204,
																			"src": "7351:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																				"typeString": "type(library SafeMathInt)"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 922,
																		"src": "7351:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7351:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7340:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "7340:36:0"
														}
													]
												}
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "pow",
														"nameLocation": "7404:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "7397:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 493,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7397:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [
														{
															"id": 497,
															"name": "exponent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 498,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "7441:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 495,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7410:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "twoPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1203,
														"src": "7410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7410:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7397:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "pow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7479:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7486:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7479:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "7475:51:0",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "7489:37:0",
													"statements": [
														{
															"expression": {
																"id": 504,
																"name": "lower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "7510:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 433,
															"id": 505,
															"nodeType": "Return",
															"src": "7503:12:0"
														}
													]
												}
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7542:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "7535:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 508,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7535:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 512,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 513,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "7576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 510,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7554:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 987,
														"src": "7554:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7554:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7535:47:0"
											},
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "intermediate",
														"nameLocation": "7615:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "7608:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 516,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 522,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "7662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 523,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "7668:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 520,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "7646:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 922,
																"src": "7646:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7646:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 525,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "7673:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 518,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7630:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "7630:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7608:71:0"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 528,
														"name": "intermediate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "7689:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 533,
																		"name": "intermediate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "7736:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 534,
																		"name": "ONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "7749:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"id": 531,
																		"name": "SafeMathInt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "7720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																			"typeString": "type(library SafeMathInt)"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 922,
																	"src": "7720:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7720:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 536,
																"name": "pow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "7754:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"id": 529,
																"name": "SafeMathInt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "7704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																	"typeString": "type(library SafeMathInt)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 948,
															"src": "7704:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7704:54:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7689:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "7689:69:0"
											},
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7775:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "7768:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 540,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"id": 544,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "7805:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 545,
															"name": "intermediate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7809:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 542,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 987,
														"src": "7789:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7789:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7768:54:0"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "rebasePercentage",
														"nameLocation": "7879:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "7872:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 548,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 554,
																				"name": "numerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "7931:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			{
																				"id": 555,
																				"name": "ONE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 117,
																				"src": "7941:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"expression": {
																				"id": 552,
																				"name": "SafeMathInt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1204,
																				"src": "7915:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																					"typeString": "type(library SafeMathInt)"
																				}
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 922,
																			"src": "7915:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																				"typeString": "function (int256,int256) pure returns (int256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7915:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 557,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "7946:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"id": 550,
																		"name": "SafeMathInt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "7899:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																			"typeString": "type(library SafeMathInt)"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 948,
																	"src": "7899:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7899:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 559,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7898:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 560,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "7962:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7898:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7872:95:0"
											},
											{
												"expression": {
													"id": 563,
													"name": "rebasePercentage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "7984:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 433,
												"id": 564,
												"nodeType": "Return",
												"src": "7977:23:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "6368:323:0",
										"text": " Computes the percentage of supply to be added or removed:\n Using the function in https://github.com/ampleforth/AIPs/blob/master/AIPs/aip-5.md\n @param normalizedRate value of rate/targetRate in DECIMALS decimal fixed point number\n @return The percentage of supply to be added or removed."
									},
									"functionSelector": "3a785af1",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeRebasePercentage",
									"nameLocation": "6705:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "normalizedRate",
												"nameLocation": "6745:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6738:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 422,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "lower",
												"nameLocation": "6776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6769:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 424,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6769:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "upper",
												"nameLocation": "6798:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6791:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 426,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6791:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "growth",
												"nameLocation": "6820:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6813:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 428,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6813:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:104:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6854:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 431,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6853:8:0"
									},
									"scope": 718,
									"src": "6696:1311:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "8242:570:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 577,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "8281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 578,
															"name": "targetRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "8287:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "withinDeviationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8256:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256) view returns (bool)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8256:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "8252:81:0",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "8300:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8321:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 575,
															"id": 581,
															"nodeType": "Return",
															"src": "8314:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "targetRateSigned",
														"nameLocation": "8349:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "8342:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 584,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8342:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"id": 588,
															"name": "targetRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "8375:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8368:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 586,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8368:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8368:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8342:44:0"
											},
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "normalizedRate",
														"nameLocation": "8403:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "8396:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 591,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8396:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 599,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "8459:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8452:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 597,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8452:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8452:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 601,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "8465:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "8436:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 922,
																"src": "8436:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8436:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 603,
															"name": "targetRateSigned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "8470:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 593,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "8420:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "8420:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8420:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8396:91:0"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "rebasePercentage",
														"nameLocation": "8504:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "8497:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 606,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [
														{
															"id": 609,
															"name": "normalizedRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "8560:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 610,
															"name": "rebaseFunctionLowerPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "8588:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 611,
															"name": "rebaseFunctionUpperPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "8631:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 612,
															"name": "rebaseFunctionGrowth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "8674:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 608,
														"name": "computeRebasePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "8523:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256,int256,int256) pure returns (int256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8523:181:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8497:207:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 621,
																					"name": "cmmd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "8761:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ICMMD_$18",
																						"typeString": "contract ICMMD"
																					}
																				},
																				"id": 622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalSupply",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 8,
																				"src": "8761:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8761:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8754:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 619,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8754:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8754:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 625,
																	"name": "rebasePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "8781:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"id": 617,
																	"name": "SafeMathInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "8738:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																		"typeString": "type(library SafeMathInt)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 922,
																"src": "8738:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8738:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"components": [
																{
																	"id": 627,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "8800:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8799:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 615,
															"name": "SafeMathInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "8722:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMathInt_$1204_$",
																"typeString": "type(library SafeMathInt)"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "8722:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8722:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 575,
												"id": 630,
												"nodeType": "Return",
												"src": "8715:90:0"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "8013:131:0",
										"text": " @return Computes the total supply adjustment in response to the exchange rate\n         and the targetRate."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeSupplyDelta",
									"nameLocation": "8158:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "8185:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "8177:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "targetRate",
												"nameLocation": "8199:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "8191:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8176:34:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "8234:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 573,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8233:8:0"
									},
									"scope": 718,
									"src": "8149:663:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "9262:335:0",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "absoluteDeviationThreshold",
														"nameLocation": "9280:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "9272:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9272:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 648,
																	"name": "targetRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9335:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "deviationThreshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "9346:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "9322:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$852_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 755,
																"src": "9322:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9322:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9366:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 652,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "9370:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9366:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 644,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "9309:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$852_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 780,
														"src": "9309:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9309:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9272:107:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 656,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "9412:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 657,
																		"name": "targetRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "9420:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9412:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 661,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "9447:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 662,
																				"name": "targetRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "9452:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 659,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "9434:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$852_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 805,
																			"src": "9434:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9434:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 664,
																		"name": "absoluteDeviationThreshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "9466:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9434:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9412:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 667,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9411:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 668,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "9510:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 669,
																		"name": "targetRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "9517:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9510:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 673,
																				"name": "targetRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "9544:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 674,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "9555:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 671,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "9531:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$852_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 805,
																			"src": "9531:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9531:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 676,
																		"name": "absoluteDeviationThreshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "9563:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9531:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9510:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 679,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9509:81:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9411:179:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 641,
												"id": 681,
												"nodeType": "Return",
												"src": "9392:198:0"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "8818:314:0",
										"text": " @param rate The current exchange rate, an 18 decimal fixed point number.\n @param targetRate The target exchange rate, an 18 decimal fixed point number.\n @return If the rate is within the deviation threshold from the target rate, returns true.\n         Otherwise, returns false."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withinDeviationThreshold",
									"nameLocation": "9146:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "9179:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "9171:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "targetRate",
												"nameLocation": "9193:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "9185:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:34:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "9252:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9252:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9251:6:0"
									},
									"scope": 718,
									"src": "9137:460:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "9665:193:0",
										"statements": [
											{
												"expression": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 690,
														"name": "faucetCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "9675:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9690:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9675:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "9675:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 698,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9734:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9734:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 700,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "9746:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 701,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "9756:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 702,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9764:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "9764:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 697,
																"name": "TransferStruct",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "9719:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_TransferStruct_$60_storage_ptr_$",
																	"typeString": "type(struct CMMDPolicy.TransferStruct storage pointer)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9719:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferStruct_$60_memory_ptr",
																"typeString": "struct CMMDPolicy.TransferStruct memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TransferStruct_$60_memory_ptr",
																"typeString": "struct CMMDPolicy.TransferStruct memory"
															}
														],
														"expression": {
															"id": 694,
															"name": "transactions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "9701:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TransferStruct_$60_storage_$dyn_storage",
																"typeString": "struct CMMDPolicy.TransferStruct storage ref[] storage ref"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9701:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TransferStruct_$60_storage_$dyn_storage_ptr_$_t_struct$_TransferStruct_$60_storage_$returns$__$bound_to$_t_array$_t_struct$_TransferStruct_$60_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CMMDPolicy.TransferStruct storage ref[] storage pointer,struct CMMDPolicy.TransferStruct storage ref)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9701:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "9701:80:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9805:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9805:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "9817:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 711,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "9827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 712,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9835:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9835:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "9796:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9796:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "EmitStatement",
												"src": "9791:60:0"
											}
										]
									},
									"functionSelector": "7b56c2b2",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "faucet",
									"nameLocation": "9612:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "9619:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9619:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9650:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "9645:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9618:39:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9665:0:0"
									},
									"scope": 718,
									"src": "9603:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 719,
							"src": "643:9217:0",
							"usedErrors": []
						}
					],
					"src": "90:9771:0"
				},
				"id": 0
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							852
						]
					},
					"id": 853,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 720,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "24:90:1",
								"text": " @title SafeMath\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 852,
							"linearizedBaseContracts": [
								852
							],
							"name": "SafeMath",
							"nameLocation": "123:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "278:354:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "509:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "514:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "509:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "505:45:1",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "517:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "538:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 730,
															"id": 735,
															"nodeType": "Return",
															"src": "531:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "568:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "560:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "560:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 740,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "572:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 741,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "576:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "572:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "560:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 745,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "595:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 746,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "599:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "604:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "587:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "587:19:1"
											},
											{
												"expression": {
													"id": 752,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "624:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 730,
												"id": 753,
												"nodeType": "Return",
												"src": "617:8:1"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "138:68:1",
										"text": " @dev Multiplies two numbers, reverts on overflow."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "220:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "232:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "224:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "243:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "235:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:22:1"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 852,
									"src": "211:421:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "819:221:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 766,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "837:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "841:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "837:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "829:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "829:14:1"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "919:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"id": 777,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 772,
													"src": "1032:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 764,
												"id": 778,
												"nodeType": "Return",
												"src": "1025:8:1"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "638:109:1",
										"text": " @dev Integer division of two numbers truncating the quotient, reverts on division by zero."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "761:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "773:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "765:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "784:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "776:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:22:1"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "810:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:9:1"
									},
									"scope": 852,
									"src": "752:288:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "1230:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "1248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 792,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "1253:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1248:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "1240:15:1"
											},
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1273:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 804,
														"src": "1265:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1265:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 798,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1277:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 799,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1281:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1277:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1265:17:1"
											},
											{
												"expression": {
													"id": 802,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 797,
													"src": "1300:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 789,
												"id": 803,
												"nodeType": "Return",
												"src": "1293:8:1"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1046:112:1",
										"text": " @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1172:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1184:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1176:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1195:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1187:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:22:1"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1221:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:9:1"
									},
									"scope": 852,
									"src": "1163:145:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1448:78:1",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1466:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "1458:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 817,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1470:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 818,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1470:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1458:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "1493:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 823,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "1498:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1493:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1485:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "1485:15:1"
											},
											{
												"expression": {
													"id": 827,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 816,
													"src": "1518:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 814,
												"id": 828,
												"nodeType": "Return",
												"src": "1511:8:1"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "1314:62:1",
										"text": " @dev Adds two numbers, reverts on overflow."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1390:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1402:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1394:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1413:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1405:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:22:1"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1439:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:9:1"
									},
									"scope": 852,
									"src": "1381:145:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "1738:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "1756:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1761:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1756:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1748:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1748:15:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "1780:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 847,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "1784:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1780:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 839,
												"id": 849,
												"nodeType": "Return",
												"src": "1773:12:1"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "1532:134:1",
										"text": " @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n reverts when dividing by zero."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1680:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1692:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1684:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1703:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1695:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:22:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1729:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:9:1"
									},
									"scope": 852,
									"src": "1671:121:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 853,
							"src": "115:1679:1",
							"usedErrors": []
						}
					],
					"src": "0:1794:1"
				},
				"id": 1
			},
			"contracts/SafeMathInt.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMathInt.sol",
					"exportedSymbols": {
						"SafeMathInt": [
							1204
						]
					},
					"id": 1205,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "1154:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 855,
								"nodeType": "StructuredDocumentation",
								"src": "1178:93:2",
								"text": " @title SafeMathInt\n @dev Math operations for int256 with overflow safety checks."
							},
							"fullyImplemented": true,
							"id": 1204,
							"linearizedBaseContracts": [
								1204
							],
							"name": "SafeMathInt",
							"nameLocation": "1280:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 863,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nameLocation": "1322:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "1298:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 856,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1298:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 862,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1342:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 858,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1335:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 857,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:2",
													"typeDescriptions": {}
												}
											},
											"id": 860,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1335:9:2",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323535",
											"id": 861,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1348:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "1335:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 873,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nameLocation": "1381:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1204,
									"src": "1357:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 864,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1357:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"id": 872,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1394:19:2",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1403:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1396:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 865,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1396:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1396:9:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323535",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1409:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1396:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 871,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1395:18:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1567:232:2",
										"statements": [
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1584:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 921,
														"src": "1577:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 883,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1577:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 885,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1588:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 886,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1592:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1577:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "1675:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 891,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "1680:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1675:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 893,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 876,
																				"src": "1695:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 894,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "1699:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1695:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 896,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1694:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 897,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 878,
																				"src": "1715:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 898,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "1719:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1715:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 900,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1714:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1694:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1675:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1667:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1667:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 906,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 878,
																			"src": "1750:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1750:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 910,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 884,
																				"src": "1762:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 911,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 878,
																				"src": "1766:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1762:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 913,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "1771:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "1762:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1749:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1741:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "1741:33:2"
											},
											{
												"expression": {
													"id": 919,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 884,
													"src": "1791:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 882,
												"id": 920,
												"nodeType": "Return",
												"src": "1784:8:2"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "1420:78:2",
										"text": " @dev Multiplies two int256 variables and fails on overflow."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1512:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1523:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1516:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 875,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1533:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1526:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:20:2"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1559:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 880,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:8:2"
									},
									"scope": 1204,
									"src": "1503:296:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "1953:189:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 933,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "2030:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2035:2:2",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2036:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "2030:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 937,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "2041:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 938,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "2046:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2041:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2030:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2022:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "2022:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2130:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 944,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2134:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2130:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 931,
												"id": 946,
												"nodeType": "Return",
												"src": "2123:12:2"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "1805:79:2",
										"text": " @dev Division of two int256 variables and fails on overflow."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1898:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1909:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1902:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 924,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1919:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1912:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 926,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:20:2"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1945:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 929,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:8:2"
									},
									"scope": 1204,
									"src": "1889:253:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "2294:108:2",
										"statements": [
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2311:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 986,
														"src": "2304:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 958,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2315:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 961,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "2319:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2315:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2304:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 965,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "2339:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2344:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2339:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 968,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "2349:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 969,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "2354:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2349:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2339:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 972,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2338:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 973,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "2361:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2365:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2361:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 976,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "2370:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 977,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "2374:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2370:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2361:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 980,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2360:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2338:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2330:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "2330:47:2"
											},
											{
												"expression": {
													"id": 984,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 959,
													"src": "2394:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 957,
												"id": 985,
												"nodeType": "Return",
												"src": "2387:8:2"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "2148:77:2",
										"text": " @dev Subtracts two int256 variables and fails on overflow."
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2239:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2250:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2243:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 950,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2243:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2260:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2253:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 952,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:20:2"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2286:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 955,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2286:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:8:2"
									},
									"scope": 1204,
									"src": "2230:172:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "2549:108:2",
										"statements": [
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2566:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "2559:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 997,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2559:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2570:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1000,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2574:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2570:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2559:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1004,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "2594:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2599:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2594:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1007,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "2604:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1008,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "2609:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2604:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2594:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1012,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "2616:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2616:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1015,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "2625:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1016,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "2629:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2625:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2616:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2615:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2593:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1003,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2585:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "2585:47:2"
											},
											{
												"expression": {
													"id": 1023,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 998,
													"src": "2649:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 996,
												"id": 1024,
												"nodeType": "Return",
												"src": "2642:8:2"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "2408:72:2",
										"text": " @dev Adds two int256 variables and fails on overflow."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2494:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2505:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2498:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 989,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2515:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2508:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 991,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:20:2"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2541:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 994,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2541:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2540:8:2"
									},
									"scope": 1204,
									"src": "2485:172:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "2796:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "2814:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1036,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "2819:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2814:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "2806:24:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1040,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "2847:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2851:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2847:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1045,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "2860:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2847:14:2",
													"trueExpression": {
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2855:2:2",
														"subExpression": {
															"id": 1043,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "2856:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1047,
												"nodeType": "Return",
												"src": "2840:21:2"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "2663:74:2",
										"text": " @dev Converts to absolute value, and fails on overflow."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "2751:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2755:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1028,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2755:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:10:2"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2788:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1031,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2788:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:8:2"
									},
									"scope": 1204,
									"src": "2742:126:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "3275:1064:2",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "reciprocal",
														"nameLocation": "3290:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "3285:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1059,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3303:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3285:23:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "exp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "3322:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3328:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "3318:83:2",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "3331:70:2",
													"statements": [
														{
															"expression": {
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1066,
																	"name": "reciprocal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "3345:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3358:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3345:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "3345:17:2"
														},
														{
															"expression": {
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1070,
																	"name": "exp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "3376:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1072,
																			"name": "exp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "3386:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1071,
																		"name": "abs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "3382:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256) pure returns (int256)"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3382:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3376:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1075,
															"nodeType": "ExpressionStatement",
															"src": "3376:14:2"
														}
													]
												}
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "ks",
														"nameLocation": "3507:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "3490:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
															"typeString": "int256[5]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "3490:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1082,
															"length": {
																"hexValue": "35",
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3497:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "ArrayTypeName",
															"src": "3490:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
																"typeString": "int256[5]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"hexValue": "31343134323133353632333733303935303439",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3533:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1414213562373095049_by_1",
																		"typeString": "int_const 1414213562373095049"
																	},
																	"value": "1414213562373095049"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1414213562373095049_by_1",
																		"typeString": "int_const 1414213562373095049"
																	}
																],
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1084,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3526:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3526:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"hexValue": "31313839323037313135303032373231303637",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3567:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1189207115002721067_by_1",
																"typeString": "int_const 1189207115002721067"
															},
															"value": "1189207115002721067"
														},
														{
															"hexValue": "31303930353037373332363635323537363539",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3600:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1090507732665257659_by_1",
																"typeString": "int_const 1090507732665257659"
															},
															"value": "1090507732665257659"
														},
														{
															"hexValue": "31303434323733373832343237343133383430",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3633:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1044273782427413840_by_1",
																"typeString": "int_const 1044273782427413840"
															},
															"value": "1044273782427413840"
														},
														{
															"hexValue": "31303231383937313438363534313136363738",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3666:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1021897148654116678_by_1",
																"typeString": "int_const 1021897148654116678"
															},
															"value": "1021897148654116678"
														}
													],
													"id": 1092,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3512:183:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
														"typeString": "int256[5] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3490:205:2"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "whole",
														"nameLocation": "3712:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "3705:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1094,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"arguments": [
														{
															"id": 1097,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "3724:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1098,
															"name": "one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "3729:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1096,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3720:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3720:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3705:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "whole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3751:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3760:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3751:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3743:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3743:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "3743:21:2"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3781:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "3774:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1107,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3774:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1124,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "31",
																				"id": 1114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3809:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				}
																			],
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3801:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1112,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3801:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3801:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "whole",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1095,
																				"src": "3823:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3815:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1116,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3815:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3815:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3801:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3794:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3794:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3794:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 1122,
															"name": "one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "3832:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1109,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3790:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3774:62:2"
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "3853:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "3846:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1125,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3846:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"arguments": [
														{
															"id": 1128,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "3869:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1130,
																	"name": "whole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 1131,
																	"name": "one",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "3885:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1129,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "3874:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																	"typeString": "function (int256,int256) pure returns (int256)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3874:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1127,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3865:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3865:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3846:44:2"
											},
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "3908:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "3901:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1135,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3901:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1141,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "one",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "3922:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"hexValue": "32",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3927:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1137,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3918:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3901:28:2"
											},
											{
												"body": {
													"id": 1185,
													"nodeType": "Block",
													"src": "3971:254:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1152,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3989:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1153,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "4002:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3989:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1177,
															"nodeType": "IfStatement",
															"src": "3985:191:2",
															"trueBody": {
																"id": 1176,
																"nodeType": "Block",
																"src": "4011:165:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1155,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1126,
																				"src": "4029:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1157,
																						"name": "remaining",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1126,
																						"src": "4045:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"id": 1158,
																						"name": "current",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1136,
																						"src": "4056:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1156,
																					"name": "sub",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "4041:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4041:23:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4029:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 1161,
																		"nodeType": "ExpressionStatement",
																		"src": "4029:35:2"
																	},
																	{
																		"expression": {
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1162,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "4082:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1165,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1108,
																								"src": "4099:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1166,
																									"name": "ks",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1083,
																									"src": "4107:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
																										"typeString": "int256[5] memory"
																									}
																								},
																								"id": 1168,
																								"indexExpression": {
																									"id": 1167,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1143,
																									"src": "4110:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4107:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								},
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 1164,
																							"name": "mul",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 922,
																							"src": "4095:3:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																								"typeString": "function (int256,int256) pure returns (int256)"
																							}
																						},
																						"id": 1169,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4095:18:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1172,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1170,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4115:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1171,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4119:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "4115:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"id": 1163,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 948,
																					"src": "4091:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4091:31:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "4082:40:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 1175,
																		"nodeType": "ExpressionStatement",
																		"src": "4082:40:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1178,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "4189:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1180,
																			"name": "current",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1136,
																			"src": "4203:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"hexValue": "32",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4212:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			}
																		],
																		"id": 1179,
																		"name": "div",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4199:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4199:15:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4189:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "4189:25:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "3959:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3963:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "3959:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"initializationExpression": {
													"assignments": [
														1143
													],
													"declarations": [
														{
															"constant": false,
															"id": 1143,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3952:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1186,
															"src": "3944:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1142,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3944:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1145,
													"initialValue": {
														"hexValue": "30",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3944:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3966:3:2",
														"subExpression": {
															"id": 1149,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3966:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1151,
													"nodeType": "ExpressionStatement",
													"src": "3966:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3939:286:2"
											},
											{
												"condition": {
													"id": 1187,
													"name": "reciprocal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "4238:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "4234:76:2",
												"trueBody": {
													"id": 1198,
													"nodeType": "Block",
													"src": "4250:60:2",
													"statements": [
														{
															"expression": {
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1188,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "4264:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1191,
																					"name": "one",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "4281:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1192,
																					"name": "one",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "4286:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1190,
																				"name": "mul",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "4277:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																					"typeString": "function (int256,int256) pure returns (int256)"
																				}
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4277:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"id": 1194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "4292:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1189,
																		"name": "div",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4273:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4273:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "4264:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "4264:35:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1200,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1108,
													"src": "4326:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1201,
												"nodeType": "Return",
												"src": "4319:13:2"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "2874:323:2",
										"text": " @dev Computes 2^exp with limited precision where -100 <= exp <= 100 * one\n @param one 1.0 represented in the same fixed point number format as exp\n @param exp The power to raise 2 to -100 <= exp <= 100 * one\n @return 2^exp represented with same number of decimals after the point as one"
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "twoPower",
									"nameLocation": "3211:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "exp",
												"nameLocation": "3227:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3220:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1051,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3220:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "one",
												"nameLocation": "3239:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1053,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:24:2"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3267:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1056,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:8:2"
									},
									"scope": 1204,
									"src": "3202:1137:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1205,
							"src": "1272:3069:2",
							"usedErrors": []
						}
					],
					"src": "1154:3187:2"
				},
				"id": 2
			}
		}
	}
}